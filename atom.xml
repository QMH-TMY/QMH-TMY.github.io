<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shieber</title>
  
  <subtitle>友朋自远方来，不亦乐乎?</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.shieber.cn/"/>
  <updated>2020-06-05T02:09:54.474Z</updated>
  <id>http://www.shieber.cn/</id>
  
  <author>
    <name>Shieber</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用RSS快速干净地获取各领域信息</title>
    <link href="http://www.shieber.cn/title/9ade8626/"/>
    <id>http://www.shieber.cn/title/9ade8626/</id>
    <published>2020-06-04T14:22:55.000Z</published>
    <updated>2020-06-05T02:09:54.474Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2020/06/04/tBLh11.jpg" alt="rsslogo"></p><a id="more"></a><p>信息时代，信息更新快，碎片化。大部分人都通过各类新闻软件获取信息，比如头条，腾讯新闻，微信公众号等等。然而这些信息是别人特意挑选，甚至是算法推送的。有没有可能自己选择些新闻信息聚合在一个软件里来看呢？当然有，那就是<a href="https://baike.baidu.com/item/rss/24470" target="_blank" rel="noopener">RSS简易信息聚合</a>，可以将其理解成各信息发布渠道提供的另一种信息访问方式。</p><p>比如一个网站，除了可以在浏览器中输入<a href="http://xxx" target="_blank" rel="noopener">http://xxx</a> 登录查看点击网页查看，还可用RSS获取同样的内容，而且可将各网站的信息聚合在一个软件。RSS的优点，多个消息渠道聚合在一个APP里节约空间，可自动推送，不会被算法分析，没有广告，隐私程度高，不想看了可随时取消订阅。</p><p>有很多优秀的RSS软件，在此推荐几个，可能需要翻墙到Google play才能获得。  </p><table><thead><tr><th align="left">软件名</th><th align="left">支持平台</th><th align="left">地址</th></tr></thead><tbody><tr><td align="left">RSS reader</td><td align="left">Android</td><td align="left"><a href="https://play.google.com" target="_blank" rel="noopener">https://play.google.com</a></td></tr><tr><td align="left">Winds</td><td align="left">Win,Mac,Linux</td><td align="left"><a href="https://getstream.io/winds" target="_blank" rel="noopener">https://getstream.io/winds</a></td></tr><tr><td align="left">订阅帝</td><td align="left">Android</td><td align="left"><a href="https://www.dingyuedi.com" target="_blank" rel="noopener">https://www.dingyuedi.com</a></td></tr></tbody></table><p>如下是Google play上的RSS软件，太多了，都很不错，各个特色不一样，有的收费。</p><p><img src="https://s1.ax1x.com/2020/06/05/tDNHl8.png" alt="rss2"></p><p><img src="https://s1.ax1x.com/2020/06/05/tDNxkn.png" alt="rss3"></p><p>接下来的一个问题是，我怎么知道某新闻是否提供RSS信息发布渠道呢？</p><p>这个有多种解决方法。</p><p>第一：网站提供RSS发布渠道，那么通常在顶部菜单、右侧菜单、底部菜单等地方会有RSS图标，鼠标放RSS图标上面或者点击进去可以看到对应的RSS地址，比如本网站订阅地址<a href="https://www.shieber.cn/atom.xml，">https://www.shieber.cn/atom.xml，</a> 其他网站可能是<a href="https://xxx.xxx.xx/feed，https://xxx.xxx.xx/rss。" target="_blank" rel="noopener">https://xxx.xxx.xx/feed，https://xxx.xxx.xx/rss。</a> 总之结尾是 atom.xml、feed、rss等，可多次尝试。</p><p>下图左侧橙色RSS图标很显眼，鼠标放上面，最下面就是订阅地址，添加到RSS软件里，这些博客就可以看了。</p><p><img src="https://s1.ax1x.com/2020/06/05/tDNgyD.png" alt="rss1"></p><p>第二：网站不提供RSS发布渠道，此时可以利用工具自己制作该网站的RSS源并订阅。制作工具及使用方法可以搜索一下，比如<a href="http://createfeed.fivefilters.org" target="_blank" rel="noopener">Feed Creatro</a>和<a href="http://www.feed43.com" target="_blank" rel="noopener">feed43</a>，具体操作可以看<a href="https://zhuanlan.zhihu.com/p/64457116" target="_blank" rel="noopener">如何用RSS订阅？</a>。</p><p>第三：利用别人总结好的源，直接订阅，比如<a href="https://www.zhihu.com/question/19580096" target="_blank" rel="noopener">你必读的RSS订阅源有哪些？</a>或者一些RSS订阅源汇聚网站如<a href="https://ohmyrss.com" target="_blank" rel="noopener">己思</a>。</p><p>微博，公众号，简书，B站，贴吧，知乎，豆瓣，抖音，网易云音乐，Github都是可以订阅的源。要是都开App，太麻烦，都聚合到一个App，岂不美哉？</p><p>自己挑选的源，内容要宽泛，质量要有保证，这样接受到的讯息才能和其他新闻软件有所差别，听见不同的声音。但凡用RSS的人都会发现类似其他新闻软件里的一片光明没了，民间疾苦冒了出来；对伟光正感性地歌功颂德没了，却更多看到理性的批评和民间疾苦。</p><p>下面是操作指南。</p><iframe src="https://player.bilibili.com/player.html?aid=38629650&cid=70525810" width="900" height="550" frameborder="no" framespacing="0" allowfullscreen="true"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/06/04/tBLh11.jpg&quot; alt=&quot;rsslogo&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="通信" scheme="http://www.shieber.cn/categories/%E9%80%9A%E4%BF%A1/"/>
    
    
      <category term="information" scheme="http://www.shieber.cn/tags/information/"/>
    
  </entry>
  
  <entry>
    <title>数据结构及各语言中的实现</title>
    <link href="http://www.shieber.cn/title/fe068447/"/>
    <id>http://www.shieber.cn/title/fe068447/</id>
    <published>2020-05-31T12:53:39.000Z</published>
    <updated>2020-05-31T13:56:39.557Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2020/05/31/t3QBYF.png" alt="data structure"></p><a id="more"></a><p><strong>数据结构各种各样，其应用领域也不尽相同，现做部分整理。</strong></p><h1 id="一-数据结构"><a href="#一-数据结构" class="headerlink" title="一. 数据结构"></a>一. 数据结构</h1><table><thead><tr><th align="left">类型</th><th align="left">应用领域</th></tr></thead><tbody><tr><td align="left">数组</td><td align="left">同种数据存放，寻址方便</td></tr><tr><td align="left">链表</td><td align="left">用在文件系统，内存管理，数据库冲突解决，set集合，git记录</td></tr><tr><td align="left">跳表</td><td align="left">由链表通过索引构建，有序，用在替代平衡树(AVL Tree)，如redis就有使用，复杂度O(logn)</td></tr><tr><td align="left">栈</td><td align="left">用在递归，逆序输出，网页网址保存，计算表达式，运算符优先级，括号检查，数制转换，函数调用</td></tr><tr><td align="left">队列</td><td align="left">用在操作系统任务安排，模拟派对，一切按序安排的任务</td></tr><tr><td align="left">散列</td><td align="left">用在MD5，SHA1等加密算法，数据校验，数据分片(分布式)，负载均衡，散列表类似数组结合链表</td></tr><tr><td align="left">树</td><td align="left">树是链表的扩展，用在数据库，文件系统，搜索引擎，编译器，二/三/四/八叉树，字典树，红黑树，B+树，Trie树</td></tr><tr><td align="left">堆</td><td align="left">等效于完全二叉树，用在操作系统分配内存，优先队列，海量数据查找，排序</td></tr><tr><td align="left">图</td><td align="left">用在知识图谱，图数据库，任务安排，最短路径，最小生成树，网络处理，计算生物学</td></tr></tbody></table><h1 id="二-各语言的数据类型"><a href="#二-各语言的数据类型" class="headerlink" title="二. 各语言的数据类型"></a>二. 各语言的数据类型</h1><h2 id="C-C-语言"><a href="#C-C-语言" class="headerlink" title="C/C++语言"></a>C/C++语言</h2><p><strong>基本类型</strong>:<br> 1.字符类型 char<br> 2.数值类型 short int long float double<br> 3.布尔类型 bool (C++独有)  </p><p><strong>构造类型</strong>:<br> 1.数组类型 array<br> 2.结构体型 struct<br> 3.共用体型 union<br> 4.枚举体型 enum  </p><p><strong>指针类型</strong>:<br> 1.pointer </p><p><strong>空类型</strong>:<br> 1.void</p><h2 id="Java语言"><a href="#Java语言" class="headerlink" title="Java语言"></a>Java语言</h2><p><strong>基本类型</strong>:<br> 1.字符类型 char<br> 2.布尔类型 boolean<br> 3.数值类型 byte short int long float double  </p><p><strong>引用类型</strong>:<br> 1.类类型   class<br> 2.接口类型 interface<br> 3.数组类型 array  </p><h2 id="Go语言"><a href="#Go语言" class="headerlink" title="Go语言"></a>Go语言</h2><p><strong>基本类型</strong>:<br> 1.字符及串 rune byte string<br> 2.布尔类型 true false<br> 3.数值类型 (u)int(8,16,32,64) float(32,64) complex  </p><p><strong>派生类型</strong>：<br>    1.指针类型 p := &amp;v (nil)<br>    2.数组类型 var nums [4]int{0,1,2,3}<br>    3.切片类型 基于数组位置实现<br>    4.映射类型 var m = make(map[string]string)<br>    4.结构类型<br>    5.管道类型<br>    6.接口类型 func (p *Ptr) getName() string{}<br>    8.函数类型 func sayHello(name strin){}  </p><h2 id="Python语言"><a href="#Python语言" class="headerlink" title="Python语言"></a>Python语言</h2><p><strong>不可变类型</strong>：<br> 1.数值类型 number<br> 2.字符串型 string<br> 3.元组类型 tuple   </p><p><strong>可变类型</strong>：<br> 1.列表类型 list<br> 2.字典类型 dict<br> 3.集合类型 set   </p><h2 id="JavaScript语言"><a href="#JavaScript语言" class="headerlink" title="JavaScript语言"></a>JavaScript语言</h2><p><strong>基本类型</strong>:<br>    1.对空类型 Null<br>    2.字符串型 String<br>    3.数值类型 Number<br>    4.大整数型 BigInt<br>    5.符号类型 Symbol<br>    6.布尔类型 boolean<br>    7.未定义型 Undefined  </p><p><strong>对象类型</strong>:<br>    1.对象类型 Object<br>    2.数组类型 Array<br>    3.函数类型 Function  </p><p><strong>网络数据传输</strong>:<br> 1.JSON</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/05/31/t3QBYF.png&quot; alt=&quot;data structure&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://www.shieber.cn/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="DataStructure" scheme="http://www.shieber.cn/tags/DataStructure/"/>
    
  </entry>
  
  <entry>
    <title>PyPython自带元素</title>
    <link href="http://www.shieber.cn/title/80b7d3cf/"/>
    <id>http://www.shieber.cn/title/80b7d3cf/</id>
    <published>2020-05-30T03:26:31.000Z</published>
    <updated>2020-05-31T01:02:12.277Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2020/05/30/tMtMUf.png" alt="pythoninternal"></p><a id="more"></a><h2 id="关键字33个"><a href="#关键字33个" class="headerlink" title="关键字33个"></a>关键字33个</h2><p>查看 help(‘keywords’)</p><table><thead><tr><th align="left">关键字</th><th align="left">解释</th><th align="left">关键字</th><th align="left">解释</th><th align="left">关键字</th><th align="left">解释</th><th align="left">关键字</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">False</td><td align="left">逻辑假</td><td align="left">def</td><td align="left">函数定义</td><td align="left">if</td><td align="left">逻辑判断</td><td align="left">raise</td><td align="left">抛出错误</td></tr><tr><td align="left">None</td><td align="left">空</td><td align="left">del</td><td align="left">删除元素</td><td align="left">import</td><td align="left">模块导入</td><td align="left">return</td><td align="left">返回</td></tr><tr><td align="left">True</td><td align="left">逻辑真</td><td align="left">elif</td><td align="left">判断分支</td><td align="left">in</td><td align="left">是否存在</td><td align="left">try</td><td align="left">尝试执行</td></tr><tr><td align="left">and</td><td align="left">逻辑与</td><td align="left">else</td><td align="left">判断分支</td><td align="left">is</td><td align="left">是否相等</td><td align="left">while</td><td align="left">循环</td></tr><tr><td align="left">as</td><td align="left">重命名元素</td><td align="left">except</td><td align="left">捕获错误</td><td align="left">lambda</td><td align="left">匿名函数</td><td align="left">with</td><td align="left">安全打开文件</td></tr><tr><td align="left">assert</td><td align="left">判断以抛出错误</td><td align="left">finally</td><td align="left">最终执行</td><td align="left">nonlocal</td><td align="left">非全局</td><td align="left">yield</td><td align="left">迭代器使用</td></tr><tr><td align="left">break</td><td align="left">中断循环</td><td align="left">for</td><td align="left">循环</td><td align="left">not</td><td align="left">逻辑非</td><td align="left"></td><td align="left"></td></tr><tr><td align="left">class</td><td align="left">类申明</td><td align="left">from</td><td align="left">模块导入</td><td align="left">or</td><td align="left">逻辑或</td><td align="left"></td><td align="left"></td></tr><tr><td align="left">continue</td><td align="left">重新循环</td><td align="left">global</td><td align="left">全局</td><td align="left">pass</td><td align="left">跳过</td><td align="left"></td><td align="left"></td></tr></tbody></table><h2 id="内置类型"><a href="#内置类型" class="headerlink" title="内置类型"></a>内置类型</h2><table><thead><tr><th align="left">类型</th><th align="left">具体</th><th align="left">类型</th><th align="left">具体</th></tr></thead><tbody><tr><td align="left">文本</td><td align="left">string</td><td align="left">映射</td><td align="left">dict</td></tr><tr><td align="left">数字</td><td align="left">int,float,complex</td><td align="left">集合</td><td align="left">set,frozenset</td></tr><tr><td align="left">布尔</td><td align="left">bool</td><td align="left">类</td><td align="left">class</td></tr><tr><td align="left">实例</td><td align="left">instance</td><td align="left">二进制</td><td align="left">bytes,bytearray,memoryview</td></tr><tr><td align="left">序列</td><td align="left">list,tuple,range</td><td align="left">异常</td><td align="left">XxxError</td></tr></tbody></table><h2 id="内置函数69个-全由C写成"><a href="#内置函数69个-全由C写成" class="headerlink" title="内置函数69个(全由C写成)"></a>内置函数69个(<a href="https://github.com/python/cpython/blob/master/Python/bltinmodule.c" target="_blank" rel="noopener">全由C写成</a>)</h2><table><thead><tr><th align="left">函数</th><th align="left">具体</th><th align="left">举例</th></tr></thead><tbody><tr><td align="left">abs(x)</td><td align="left">返回一个(整/浮点/复)数的绝对值(模)。若x定义了__abs__()，则abs(x)将返回x.__abs__()。</td><td align="left">abs(-1) -&gt; 1, abs(2+1j) -&gt; 2.23606797749979</td></tr><tr><td align="left">all(x)</td><td align="left">如果x是iterable的，且所有元素为真值，则返回True。</td><td align="left">a = [1,0,2], all(a) -&gt; False</td></tr><tr><td align="left">any(x)</td><td align="left">如果x是iterable的，且存在元素为真值，则返回True。</td><td align="left">a = [0,0,1], any(a) -&gt; True</td></tr><tr><td align="left">ascii(x)</td><td align="left">返回一个对象可打印的字符串。</td><td align="left">a = [0,0,1], ascii(a) -&gt; ‘[0,0,1]’</td></tr><tr><td align="left">bin(x)</td><td align="left">将一个整数转变为一个前缀为‘0b’的二进制字符串。</td><td align="left">a = 10, bin(a) -&gt; ‘0b1010’</td></tr><tr><td align="left">bool(x)</td><td align="left">若x为(空/非空)，就返回一个布尔值，(False/True)。</td><td align="left">a = 0,b=10; bool(a)-&gt; False, bool(b)-&gt; True</td></tr><tr><td align="left">breakpoint</td><td align="left">此函数会在调用时将你陷入调试器中。</td><td align="left"></td></tr><tr><td align="left">bytearray(x,coding,errs)</td><td align="left">由x的数值返回一个新的bytes数组，可变。</td><td align="left">a = [1,0], bytearray(a)-&gt; bytearray(b‘\x01\x00’)</td></tr><tr><td align="left">bytes(x,coding,errs)</td><td align="left">由x的数值返回一个新的bytes对象，不可变。</td><td align="left">a = [1,0], bytes(a)-&gt; b‘\x01\x00’</td></tr><tr><td align="left">callable(obj)</td><td align="left">如果参数obj是可调用的就返回True，否则返回False。</td><td align="left">a = lambda x: x**2, callable(a)-&gt; True</td></tr><tr><td align="left">chr(x)</td><td align="left">返回Unicode码位为整数x的字符的字符串格式。</td><td align="left">chr(97)-&gt; a，chr(38)-&gt;&amp;</td></tr><tr><td align="left">staticmethod</td><td align="left">把一个方法封装成静态方法@classmethod。</td><td align="left">在类中使用，使代码更规范。</td></tr><tr><td align="left">classmethod</td><td align="left">把一个方法封装成类方法@classmethod。</td><td align="left">在类中使用，使代码更规范。</td></tr><tr><td align="left">compile(x,flnm,mode)</td><td align="left">将x编译成代码或AST对象，代码对象可以被exec()或eval()执行。</td><td align="left">r = compile(‘3+4’,‘xx’,‘eval’), eval(r) -&gt; 7</td></tr><tr><td align="left">complex(real,imag)</td><td align="left">创建一个值为real+imag*j的复数或者转化一个字符串或数为复数。</td><td align="left">complex(1) -&gt; (1+0j)</td></tr><tr><td align="left">delattr(obj, name)</td><td align="left">删除obj指定的属性name。</td><td align="left"></td></tr><tr><td align="left">dict()</td><td align="left">新建字典。</td><td align="left">a = [(‘a’,1),(‘b’,2)], dict(a) -&gt; {‘a’:1,‘b’:2}</td></tr><tr><td align="left">dir(obj)</td><td align="left">如果没有参数，则返回本地作用域中的名称列表。如果有，返回有效属性列表。</td><td align="left"></td></tr><tr><td align="left">divmod(a,b)</td><td align="left">将两个（非复数）数字作为实参，并在执行整数除法时返回一对商和余数。</td><td align="left">divmod(3,2)-&gt; (1,1)</td></tr><tr><td align="left">enumerate(iter, st=0)</td><td align="left">返回一个枚举对象。iterable必须是一个序列，或iterator，或支持迭代的对象。</td><td align="left"></td></tr><tr><td align="left">eval(expr, glob, loc)</td><td align="left">实参是字符串，及可选的globals和locals。</td><td align="left">x = 1, eval(‘x+1’) -&gt; 2</td></tr><tr><td align="left">exec(obj,glob,loc)</td><td align="left">动态执行字节码或字符串。</td><td align="left"></td></tr><tr><td align="left">filter(func, iter)</td><td align="left">用函数func返回iterable中真值元素，构建一个新的迭代器。</td><td align="left">a = [1,2,3], b=filter(lambda x: x&lt;3, a), list(b)-&gt;[1,2]</td></tr><tr><td align="left">float(x)</td><td align="left">从数字或字符串x生成浮点数。</td><td align="left">float(‘ -2.3 ’) -&gt; -2.3</td></tr><tr><td align="left">format(val, format)</td><td align="left">将val转换为format控制的格式化表示。</td><td align="left">fomat(10,‘0b’) -&gt; ‘1010’</td></tr><tr><td align="left">frozenset(iterable)</td><td align="left">返回一个冻结的集合，冻结后集合不能再添加或删除任何元素。</td><td align="left"></td></tr><tr><td align="left">getattr(obj, name)</td><td align="left">返回对象命名属性的值。</td><td align="left"></td></tr><tr><td align="left">globals()</td><td align="left">返回表示当前全局符号表的字典。这总是当前模块的字典。</td><td align="left"></td></tr><tr><td align="left">hasattr(obj,name)</td><td align="left">如果name是对象属性的名称，则返回True。</td><td align="left"></td></tr><tr><td align="left">hash(obj)</td><td align="left">返回该对象的哈希值。</td><td align="left">a = ‘sr’, hash(a) -&gt; 1188857520429707771</td></tr><tr><td align="left">help(obj)</td><td align="left">启动内置的帮助系统，显示obj的帮助信息。</td><td align="left"></td></tr><tr><td align="left">hex(x)</td><td align="left">将整数转换为以‘0x’为前缀的小写十六进制字符串。</td><td align="left">hex(10) -&gt;‘0xa’</td></tr><tr><td align="left">id(obj)</td><td align="left">返回对象的标识值,该值是整数，在对象生命周期中保证唯一恒定。</td><td align="left">a = 1, id(a) -&gt; 10914496, b = a, id(b) -&gt; 10914496</td></tr><tr><td align="left">input(prompt)</td><td align="left">该函数从输入中读取一行，将其转换为字符串(除了末尾的换行符)并返回。</td><td align="left">input(‘&gt;&gt;&gt;’) -&gt; &gt;&gt;&gt;</td></tr><tr><td align="left">int(x,base=10)</td><td align="left">将字符串x按base转换，base默认为10。</td><td align="left">int(‘11’,2) -&gt; 3</td></tr><tr><td align="left">isinstance(obj,type)</td><td align="left">判断一个对象是否是一个已知的类型，子类也算。</td><td align="left">isinstance(1,int) -&gt; True</td></tr><tr><td align="left">issubclass(c, (cp1,cp2))</td><td align="left">用于判断参数c是否是类型参数cp1,cp2的子类。</td><td align="left">isinstance(A,(B,C,E))</td></tr><tr><td align="left">iter(obj,sentinel)</td><td align="left">返回迭代对象，可使用next()获取下一个元素。</td><td align="left">a = (1,2,3), iter(a)</td></tr><tr><td align="left">len(x)</td><td align="left">返回对象的长度(元素个数)。</td><td align="left">a = (1,2,3), len(a) -&gt; 3</td></tr><tr><td align="left">list(iterable)</td><td align="left">转换可迭代对象为列表。</td><td align="left">a = (1,2,3), list(a) -&gt; [1,2,3]</td></tr><tr><td align="left">locals()</td><td align="left">更新并返回表示当前本地符号表的字典。</td><td align="left"></td></tr><tr><td align="left">map(func,iterable)</td><td align="left">根据提供的函数对指定序列做映射并返回迭代器。</td><td align="left">a = [1,2], b = map(lambda x: x+1, a), list(b) -&gt; [2,3]</td></tr><tr><td align="left">max(iter,key,default)</td><td align="left">返回可迭代对象/数的最大元素。</td><td align="left">a = [1,3,2], max(a) -&gt; 3</td></tr><tr><td align="left">min(iter,key,default)</td><td align="left">返回可迭代对象/数的最小元素。</td><td align="left">a = [1,3,2], min(a) -&gt; 1</td></tr><tr><td align="left">memoryview</td><td align="left">返回由给定实参创建的内存视图对象。</td><td align="left"></td></tr><tr><td align="left">next(iter,default)</td><td align="left">调用iter的__next__()方法获取下一个元素。迭代耗尽，返回default</td><td align="left"></td></tr><tr><td align="left">object()</td><td align="left">创建并返回对象。</td><td align="left"></td></tr><tr><td align="left">oct(x)</td><td align="left">将一个整数转变为一个前缀为‘0o’的八进制字符串。</td><td align="left">oct(10) -&gt; ‘0o12’</td></tr><tr><td align="left">open(fl)</td><td align="left">参数有mode，buff，encoding，errors，newline，closefd，opener</td><td align="left">按参数设定打开文件</td></tr><tr><td align="left">ord(c)</td><td align="left">返回字符的Unicode码点整数。</td><td align="left">ord(‘习’) -&gt; 20064</td></tr><tr><td align="left">pow(base,exp,mod)</td><td align="left">返回base的exp次幂；如果mod存在，则返回次幂对mod取余。</td><td align="left">pow(2,3)-&gt;8,pow(2,3,3)-&gt;2</td></tr><tr><td align="left">print(obj)</td><td align="left">参数有sep=‘ ’，end=‘\n’，file=sys.stdout，flush=False</td><td align="left">输出信息到指定位置。</td></tr><tr><td align="left">property(fgt,fst,fdl,doc)</td><td align="left">返回property属性，fgt获取属性值，fst设置属性值。fdl删除属性值,doc为文档。</td><td align="left">多对函数修饰@property</td></tr><tr><td align="left">range(start,stop,step)</td><td align="left">返回一个序列，从start开始到stop，以step为间隔。</td><td align="left">range(1,3,1) -&gt; 1,2</td></tr><tr><td align="left">repr(obj)</td><td align="left">返回包含一个对象的可打印表示形式的字符串。</td><td align="left">repr([1,2,3])-&gt;‘[1,2,3]’</td></tr><tr><td align="left">reversed(seq)</td><td align="left">返回一个反向的iterator。</td><td align="left">list(reversed([1,2,3])) -&gt; [3,2,1]</td></tr><tr><td align="left">round(num,ndigits)</td><td align="left">返回number舍入到小数点后ndigits位精度的值。若省略则返回最接近的整数。</td><td align="left">round(3,245,1) -&gt; 3.2</td></tr><tr><td align="left">set(iterable)</td><td align="left">返回一个新的set对象，可以选择带有从iterable获取的元素。</td><td align="left">set([1,2,1]) -&gt; {1,2}</td></tr><tr><td align="left">setattr(obj,name,val)</td><td align="left">设置obj的属性name=val。</td><td align="left"></td></tr><tr><td align="left">slice(start,end,step)</td><td align="left">实现切片对象，主要用在切片操作函数里的参数传递。</td><td align="left">a = [1,2,3],b = slice(0,2), a[b] -&gt; [1,2]</td></tr><tr><td align="left">sorted(iter, key,reverse=False)</td><td align="left">对iterable对象排序，规则由key指定。</td><td align="left">sorted([1,3,2],reverse=True) -&gt; [3,2,1]</td></tr><tr><td align="left">str(obj,coding)</td><td align="left">转换obj为字符，coding默认为utf-8。</td><td align="left">str([1,2,3]) -&gt; ‘[1,2,3]’</td></tr><tr><td align="left">sum(iterable,start)</td><td align="left">从start开始自左向右对iterable的项求和并返回总计值。</td><td align="left">sum([1,2,3],1) -&gt; 7</td></tr><tr><td align="left">super(type, obj-or-type)</td><td align="left">调用父类(超类)的一个方法。</td><td align="left">super().__init__(xx)</td></tr><tr><td align="left">tuple(iterable)</td><td align="left">返回iterable的元组。</td><td align="left">tuple([1,2,3]) -&gt; (1,2,3)</td></tr><tr><td align="left">type(obj)</td><td align="left">返回obj类型。</td><td align="left">type(12)-&gt; class ‘int’</td></tr><tr><td align="left">vars</td><td align="left">返回模块、类、实例或任何具有__dict__属性的对象的__dict__ 属性。</td><td align="left"></td></tr><tr><td align="left">zip(*iterable)</td><td align="left">创建或解包可迭代对象的聚合。</td><td align="left">list(zip([1,2],[8,3])) -&gt; [(1,8),(2,3)]</td></tr></tbody></table><h2 id="一些用法和实现"><a href="#一些用法和实现" class="headerlink" title="一些用法和实现"></a>一些用法和实现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">#all的逻辑</span><br><span class="line">def all(iterable):</span><br><span class="line">    for element in iterable:</span><br><span class="line">        if not element:</span><br><span class="line">            return False</span><br><span class="line">    return True</span><br><span class="line"></span><br><span class="line">#any的逻辑</span><br><span class="line">def any(iterable):</span><br><span class="line">    for element in iterable:</span><br><span class="line">        if element:</span><br><span class="line">            return False</span><br><span class="line">     return False</span><br><span class="line"></span><br><span class="line">#zip的逻辑</span><br><span class="line">#zip(&apos;ABCD&apos;, &apos;xy&apos;) --&gt; Ax By</span><br><span class="line">def zip(*iterables):</span><br><span class="line">    sentinel = object()</span><br><span class="line">    iterators = [iter(it) for it in iterables]</span><br><span class="line">    while iterators:</span><br><span class="line">        result = []</span><br><span class="line">        for it in iterators:</span><br><span class="line">            elem = next(it, sentinel)</span><br><span class="line">            if elem is sentinel:</span><br><span class="line">                return</span><br><span class="line">            result.append(elem)</span><br><span class="line">        yield tuple(result)</span><br><span class="line"></span><br><span class="line">#输出a中最长的1子串个数。</span><br><span class="line">a = [1,0,1,1,0,1,1,1]</span><br><span class="line">print(max([len(i) for i in bytearray(a).split(b&apos;\x00&apos;)]))</span><br><span class="line"></span><br><span class="line">#staticmethod和classmethod的用法</span><br><span class="line">class A():</span><br><span class="line">    def func1(self):</span><br><span class="line">        self.bar = 1</span><br><span class="line">        print(&apos;self:&apos;,self)</span><br><span class="line">        self.func2(2)</span><br><span class="line">        self.func3(2)</span><br><span class="line"></span><br><span class="line">    @classmethod #不实例化而和类交互，先于构造函数执行</span><br><span class="line">    def func2(cls, n):</span><br><span class="line">        cls.func3(n)</span><br><span class="line">        print(cls.bar)</span><br><span class="line">        print(&apos;cls:&apos;,cls)</span><br><span class="line"></span><br><span class="line">    @staticmethod #适合不获取实例方法和属性的情况，独自处理</span><br><span class="line">    def func3(n):</span><br><span class="line">        print(n)</span><br><span class="line">        print(A.bar)</span><br><span class="line"></span><br><span class="line">A.func3() #不需要实例化直接调用，可用来初始化</span><br><span class="line">A.func2()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/05/30/tMtMUf.png&quot; alt=&quot;pythoninternal&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程语言" scheme="http://www.shieber.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Python" scheme="http://www.shieber.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python数据结构的各种操作</title>
    <link href="http://www.shieber.cn/title/98aa0392/"/>
    <id>http://www.shieber.cn/title/98aa0392/</id>
    <published>2020-05-28T07:54:20.000Z</published>
    <updated>2020-05-31T00:52:45.084Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2020/05/28/tZWFAA.jpg" alt="pythonic"></p><a id="more"></a><p>Python实现的数据有(字符，数字，元组)[不可变]，(列表，字典，集合)[可变]。每一种数据的操作都不同，现做一番总结。</p><h2 id="不可变数据"><a href="#不可变数据" class="headerlink" title="不可变数据"></a>不可变数据</h2><table><thead><tr><th align="left">数字操作</th><th align="left">解释</th><th align="left">举例</th></tr></thead><tbody><tr><td align="left">num.real</td><td align="left">返回数的实部</td><td align="left">(2+3j).real -&gt; 2</td></tr><tr><td align="left">num.imag</td><td align="left">返回数的虚部</td><td align="left">(2+3j).real -&gt; 3</td></tr><tr><td align="left">num.bit_length</td><td align="left">返回数的字节长度</td><td align="left">a=6; a.bit_length() -&gt; 3</td></tr><tr><td align="left">num.to_bytes(L,byteorder)</td><td align="left">返回数的字节数组</td><td align="left">a=6; a.to_bytes(2,‘big’) -&gt; b‘\x06\x00’</td></tr><tr><td align="left">int.form_bytes(bts,byteorder)</td><td align="left">返回由给定字节数组所表示的整数。</td><td align="left">int.form_bytes(b‘\x00\x10’,‘big’) -&gt; 16</td></tr><tr><td align="left">num.as_integer_ratio()</td><td align="left">返回一对整数，其比率为num</td><td align="left">a=6.0; a.as_integer_ratio() -&gt; (6,1)</td></tr><tr><td align="left">num.is_integer()</td><td align="left">若num能用有限位整数表示返回True</td><td align="left">a=6.0; a.is_integer() -&gt; True</td></tr><tr><td align="left">num.hex()</td><td align="left">以16进制返回浮点数</td><td align="left">a=6.0; a.hex() -&gt; ‘0x1.8000000000000p+2’</td></tr></tbody></table><table><thead><tr><th align="left">字符串操作</th><th align="left">解释</th><th align="left">举例(‘Ab ab’)</th></tr></thead><tbody><tr><td align="left">del sr</td><td align="left">删除sr</td><td align="left"></td></tr><tr><td align="left">sr[0]</td><td align="left">通过下标取元素</td><td align="left">‘A’</td></tr><tr><td align="left">st[1:3]</td><td align="left">字符串切片</td><td align="left">‘b a’</td></tr><tr><td align="left">sr[::-1]</td><td align="left">字符串反转</td><td align="left">‘ba bA’</td></tr><tr><td align="left">sr.lower()</td><td align="left">转换为小写</td><td align="left">‘ab ab’</td></tr><tr><td align="left">sr.upper()</td><td align="left">转换为大写</td><td align="left">‘AB AB’</td></tr><tr><td align="left">sr.title()</td><td align="left">单词首字母大写</td><td align="left">‘Ab Ab’</td></tr><tr><td align="left">sr.casefold()</td><td align="left">转换为小写，对所有字符，包括法国字母</td><td align="left">‘ab ab’</td></tr><tr><td align="left">sr.swapcase()</td><td align="left">转换大写为小写，小写为大写</td><td align="left">‘aB AB’</td></tr><tr><td align="left">sr.capitalize()</td><td align="left">首字母大写</td><td align="left">‘Ab ab’</td></tr><tr><td align="left">sr.center(10,‘-’)</td><td align="left">将sr居中对齐并扩展到长为10的字符串，不够用-补齐</td><td align="left">‘–Ab ab—’</td></tr><tr><td align="left">sr.ljust(10,‘-’)</td><td align="left">将sr左对齐并扩展到长为n的字符串，不够用sp补齐</td><td align="left">‘Ab ab—–’</td></tr><tr><td align="left">sr.rjust(10,‘-’)</td><td align="left">将sr右对齐并扩展到长为n的字符串，不够用sp补齐</td><td align="left">‘—–Ab ab’</td></tr><tr><td align="left">sr.zfill(10)</td><td align="left">将sr右对齐并扩展到长为n的字符串，不够用0补齐</td><td align="left">‘00000Ab ab’</td></tr><tr><td align="left">sr.split(‘ ’)</td><td align="left">按‘ ’分隔字符串sr为列表，‘ ’默认为空格</td><td align="left">[‘Ab’, ‘ab’]</td></tr><tr><td align="left">sr.rsplit(‘a’,1)</td><td align="left">按sp从右到左分隔字符串sr为列表，sp默认为空格，n为分割的次数</td><td align="left">[‘Ab ’, ‘b’]</td></tr><tr><td align="left">sr.startwith(‘a’)</td><td align="left">判断sr是否以sp开头</td><td align="left">False</td></tr><tr><td align="left">sr.endswith(‘ab’)</td><td align="left">判断sr是否以sp结尾</td><td align="left">True</td></tr><tr><td align="left">sr.expandtabs(4)</td><td align="left">将sr中的tab键转换为空格，4为空格数</td><td align="left">‘A\tB’ -&gt; ‘A    B’</td></tr><tr><td align="left">sr.isupper()</td><td align="left">判断sr是否是大写</td><td align="left">False</td></tr><tr><td align="left">sr.islower()</td><td align="left">判断sr是否是小写</td><td align="left">False</td></tr><tr><td align="left">sr.isalpha()</td><td align="left">判断sr是否是字母</td><td align="left">False</td></tr><tr><td align="left">sr.isdigit()</td><td align="left">判断sr是否是数字</td><td align="left">False</td></tr><tr><td align="left">sr.isalnum()</td><td align="left">判断sr是否是字母数字</td><td align="left">False</td></tr><tr><td align="left">sr.isspace()</td><td align="left">判断sr是否是空格</td><td align="left">False</td></tr><tr><td align="left">sr.istitle()</td><td align="left">判断sr中单词首字母是否是大写</td><td align="left">False</td></tr><tr><td align="left">sr.isdecimal()</td><td align="left">判断sr是否是十进制数</td><td align="left">False</td></tr><tr><td align="left">sr.isnumeric()</td><td align="left">判断sr是否是数</td><td align="left">False</td></tr><tr><td align="left">sr.strip()</td><td align="left">去掉sr两侧的空字符</td><td align="left">‘  Ab ab ’-&gt;‘Ab ab’</td></tr><tr><td align="left">sr.lstrip()</td><td align="left">去掉sr左侧的空字符</td><td align="left">‘  Ab ab ’-&gt;‘Ab ab ’</td></tr><tr><td align="left">sr.rstrip(‘ ’)</td><td align="left">去掉sr右侧的空字符</td><td align="left">‘  Ab ab ’-&gt;‘ Ab ab’</td></tr><tr><td align="left">sr.encode(encoding)</td><td align="left">按encoding规则编码sr</td><td align="left"></td></tr><tr><td align="left">sr.decode(encoding)</td><td align="left">按encoding规则解码sr</td><td align="left"></td></tr><tr><td align="left">sr.count(‘a’)</td><td align="left">统计sr中a的频度</td><td align="left">2</td></tr><tr><td align="left">sr.find(‘a’,s,e)</td><td align="left">返回sr中从左侧开始第一个a位置，无则返回-1，可指定查找范围s和e</td><td align="left">3</td></tr><tr><td align="left">sr.rfind(‘a’)</td><td align="left">返回sr中从右侧开始第一个a位置，无则返回-1，可指定查找范围s和e</td><td align="left">3</td></tr><tr><td align="left">sr.index(‘a’)</td><td align="left">返回sr中从左侧开始第一个a位置，无则报错，可指定查找范围s和e</td><td align="left">3</td></tr><tr><td align="left">sr.rindex(‘a’)</td><td align="left">返回sr中从右侧开始第一个a位置，无则报错，可指定查找范围s和e</td><td align="left">3</td></tr><tr><td align="left">sr.join(‘ABC’)</td><td align="left">将sr作为ABC的连接符号，组成AsrBsrC这种字符串</td><td align="left">‘AAb abBAb abC’</td></tr><tr><td align="left">sr.format()</td><td align="left">格式化输出，替代%方法</td><td align="left">‘{}-{}’.format(1,2) -&gt; ‘1-2’</td></tr><tr><td align="left">sr.replace(‘a’,‘b’)</td><td align="left">将sr中的a替换成b</td><td align="left">‘Ab bb’</td></tr></tbody></table><table><thead><tr><th align="left">元组操作</th><th align="left">解释</th><th align="left">举例(1,2,3,4,1)</th></tr></thead><tbody><tr><td align="left">del tpl</td><td align="left">删除tp</td><td align="left"></td></tr><tr><td align="left">tpl[0]</td><td align="left">索引元素</td><td align="left">1</td></tr><tr><td align="left">tpl[1:3]</td><td align="left">切片</td><td align="left">(2,3)</td></tr><tr><td align="left">tp1+tp2</td><td align="left">元组合并</td><td align="left">(1,2) + (2,3) -&gt; (1,2,2,3)</td></tr><tr><td align="left">sorted(tpl)</td><td align="left">按某规则排序tpl</td><td align="left"></td></tr><tr><td align="left">tpl.count(‘1’)</td><td align="left">统计tpl中1的频度</td><td align="left">2</td></tr><tr><td align="left">tpl.index(‘1’)</td><td align="left">返回tpl中第一个x位置</td><td align="left">0</td></tr></tbody></table><h2 id="可变数据"><a href="#可变数据" class="headerlink" title="可变数据"></a>可变数据</h2><table><thead><tr><th align="left">列表操作</th><th align="left">解释</th><th align="left">举例[1,2,3,4,1,2,3,4]</th></tr></thead><tbody><tr><td align="left">del lst[1]</td><td align="left">删除列表lst中某元素</td><td align="left">[1,3,4,1,2,3,4]</td></tr><tr><td align="left">del lst</td><td align="left">删除列表lst</td><td align="left"></td></tr><tr><td align="left">‘-’.join(lst)</td><td align="left">用-拼接lst为字符串</td><td align="left">‘1-3-4-1-2-3-4’</td></tr><tr><td align="left">lst.append(‘x’)</td><td align="left">向lst末尾添加元素x</td><td align="left">[1,3,4,1,2,3,4,‘x’]</td></tr><tr><td align="left">lst.extend(iter)</td><td align="left">将可迭代对象添加到lst</td><td align="left">lst.extend([10,9])-&gt;[1,2,3,4,1,2,3,4,10,9]</td></tr><tr><td align="left">lst.insert(0,‘x’)</td><td align="left">在lst的i位置插入x</td><td align="left">[‘x’,1,2,3,4,1,2,3,4]</td></tr><tr><td align="left">lst.remove(‘1’)</td><td align="left">移除lst中的第一个1元素</td><td align="left">[2,3,4,1,2,3,4]</td></tr><tr><td align="left">lst.pop(2)</td><td align="left">弹出lst中2位置的元素</td><td align="left">[1,2,4,1,2,3,4]</td></tr><tr><td align="left">lst.index(‘1’,start,end)</td><td align="left">在start-end范围内查找元素，并返回位置</td><td align="left">0</td></tr><tr><td align="left">lst.count(‘1’)</td><td align="left">统计lst中1的频度</td><td align="left">2</td></tr><tr><td align="left">lst.sort(key=None, reverse=False)</td><td align="left">对lst进行排序</td><td align="left">[1,1,2,2,3,3,4,4]</td></tr><tr><td align="left">lst.reverse()</td><td align="left">对lst进行逆序</td><td align="left">[4,3,2,1,4,3,2,1]</td></tr><tr><td align="left">lst.clear()</td><td align="left">清除lst中所有元素</td><td align="left">[]</td></tr><tr><td align="left">lst.copy()</td><td align="left">浅拷贝lst</td><td align="left"></td></tr><tr><td align="left">copy.deepcopy(lst)</td><td align="left">深拷贝lst</td><td align="left"></td></tr></tbody></table><table><thead><tr><th align="left">字典操作</th><th align="left">解释</th><th align="left">举例{‘x’:1,‘z’:2,‘y’:3}</th></tr></thead><tbody><tr><td align="left">dct[‘x’]</td><td align="left">索引元素x</td><td align="left">1</td></tr><tr><td align="left">del dct[‘x’]</td><td align="left">删除元素x</td><td align="left">{z:2,y:3}</td></tr><tr><td align="left">del dct</td><td align="left">删除字典</td><td align="left"></td></tr><tr><td align="left">dct.pop(‘x’)</td><td align="left">弹出元素x</td><td align="left">{z:2,y:3}</td></tr><tr><td align="left">dct.popitem()</td><td align="left">弹出一个元素，一般为最后一个</td><td align="left">{x:1,z:2}</td></tr><tr><td align="left">dct.get(‘x’,‘s’)</td><td align="left">获取元素x，若没有则返回s</td><td align="left">1</td></tr><tr><td align="left">dct.setdefault(‘m’,4)</td><td align="left">获取元素m，若没有则设置m=4</td><td align="left">{x:1,z:2,y:3,m:4}</td></tr><tr><td align="left">dct.fromkeys(seq, val)</td><td align="left">由seq和val创建字典</td><td align="left"></td></tr><tr><td align="left">dct.update(dct1)</td><td align="left">将dct1合并到dct中 dct1={‘a’:1}</td><td align="left">{‘x’:1,‘z’:2,‘y’:3,‘a’:1}</td></tr><tr><td align="left">dct.keys()</td><td align="left">获取dct的所有键</td><td align="left">dict_keys([‘x’,‘z’,‘y’])</td></tr><tr><td align="left">dct.values()</td><td align="left">获取dct的所有值</td><td align="left">dict_keys([1,2,3])</td></tr><tr><td align="left">dct.items()</td><td align="left">获取dct的所有键值</td><td align="left">dict_keys([(‘x’,1),(‘z’,2),(‘y’,3)])</td></tr><tr><td align="left">dct.copy()</td><td align="left">浅拷贝dct</td><td align="left"></td></tr><tr><td align="left">dct.clear()</td><td align="left">清除dct中所有元素</td><td align="left">{}</td></tr></tbody></table><table><thead><tr><th align="left">集合操作</th><th align="left">解释</th><th align="left">举例{1,2,3}</th></tr></thead><tbody><tr><td align="left">st.issubset(t)</td><td align="left">判断st是否是t的子集合t={1,2}</td><td align="left">False</td></tr><tr><td align="left">st.issuperset(t)</td><td align="left">判断st是否是t的子集合</td><td align="left">True</td></tr><tr><td align="left">st.union(t)</td><td align="left">集合并操作   st or t</td><td align="left">{1,2,3}</td></tr><tr><td align="left">st.intersection(t)</td><td align="left">集合交操作   st &amp;  t</td><td align="left">{1,2}</td></tr><tr><td align="left">st.difference(t)</td><td align="left">集合差操作   st -  t</td><td align="left">{3}</td></tr><tr><td align="left">st.symmetric_difference(t)</td><td align="left">集合异或操作 st ^  t</td><td align="left">{3}</td></tr><tr><td align="left">st.update(t)</td><td align="left">合并t到st</td><td align="left">{1,2,3}</td></tr><tr><td align="left">st.intersection_update(t)</td><td align="left">合并st和t的交集到st</td><td align="left">{1,2}</td></tr><tr><td align="left">st.difference_update(t)</td><td align="left">合并st和t的差集到st</td><td align="left">{3}</td></tr><tr><td align="left">st.symmetric_difference_update(t)</td><td align="left">合并st和t的对称差集到st</td><td align="left">{}</td></tr><tr><td align="left">st.add(‘x’)</td><td align="left">向st中添加元素x</td><td align="left">{1,2,3,‘x’}</td></tr><tr><td align="left">st.copy()</td><td align="left">浅拷贝st</td><td align="left"></td></tr><tr><td align="left">st.remove(‘x’)</td><td align="left">移除st中x元素，不存在会报错</td><td align="left">{1,2,3}</td></tr><tr><td align="left">st.discard(‘x’)</td><td align="left">丢弃st中x元素，不存在不报错</td><td align="left">{1,2,3}</td></tr><tr><td align="left">st.pop()</td><td align="left">弹出最后一个元素</td><td align="left">{1,2}</td></tr><tr><td align="left">st.clear()</td><td align="left">清除st中所有元素</td><td align="left">{}</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/05/28/tZWFAA.jpg&quot; alt=&quot;pythonic&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程语言" scheme="http://www.shieber.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Python" scheme="http://www.shieber.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>人有多重</title>
    <link href="http://www.shieber.cn/title/68109d68/"/>
    <id>http://www.shieber.cn/title/68109d68/</id>
    <published>2020-03-31T02:22:08.000Z</published>
    <updated>2020-04-01T07:32:51.996Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2020/03/31/GK2k9A.md.png" alt="humanweight"></p><a id="more"></a><h2 id="地球人的重量"><a href="#地球人的重量" class="headerlink" title="地球人的重量"></a>地球人的重量</h2><p>曾听过一个问题：要是地球上所有人同时跳起来，会不会对地球有影响？</p><p>最近看书，突发奇想，人类到底有多重呢？我是指地球上目前活着的所有人。计算是非常简单的，所以不妨计算一下。</p><p>所有人中，有儿童，成年人。不同年龄段的体重是不一样的，有的比较胖，但大部分人都算正常，所以可以取一个平均值代表每个人的体重。</p><p>成年人的标准体重应该是  </p><p>男性：（身高 － 80）×0．7（千克）</p><p>女性：（身高 － 70）×0．6（千克）</p><p>标准体重＋10％属于正常范围，超重20％属轻度肥胖，超重50％属重度肥胖，一般成人重65KG。儿童体重可估算一个均值，设为0.7倍成人体重，其实这个估算肯定不准确，但是偏差对最后结果定性分析影响不大。</p><p>截至2020.03.31日，全球230个国家和地区人口总数为7585204179，就是75.852亿，数据来源于联合国。而目前儿童人口数大约20亿。所以总重非常好算。</p><p>$$W_{human} = 20x10^{8}x0.7x65 + 55.852x10^{8}x65 (Kg) = 4.54038x10^{8}(ton)$$</p><p>所以地球人，活着的，大概4.54038亿吨重。然而，这个重量仍然不够直观。为此，我需要选择些参照物，将人转换为一种大家能直观感受的东西。</p><p>这里选择石头，因为地球上到处是石头。不同种类石头的密度是不同的，根据参考文献，大部分石头密度在3左右。这里选择大理石，密度为$3ton/m^{3}$。所以将所有人压缩为大理石密度，则体积有$1.51346*10^{8}m^{3}$，开立方得到一个边长为533米长的正方体。想象一个533米的正方体，感觉不大吧？其实，泰山露出来的部分大概1500米，就比这个正方体大，所以人类实际上不如泰山这样一座山重。而地球上何止一座泰山呢？所以地球人跳起来不会对地球有啥影响。</p><p>从物理角度算算，和地球对比一下，能得到更为精确的数据。</p><p>$$mg = G\frac{M_{e}m}{R^{2}}$$</p><p>G为引力常数，结合各个数据可得到地球质量$M_{e} = 6*10^{24}Kg$，人类质量占地球的比例为</p><p>$$r = \frac{4.54x10^{11}}{6x10^{24}} = 7.5x10^{-14}$$</p><p>大概是百万亿分之7.5，实在算不上什么。</p><p>地球要维持自转而不分裂，大概需要维持其密度为$4ton/m^{3}$，而地球平均密度为$5.52ton/m^{3}$。将人压缩成地球平均密度的话，大概就是一个$434.9m$的正方体，比上面数据更小。</p><p>这样说吧，把地球人口重量看作乘火车时穿过的一座山的重量大概是合理的。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li><a href="https://web.phb123.com/city/renkou/rk.html" target="_blank" rel="noopener">https://web.phb123.com/city/renkou/rk.html</a></li><li><a href="https://www.worldometers.info/cn/" target="_blank" rel="noopener">https://www.worldometers.info/cn/</a></li><li>《水利水电工程施工手册》</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/03/31/GK2k9A.md.png&quot; alt=&quot;humanweight&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="议论" scheme="http://www.shieber.cn/categories/%E8%AE%AE%E8%AE%BA/"/>
    
    
      <category term="小杂感" scheme="http://www.shieber.cn/tags/%E5%B0%8F%E6%9D%82%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>为什么在股市容易亏钱</title>
    <link href="http://www.shieber.cn/title/8736ee58/"/>
    <id>http://www.shieber.cn/title/8736ee58/</id>
    <published>2020-03-19T03:42:44.000Z</published>
    <updated>2020-03-19T11:57:11.991Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2020/03/19/8rdjTf.jpg" alt="reinvare"></p><a id="more"></a><p>炒股成了一部分人的生活，他们谋求在股市大展身手，试要大赚一笔。然而，通过非常简单的计算，你就知道在股市损失要比赚钱容易得多，概率更大。</p><p>让我们假设你有初始资金T，全部投入股市，且不计手续费，印花税等等，也就是说T就购买成股票资产。让我们来看看在不同的股市波动后，你的资金T的变化。</p><p>设跌幅为$p_1\lt 100 %$，增幅为$p_2 \ge 0$，二者均只计算绝对值。</p><p>你遭遇到跌幅为$p_1$的波动，现在你的资产只有$T(1-p_1) \le T$。接着你梦想着资产至少恢复到T，要是超过T就更好了。那么从$T(1-p_1)$恢复成T需要增长多少呢？假如设此时增长率为$p_2$</p><p>$$T(1 - p_1)(1 + p_2)=T$$ </p><p>此时资产刚好恢复到T，那么：</p><p>$$(1 - p_1)(1 + p_2)=1$$ </p><p>$$ (1 + p_2)=\frac{1}{1 - p_1}$$</p><p>$$ p_2=\frac{1}{1 - p_1} - 1$$</p><p>$$ p_2=\frac{p_1}{1 - p_1}$$</p><p>将$p_2$看成$p_1$的函数，也就是将增长率看成跌幅的函数，来考察不同的跌幅下，到底需要增长多少才能保证不亏呢？<br>求导，看看增长率随跌幅的变化率。</p><p>$$ p_2^{‘}=(\frac{p_1}{1 - p_1})^{‘} = \frac{p_1^{‘}(1-p_1)-(1-p_1)^{‘}p_1 }{(1-p_1)^{2}}$$<br>$$ p_2^{‘}=(\frac{p_1}{1 - p_1})^{‘} = \frac{1(1-p_1)-(0-1)p_1}{(1-p_1)^{2}}$$<br>$$ p_2^{‘}=(\frac{p_1}{1 - p_1})^{‘} = \frac{1}{(1-p_1)^{2}} \gt 0$$<br>$$ \because p_2的导数恒大于0, \therefore p_2 为增函数 $$<br>$$ p_{1_{min}} = 0, p_{1_{max}} \lt 100% $$<br>$$ p_{2_{min}} = 0, p_{2_{max}} = \infty $$</p><p>用程序稍微计算下，得到如下结果: [括号内第一个数为跌幅，第二个数为至少保证不亏本时的增幅，均为百分数，略去百分号%。比如(1.0,1.01)表示跌1%时，要涨1.01%才能回本。]</p><p>(0.0, 0.0), (1.0, 1.01), (2.0, 2.04), (3.0, 3.09), (4.0, 4.17), (5.0, 5.26), (6.0, 6.38), (7.0, 7.53), (8.0, 8.7), (9.0, 9.89)，跌幅在10%以内时，回本比较容易，可以看到差距不大。 </p><p>(10.0, 11.11), (11.0, 12.36), (12.0, 13.64), (13.0, 14.94), (14.0, 16.28), (15.0, 17.65), (16.0, 19.05), (17.0, 20.48), (18.0, 21.95), (19.0, 23.46)，跌幅在10%-20%时，回本开始有点儿难度了，但还算行。此时，一些股民开始割肉止损。 </p><p>(20.0, 25.0), (21.0, 26.58), (22.0, 28.21), (23.0, 29.87), (24.0, 31.58), (25.0, 33.33), (26.0, 35.14), (27.0, 36.99), (28.0, 38.89), (29.0, 40.85)，跌幅在20%-30%时，回本明显困难起来，但也是有可能的。此时，更多股民开始割肉止损。 </p><p>(30.0, 42.86), (31.0, 44.93), (32.0, 47.06), (33.0, 49.25), (34.0, 51.52), (35.0, 53.85), (36.0, 56.25), (37.0, 58.73), (38.0, 61.29), (39.0, 63.93)，跌幅在30%-40%时，回本更困难，但还是有可能。此时，大量股民割肉。  </p><p>(40.0, 66.67), (41.0, 69.49), (42.0, 72.41), (43.0, 75.44), (44.0, 78.57), (45.0, 81.82), (46.0, 85.19), (47.0, 88.68), (48.0, 92.31), (49.0, 96.08)，跌幅在40%-50%时，回本难度攀升，但依然有可能。此时，大量股民割肉。  </p><p>(50.0, 100.0), (51.0, 104.08), (52.0, 108.33), (53.0, 112.77), (54.0, 117.39), (55.0, 122.22), (56.0, 127.27), (57.0, 132.56), (58.0, 138.1), (59.0, 143.9)，跌幅在50%-60%时，回本几乎不可能，绝大部分股民亏损割肉，或是打算长期持有。</p><p>(60.0, 150.0), (61.0, 156.41), (62.0, 163.16), (63.0, 170.27), (64.0, 177.78), (65.0, 185.71), (66.0, 194.12), (67.0, 203.03), (68.0, 212.5), (69.0, 222.58)，跌幅在60%-70%时，回本更加不可能，少部分股民打算长期持有。 </p><p>(70.0, 233.33), (71.0, 244.83), (72.0, 257.14), (73.0, 270.37), (74.0, 284.62), (75.0, 300.0), (76.0, 316.67), (77.0, 334.78), (78.0, 354.55), (79.0, 376.19)，跌幅在70%-80%时，开启搅肉机模式，回本渺茫，极少部分股民打算长期持有。 </p><p>(80.0, 400.0), (81.0, 426.32), (82.0, 455.56), (83.0, 488.24), (84.0, 525.0), (85.0, 566.67), (86.0, 614.29), (87.0, 669.23), (88.0, 733.33), (89.0, 809.09)，跌幅在80%-90%时，要回本至少要涨400%以上才可能，人人都知道涨百分之几百是小概率事件。此时很多公司可能被退市，你的股票成为废纸。</p><p>(90.0, 900.0), (91.0, 1011.11), (92.0, 1150.0), (93.0, 1328.57), (94.0, 1566.67), (95.0, 1900.0), (96.0, 2400.0), (97.0, 3233.33), (98.0, 4900.0), (99.0, 9900.0)，跌幅在90%-99%时，公司估计早已破产，你的股票也已是一堆废纸。 </p><p>跌幅达到百分之几十，轻易就遭遇到了，但要涨幅达到百分之几百估计没几人敢这么说。这还只是回本，若你还要赚10%-20%T资产，那就更困难了。同时不要忘了，这里的计算还没统计各种手续费和税，要再考虑那些，只要大跌一次，不管你有多少，都要给你跌掉。</p><p>下面是维持不亏本的跌幅和涨幅函数图(跌幅范围为0%-99%)。可以看到，前段平缓，后面成了指数。</p><p><img src="https://s1.ax1x.com/2020/03/19/8rn03D.md.png" alt="increduvare"></p><p>拉近看，考察一个区域。跌幅在0%-80%时保证不亏本的增幅变化(最大增幅400%左右)。</p><p><img src="https://s1.ax1x.com/2020/03/19/8rakgs.png" alt="vare1"></p><p>跌幅在80%-90%时保证不亏本的增幅变化(仅仅10%的变化，增幅也变化400%左右)。</p><p><img src="https://s1.ax1x.com/2020/03/19/8ranET.png" alt="vare2"></p><p>跌幅在80%-98%时保证不亏本的增幅变化(指数模式，无底洞)。</p><p><img src="https://s1.ax1x.com/2020/03/19/8raQC4.png" alt="vare3"></p><p>热力学第二定律关于熵，自然事物在不断变得无规则，扩散，也就是熵增。而要逆熵则太难，人是逆熵动物，但一死就将回归自然律。股票亏损就像熵增，不断扩大，而要逆熵赚钱则有些难度，当然本领好，也能赚钱，有人亏，就有人赚。</p><p>金钱有度，股灾无情。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/03/19/8rdjTf.jpg&quot; alt=&quot;reinvare&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="投资" scheme="http://www.shieber.cn/categories/%E6%8A%95%E8%B5%84/"/>
    
    
      <category term="股市" scheme="http://www.shieber.cn/tags/%E8%82%A1%E5%B8%82/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu20.04 LTS</title>
    <link href="http://www.shieber.cn/title/8009ae71/"/>
    <id>http://www.shieber.cn/title/8009ae71/</id>
    <published>2020-03-05T04:33:44.000Z</published>
    <updated>2020-03-05T04:36:08.272Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2020/03/05/3TbKmD.png" alt="Focal Fossa"></p><a id="more"></a><p>近期Ubuntu20.04 LTS(Focal Fossa)冻结部分功能，特地下载试了试。  </p><h2 id="Ubuntu20-04发布的时间表-2020-："><a href="#Ubuntu20-04发布的时间表-2020-：" class="headerlink" title="Ubuntu20.04发布的时间表(2020)：  "></a>Ubuntu20.04发布的时间表(2020)：  </h2><p>1月09日：测试周 (可选)<br>2月27日：特性冻结，Debian导入冻结<br>3月05日：测试周 (可选)<br>3月19日：用户界面冻结<br>3月26日：文档字符串冻结<br>4月02日：测试版冻结<br>4月09日：内核冻结<br>4月16日：最终冻结，语言翻译包冻结，发布候选版<br>4月23日：发布稳定版  </p><p>在某个日期，Ubuntu18.04 LTS用户会收到新LTS通知，提示升级。</p><h2 id="支持时限："><a href="#支持时限：" class="headerlink" title="支持时限：  "></a>支持时限：  </h2><p>台式机及服务器：2020-2025年<br>企业扩展维护版：2020-2030年(收费)</p><h2 id="计划功能。"><a href="#计划功能。" class="headerlink" title="计划功能。  "></a>计划功能。  </h2><ul><li>Gnome3.36</li><li>游戏相关改进</li><li>改进的ZFS支持</li><li>GDM中多显示器</li><li>Xorg会话分数缩放</li><li>Linux Kernel 5.4 or higher</li></ul><p>看来就ZFS和新内核有点看头。Ubuntu以前用的是ext4系统，不知道新ZFS如何，最近Linus大佬到是对ZFS <a href="https://www.oschina.net/news/112779/linus-zfs-statements-arent-right-heres-the-straight-dope?p=2" target="_blank" rel="noopener">颇有看法</a>。</p><p>关于<a href="https://www.kernel.org" target="_blank" rel="noopener">内核</a>，<code>uname -a</code>显示结果:<br><code>Linux ubuntu 5.4.0-14-generic #17-Ubuntu SMP Thu Feb 6 22:47:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux</code><br>5.4的内核比较新，微软去年贡献出的exFAT功能也已加入，所以也算得上20.04的新特性吧。</p><p>关于软件<br>预装的Amazon在本版本中被去掉了，LibreOffice提供了最新6.4版，我速度快多了。另外，官方正考虑预置新版PHP 7.4。<br>至于其他的都差不多，Firefox, vim等等这些和以前一样预置。</p><p>使用<br>虚拟机下使用也不怎么卡，Gnome优化得挺好，我这台电脑是2015年的垃圾货了，装双系统，再开虚拟机跑着还过得去。新版出来后多半会跟着升级吧，毕竟穷玩车，富玩表，屌丝玩电脑。服务器版除非买了新服务器，且够大胆，不然还是得用18.04或是16.04，我认为那是最优的，新的20.04不一定就合适。</p><p>安装节面：  </p><p><img src="https://s2.ax1x.com/2020/03/05/3Tb4AJ.png" alt="install"></p><p>软件中心：(微软家的Visual Studio和Skype也加入了)  </p><p><img src="https://s2.ax1x.com/2020/03/05/3TbbjK.png" alt="software"></p><p>自带软件：  </p><p><img src="https://s2.ax1x.com/2020/03/05/3TqPjf.png" alt="installed"></p><p>自带壁纸：  </p><p><img src="https://s2.ax1x.com/2020/03/05/3TqnCn.png" alt="wallpaper"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>Ubuntu总体来说比较优秀。当然，近几年它很火，许多工具甚至特地发布了Ubuntu版。用了近两年Ubuntu(Windows用得很少了)，感觉我的工作它都处理得很好，它没有而我需要的功能我就自己写些脚步来处理，惟一的遗憾是缺个像Office这样好用的软件。无论如何，初学者或者喜欢玩操作系统的人不妨试试20.04。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/03/05/3TbKmD.png&quot; alt=&quot;Focal Fossa&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="操作系统" scheme="http://www.shieber.cn/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="OS" scheme="http://www.shieber.cn/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>回首猪年，展望鼠年</title>
    <link href="http://www.shieber.cn/title/93818f3d/"/>
    <id>http://www.shieber.cn/title/93818f3d/</id>
    <published>2020-01-24T13:36:16.000Z</published>
    <updated>2020-04-01T07:43:04.118Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2020/01/24/1ZfDJI.md.png" alt="RatYear"></p><a id="more"></a><p>2019农历猪年就要过去了，在此整理这一年来的大事件。这一年，极不平静，发生好多大事。真是逢九必乱！</p><h2 id="大事件"><a href="#大事件" class="headerlink" title="大事件"></a>大事件</h2><h3 id="猪瘟"><a href="#猪瘟" class="headerlink" title="猪瘟"></a>猪瘟</h3><p> 年初时一部短片《啥是佩琪?》火遍网络，可没成想本年度物价因为猪而飙升，CPI连连上涨。非洲猪瘟给老百姓的基本生活带来了极大不便。</p><p> <img src="https://s2.ax1x.com/2020/01/24/1ZWorD.md.png" alt="zhuwen"></p><h3 id="贸易战"><a href="#贸易战" class="headerlink" title="贸易战"></a>贸易战</h3><p> 美国总统特朗普大笔一挥，两国贸易战开打，双方国力耗损，经济受到影响，全球经济增长预期下降。</p><p> <img src="https://s2.ax1x.com/2020/01/24/1ZWTqe.md.png" alt="tradewar"></p><h3 id="宜宾地震"><a href="#宜宾地震" class="headerlink" title="宜宾地震"></a>宜宾地震</h3><p> 宜宾，醉美之城，突然又遭遇地震袭击，给当地百姓生活带来了极大困扰，好在伤亡人数不多。</p><p> <img src="https://s2.ax1x.com/2020/01/24/1ZWbad.md.png" alt="zhuwen"></p><h3 id="香港暴乱"><a href="#香港暴乱" class="headerlink" title="香港暴乱"></a>香港暴乱</h3><p> 从7月开始，香港不断有暴乱活动，给大陆带来很大麻烦。在国际上，香港的投资及金融地位受到影响。</p><p> <img src="https://s2.ax1x.com/2020/01/24/1ZWOPI.md.png" alt="zhuwen"></p><h3 id="国庆"><a href="#国庆" class="headerlink" title="国庆"></a>国庆</h3><p> 今年是各种重大日子的周年纪念日。中美建交40周年，五四运动一百周年，建国70周年等等。</p><p> <img src="https://s2.ax1x.com/2020/01/24/1ZWvxf.md.png" alt="zhuwen"></p><h3 id="2019-nCov"><a href="#2019-nCov" class="headerlink" title="2019-nCov"></a>2019-nCov</h3><p> 本以为好好过年，结果又来病毒。这次直接对人造成伤害，给社会带来恐慌。</p><p> <img src="https://s2.ax1x.com/2020/01/24/1Zfpqg.md.png" alt="zhuwen"></p><h2 id="祝福明天"><a href="#祝福明天" class="headerlink" title="祝福明天"></a>祝福明天</h2><p>  现在是除夕夜，我在成都，在某栋楼里写下这些文字。希望病毒早日消退，早点恢复社会生产和教学活动，积极发展经济。毕竟2020是中国人追求几千年的小康关键之年，不能因为一个病毒给毁了。我们这个民族，吃了太多苦了，付出了太多代价。在14亿人的大国里，任何一个麻烦都会影响国民。中国人要强大起来，富裕起来，自信起来。祝福中国，2020，鼠年！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/01/24/1ZfDJI.md.png&quot; alt=&quot;RatYear&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="年度报告" scheme="http://www.shieber.cn/categories/%E5%B9%B4%E5%BA%A6%E6%8A%A5%E5%91%8A/"/>
    
    
      <category term="回忆" scheme="http://www.shieber.cn/tags/%E5%9B%9E%E5%BF%86/"/>
    
  </entry>
  
  <entry>
    <title>使用Asciidoc写作</title>
    <link href="http://www.shieber.cn/title/b6700389/"/>
    <id>http://www.shieber.cn/title/b6700389/</id>
    <published>2020-01-15T08:54:40.000Z</published>
    <updated>2020-01-15T11:25:07.224Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2020/01/15/lXKWJe.md.png" alt="asciidoc"></p><a id="more"></a><p>一直用markdown和ResTructuredText写文档，速度确实快。然而，一旦文件复杂起来后就没法儿用它们解决。今天刚好发现asciidoc，试了试，效果不错。</p><p>asciidoc是一种类似markdown的标记语言，且其功能要比markdown强大。利用asciidoc的增强版asciidoctor能直接输出html，epub电子书等格式等文件。</p><h2 id="asciidoctor支持的文档格式"><a href="#asciidoctor支持的文档格式" class="headerlink" title="asciidoctor支持的文档格式"></a>asciidoctor支持的文档格式</h2><blockquote><p>.html<br>.xml<br>.xhtml<br>.docbook<br>.manpage<br>.pdf 需安装<a href="https://rubygems.org/gems/asciidoctor-pdf" target="_blank" rel="noopener">asciidoctor-pdf</a><br>.epub3 需安装<a href="https://rubygems.org/gems/asciidoctor-ebub3" target="_blank" rel="noopener">asciidoctor-epub3</a><br>.latex 需安装<a href="https://rubygems.org/gems/asciidoctor-latex" target="_blank" rel="noopener">asciidoctor-latex</a><br>……</p></blockquote><h2 id="渲染方式"><a href="#渲染方式" class="headerlink" title="渲染方式"></a>渲染方式</h2><blockquote><p>asciidoctor -b html sample.adoc<br>asciidoctor -b xhtml sample.adoc<br>asciidoctor -b docbook sample.adoc<br>asciidoctor -b manpage sample.adoc<br>asciidoctor -b pdf sample.adoc<br>asciidoctor -b epub3 sample.adoc<br>asciidoctor -b latex sample.adoc  </p></blockquote><p>markdown的语法确实要简单些，下面是本博客的markdown原文件。</p><p><img src="https://s2.ax1x.com/2020/01/15/lXMUmt.md.png" alt="mk-origin"></p><p>如果换成asciidoctor的话该如下图所示。</p><p><img src="https://s2.ax1x.com/2020/01/15/lX14tf.md.png" alt="as-origin"></p><p>再看渲染出来的样式[第一副为markdown]，明显是asciidoctor渲染得更好，字体和颜色都比较出色。相比之下，markdown可说是一般般。所以，这篇博客怕是最后一篇用markdown写的了，以后应该会换成asciidoc格式吧。</p><p><img src="https://s2.ax1x.com/2020/01/15/lX3tC8.md.png" alt="as-render1"><br><img src="https://s2.ax1x.com/2020/01/15/lX3avQ.md.png" alt="as-render2"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/01/15/lXKWJe.md.png&quot; alt=&quot;asciidoc&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="文档" scheme="http://www.shieber.cn/categories/%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="asciidoc" scheme="http://www.shieber.cn/tags/asciidoc/"/>
    
  </entry>
  
  <entry>
    <title>国产Linux操作系统UOS</title>
    <link href="http://www.shieber.cn/title/df585a29/"/>
    <id>http://www.shieber.cn/title/df585a29/</id>
    <published>2020-01-11T03:43:22.000Z</published>
    <updated>2020-01-11T05:01:50.224Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2020/01/11/l5KvqA.md.png" alt="uos"></p><a id="more"></a><p>前段时间国产操作系统UOS(Unity Operating System)释出，最近用虚拟机试了试。总体来说，操作流畅，符合国人习惯。UOS内置中文输入法和各类便捷工具，大大方便用户工作。</p><p>UOS是由中兴，电子集团，深之度科技等联合开发的一款国产Linux发行版，使用过Linux很快就能上手。UOS默认是没有root权限的，要登录帐号以开启，这和Ubuntu之类默认带root功能的发行版不同。UOS主体应该就是Deepin系统，软件安装方式则延续Debian系列的apt-get install方式。</p><p>UOS发布的时间表(2019)：<br>10月15日：面向BIOS、CPU、整机和ODM厂商，发布龙芯、华为、飞腾、兆芯、海光五个平台的桌面和服务器UOS alpha测试版本。该版本主要功能和用户交互基本完成，存在比较明显的细节缺失和bug，但可以开展面向指定CPU型号的适配验证。<br>11月10日：发布Alpha2版本，增加对申威、海光架构版本的支持。Alpha2版本将面向安全厂商、应用厂商开发，用于进行底层安全检查；软件应用厂商可以开始基本适配测试。<br>11月30日：合并新的功能代码，并修复alpha版本发现的问题。发布beta版本，各软件厂商可以针对该版本进行正式适配。<br>12月15日：发布RC版本，代码冻结，进入正式版本发布前的bug修复阶段。<br>12月31日：如基于RC版本的修复版本通过质量测试，则发布FINAL正式版本。  </p><h2 id="界面和功能欣赏"><a href="#界面和功能欣赏" class="headerlink" title="界面和功能欣赏"></a>界面和功能欣赏</h2><p>安装界面有各种语言可选择，包括台湾和港澳的繁体及正体中文。  </p><p><img src="https://s2.ax1x.com/2020/01/11/l5MIyQ.md.png" alt="uos_1"></p><p>安装时间不长。</p><p><img src="https://s2.ax1x.com/2020/01/11/l5MXWT.md.png" alt="uos_2"></p><p>开机界面，似乎Deepin默认就是这个，极光挺美的。</p><p><img src="https://s2.ax1x.com/2020/01/11/l5Q9m9.md.png" alt="uos_3"></p><p>登录界面的图片可设置。</p><p><img src="https://s2.ax1x.com/2020/01/11/l5QZlD.md.png" alt="uos_4"></p><p>自带的壁纸很好，我这里选用了一张必应壁纸。</p><p><img src="https://s2.ax1x.com/2020/01/11/l5QK0A.md.png" alt="uos_5"></p><p>界面和Windows很像，符合国人的习惯。  </p><p><img src="https://s2.ax1x.com/2020/01/11/l5KvqA.md.png" alt="uos"></p><p>点击上图头像右上角扩展符号可以扩展为下面的样式。</p><p><img src="https://s2.ax1x.com/2020/01/11/l5J4Nd.md.png" alt="uos_14"></p><p>UOS的浏览器似乎是封装某浏览器内核制作的，默认搜索工具是360搜索。   </p><p><img src="https://s2.ax1x.com/2020/01/11/l5QtXQ.md.png" alt="uos_6"></p><p>自带的图片管理浏览工具。</p><p><img src="https://s2.ax1x.com/2020/01/11/l5QBt0.md.png" alt="uos_7"></p><p>自带音乐播放器。 </p><p><img src="https://s2.ax1x.com/2020/01/11/l5JGpq.md.png" alt="uos_9"></p><p>自带视频播放器。 </p><p><img src="https://s2.ax1x.com/2020/01/11/l5JtXT.md.png" alt="uos_10"></p><p>自带的应用下载市场，软件还不多，后续应该会越来越多。若是嫌界面图标遮住界面，碍眼，可右键设置为自动隐藏。</p><p><img src="https://s2.ax1x.com/2020/01/11/l5Qy1U.md.png" alt="uos_8"></p><p>终端使用，透明度调节没问题。  </p><p><img src="https://s2.ax1x.com/2020/01/11/l5Jd74.md.png" alt="uos_11"></p><p>系统监视工具，这个似乎是top命令的GUI版。</p><p><img src="https://s2.ax1x.com/2020/01/11/l5JDhR.md.png" alt="uos_12"></p><p>自带编辑器，当然也预置了Vim。</p><p><img src="https://s2.ax1x.com/2020/01/11/l5JRBD.md.png" alt="uos_13"></p><h2 id="评价"><a href="#评价" class="headerlink" title="评价"></a>评价</h2><p>Deepin为核心，各大公司合力开发，支持多种国产CPU，使用流畅，软件简洁好用。总体来说，是值得广大用户使用的一款国产Linux系统，望大家支持。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/01/11/l5KvqA.md.png&quot; alt=&quot;uos&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="操作系统" scheme="http://www.shieber.cn/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="UOS" scheme="http://www.shieber.cn/tags/UOS/"/>
    
  </entry>
  
  <entry>
    <title>翻译乃大道</title>
    <link href="http://www.shieber.cn/title/9557f6d5/"/>
    <id>http://www.shieber.cn/title/9557f6d5/</id>
    <published>2020-01-10T04:11:50.000Z</published>
    <updated>2020-01-10T13:38:27.829Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2020/01/10/lhPP6U.md.png" alt="fydd"></p><a id="more"></a><p>翻译一行，在学亦在艺，到达高深处，随时都是艺术灵魂在闪耀。然，国中饱学之士何其多，真正的翻译家又何其少。余光中老前辈在书中谈的问题和要点，实在受用，特此记录。</p><h2 id="中英文词性对照"><a href="#中英文词性对照" class="headerlink" title="中英文词性对照"></a>中英文词性对照</h2><p>中文词汇中没有单复数，时态，雌雄之分，这使得中文造句很随意，十分灵活。往往一词多义，一词多异。中文是动态的，展现的是一种气势和妙趣。试看《口技》一文：  </p><p>　京中有善口技者。<strong>会</strong>宾客大宴，于厅事之东北角，<strong>施</strong>八尺屏障，口技人<strong>坐</strong>屏障中，一桌、一椅、一扇、一抚尺而已。众宾团<strong>坐</strong>。少顷，但<strong>闻</strong>屏障中<strong>抚</strong>尺一下，满坐寂然，无敢<strong>哗</strong>者。<br>　遥<strong>闻</strong>深巷中犬<strong>吠</strong>，便有妇人<strong>惊觉</strong>欠<strong>伸</strong>，<strong>摇</strong>其夫<strong>语</strong>猥亵事。初不甚<strong>应</strong>，妇<strong>摇</strong>之不止，则二人语渐间杂，床又从中戛戛。夫<strong>呓</strong>语。既而儿<strong>醒</strong>，大<strong>啼</strong>，夫令妇儿<strong>乳</strong>，儿<strong>含</strong>乳<strong>啼</strong>，妇<strong>拍</strong>而<strong>呜</strong>之。夫起<strong>溺</strong>，妇亦<strong>抱</strong>儿起<strong>溺</strong>。床上又一大儿<strong>醒</strong>，絮絮不止。当是时，妇手<strong>拍</strong>儿声，口中呜声，儿<strong>含</strong>乳<strong>啼</strong>声，大儿初醒声，床声，夫<strong>叱</strong>大儿声，溺桶中声，一齐奏发，众妙毕备。满堂宾客，无不<strong>伸</strong>颈<strong>侧目</strong>，微<strong>笑</strong>默<strong>叹</strong>，以为妙绝也。<br>　既而夫上床<strong>寝</strong>，妇又<strong>呼</strong>大儿<strong>溺</strong>，毕，都上床寝。小儿亦渐欲睡。夫茀声起，妇<strong>拍</strong>儿亦渐拍渐止。微<strong>闻</strong>有鼠作作索索，盆器倾侧，妇梦中<strong>咳</strong>嗽之声。宾客意少舒，稍稍正<strong>坐</strong>。<br>　忽一人大<strong>呼</strong>“火起”，夫起大<strong>呼</strong>，妇亦起大<strong>呼</strong>。两儿齐<strong>哭</strong>。俄而百千人大<strong>呼</strong>，百千儿<strong>哭</strong>，百千犬<strong>吠</strong>。中间力拉崩倒之声，火爆声，呼呼风声，百千齐作；又夹百千求救声，曳屋许许声，<strong>抢</strong>夺声，<strong>泼</strong>水声。凡所应有，无所不有。虽人有百手，手有百指，不能指其一端；人有百口，口有百舌，不能名其一处也。于是宾客无不变色<strong>离</strong>席，<strong>奋</strong>袖<strong>出</strong>臂，两股战战，几欲先<strong>走</strong>。<br>　忽然<strong>抚</strong>尺一下，群<strong>响</strong>毕绝。撤屏<strong>视</strong>之，一人、一桌、一椅、一扇、一抚尺而已。  </p><p>此文，行文简练，用词高超。善字对应英文be good at，会字就是meet with的意思。全文动词，一个接一个：会，施，坐，闻，哗，吠，惊，摇，呓，啼，含，拍，鸣，溺，呜，呼，哭…。换成英文，一个哭字就要考虑是crying呢，还是cried？主动呢还是被动？溺字就是我们说的撒尿，英文中怕是要搞一长串文字，以表示主语去到某地上厕所云云。英文更偏于静态，所以用词十分繁复，一个动词能解决的偏要写一串名词，大词。不说success，偏写end in failure。英文喜欢化简为繁，化动为静，化具体为抽象，化直接为迂回。中文刚好相反，宜动不宜静，直接干脆，具体简单，所以中文一个字可以顶上英文一串字。英文的从句就是静态的，中文善用动词以译之。</p><p>中英文间这种动静差异造成诸多问题，尤其在翻译中。 “It is not the strongest of the species that survive, but the one most responsive to change.” 要是照英文原句翻译该是：不是最强壮的生物活着，而是这种生物最适应改变。这种翻译把静态词都译出来了，然而给人的感觉很模糊，不知道要说什么。严复老先生的译文是：“物竞天择，适者生存。”简短有力，两个动词涵盖了英文原文大部分意思。这两种翻译差距是很大的，不是人人都如严复一样会翻译。现在的中译本图书中类似第一种翻译的情况真不少，不知还要害多少人。我自己时时也这么干，这么理解，但我现在知道我错了。</p><h2 id="英译汉的毛病"><a href="#英译汉的毛病" class="headerlink" title="英译汉的毛病"></a>英译汉的毛病</h2><p><strong>1.主语和系动词该省不省</strong></p><center>Beneath the pines look I for the recluse.</center><center>His page replies: "Gathering herbs my master's away.</center><center>You'll find him nowhere, as close are the clouds,</center><center>Though he must be on the hill, I dare say."</center>翻译成：<center>在松树下，我问路</center><center>他回答：“师傅采药去了</center><center>你找不到他，因为靠近云</center><center>尽管我敢说他一定在山里。”</center><p>完全直译，不知道在说什么。原文是下面的诗句：  </p><center>《寻隐者不遇》</center><center>贾岛</center><center>松下问童子，言师采药去</center><center>只在此山中，云深不知处</center><p>直译，太多废话，静态词如他，你之类太多，交代不清。同样，西方的诗文译成中文也最好去掉多余的主语和系词，让诗有诗的意境。翻译最怕的是写了一堆，不知所云，用多余的字表达含混的思想。</p><p>看下面这些重复缀余<br>作为一个中国人，我们怎能不爱中国？<br>作为一个丈夫的他是失败的，但是作为一个市长的他却是很成功的。<br><em>身为中国人，怎能不爱国?</em><br><em>作丈夫他虽失败，作市长却很成功。</em>  </p><p><strong>人名，地名，书名，影视名，名名不白</strong><br>关于人名，翻译花样太多了。Huxley到底是赫克思里还是赫胥黎？ham，mouth，cester等结尾的地名最易译错。著名人物乱加生卒年，莎士比亚一定后面括弧（Shakespeare）。更有一堆中间名的，还有点号，如美国总统特朗普（Donald J. Trump，1946.6.14-）。名人根本不需要如此累赘。难道孔子也要写成（Confucius，551-479 B.C.）吗？一部动漫School Days不译成校园时光，校园记忆，大好时光之类，偏要译成日在校园，博人眼球。人名翻译找《英语姓名译名手册》，地名翻译找《英语外国地名译名》，这两本书上写得好好的，偏不用，一定自己造一个，显得自己高明。</p><p><strong>当当当敲锣打鼓</strong><br>When是个奇特的词汇，有时作为副词，有时又是连接词。When I was young, I used to get up early.当我年轻的时候，我总是起床很早。一见When，马上就当…起来了，这句翻译看起来似乎一点儿也不怪，可真是这样吗？中国人会这么说？还是：小时候，老早我就起床了。</p><p><strong>的的得不休</strong><br>形容词，不管后面是-ious，-tive,-able，-ul，-cal中哪种后缀，到了中文都成了…的。译文解决好“的”问题，质量好一倍，这最考验译者的基本功。An old, mad, blind, despised, and dying king中一连五个形容词，所以译文中多半是五个的：一位衰老的，疯狂的，瞎眼的，被人蔑视的，垂死的君王。意思全对，语言全错。中国人绝不会这么形容一个人。An不用翻译，An纯粹为了满足语法要求。又瞎又狂，众所鄙视，行将就木之老王。一个的都不要，之字可替代的字。所以是赤壁之战，安史之乱而非赤壁的战，安史的乱。</p><p>白色的鸭(白鸭)<br>深深的水(深水)<br>徐徐的滑行(徐徐滑行)  </p><p>这是难度很高的技巧。<br>他不愧为热情型的人。<br><em>这技巧颇难。</em><br><em>他很热情。</em>  </p><p>最后说说得字用法。得表示一种程度，动作的程度。唱得很大声，跳得很远，打得很重中得字都是表示前面动词的程度，换成的是错误的用法。唱的大声，唱的指某个事物，大声指声音，这么一用就成了什么东西很大声，这是错的。</p><p><strong>直译，死译</strong><br>Family member译成家庭成员，家庭份子，中文里不是有家人一词现成可用吗？They are my family members.是不是要译成“他们是我的家庭成员”？想象你和父母去逛街，服务员问两人是谁？你说这是我的家庭成员，这像话吗？现实中你多半说：这是我的家人，或者说我们是一家人。所以别看是They are my family members，有时就得译成：我们是一家人。如此，才是人话，才是搞翻译。其他的说法太西方化，有多少人不自觉就成了西方人了。</p><p><strong>是他是她就是它</strong><br>中文里原没有她这个字，这是近代造的一个字，可能因为女权吧！然而翻译里也搞起来了。This is his or her view point.译为“这是他或她的看法。”这种译法看着累。西方更有意思，由History给你造出个Herstory来。历史怎么能只是他的故事(His story)呢？我们妇女也顶半边天，也有她的故事(Her story)。至于神一定是他，祖国河流是她，而无关重要者一律用上它。关于女权我不多语，只送一句话：男女的不平等，往往很多时候就由女人们自己造成。</p><p><strong>如果</strong><br>一见If，马上就如果。假使，倘使，倘若，要是，果真，万一全忘了。If I were you…多译成：如果我是你。不会有什么“假若我是你，倘使是我，要是我，换作我”之类中国话。</p><p><strong>和</strong><br>见and就是和。中文里的而，与，及，且，又，还，尚也全忘了。In the park we danced and sang.译文多是：在公园里，我们跳舞和唱歌，而不是：在公园里又唱又跳。You and I are mature adults成了“你和我都是成年人”，而非“你我皆为明事理之人”。实际上east, south, west and north不是东，南，西和北，而是东南西北。man and wife，you and I，back and forth统统去掉和，要说是夫妻，你我，前后。   </p><p>一年有春，夏，秋和冬四季<br>王小姐的父亲年纪大了和经常生病<br>同事们都认为他的设计昂贵和不切实际<br><em>一年有春，夏，秋，冬四季</em><br><em>王小姐的父亲年老多病</em><br><em>同事都认为他的设计华而不实</em> </p><p><strong>地</strong><br>看见ly结尾，马上就“地”了。慢慢地走，悄悄地说，隆隆地滚下，不知不觉地就看完了，愤然地走开。这个“地”最好少用，ly确实是副词，然而在中文里，这些词本就是副词，不需要加“地”。慢慢走，悄悄说，隆隆滚下，不知不觉就看完了，愤然走开不是更通顺，更能表现中文的韵味和气势吗？“慢慢地”更像slowlyly这样的词，然而没有这个词。也没有什么突然地，茫然地，欣然地，漠然地，而是突然，茫然，欣然，茫然。一个然字就是副词了，地还是留着，学学李子柒用来种菜吧！</p><p><strong>所</strong><br>所字也出来呼风唤雨，“我所能想到的，只有这些。”此处所字多余，“我能想到的，只有这些。”不是更好吗？大量文章都成了这个样子，所以你一见所，甚觉自然。其实这种句型是英文句子直译的，然后媒体，报刊，电视都这么用。渐渐你就被西化了。目前的中国，语言大趋势上是西化，而更干脆的传统说法给忘了。到处都是“我所珍爱的是…”，“我所敬佩的是..”，“你所想的正是我所想的”。换成“我珍爱的是…”，“我敬佩的是..”，“你想的正是我想的”这样的句子不是很好吗？中文这种舍简就繁，舍平易而就艰拗的风气实在太盛了，得改改。</p><p><strong>句式杂揉</strong><br>很多句子，读者读起来痛苦万分。总是抓不住重心，上气不接下气。“一个矮小的笨笨的看起来有点像已经超过五十多岁而实际年龄不过四十岁的女人。”怎么样，这种句子估计读得多吧？很多书籍，微信文章都是这么写的。这种句子就是扯不清英语从句，分不清主次，结果全给混成一团，让人不好下口。这个句子就是要表示…的女人，她…。中间夹杂太多内容，最后才给你个交待。从句拆开：那看来年过五十岁的矮笨女人，实际不过四十岁。</p><p><strong>性度</strong><br>中国人有个性，喜欢性，所以各种性起来了。我的双手已丧失掉了它的灵活性，这件事的重要性是不可小看的，这个仪器丧失了它的灵敏度，准确度不够高，能见度低等等句子。读起来好像没什么问题，甚至官方也这么用。仔细一想又全是问题。我双手不灵，这件事很重要，仪器不灵了，不准确，看不清都是对应的说法，又省字，又好懂。中国的现代化思想，科学概念全来自西方，所以整个汉字文化西化得厉害，国人注意不到这些。然而，国人一读古文顿时精神抖擞，感觉和白话官样文章很不同，道理就在这里。</p><p>这本小说可读性颇高。<br>这家伙说话太带侮辱性了。<br>他在该领域很有知名度。<br>王维的作品十分中国化。<br><em>这本小说好看。</em><br><em>这家伙说话太无礼了。</em><br><em>他在该领域很有名气。</em><br><em>王维的作品很有中国味儿。</em>  </p><p><strong>主义</strong><br>中国最爱搞主义。什么大男子主义，女权主义，集体主义，个人主义，素食主义，肉食主义，不婚主义，消极主义，爱国主义，奉献主义。主义是一种很高层次的东西，是需要理论准备的。不吃肉你有什么理论支持？算个什么主义？你什么主义也不是。主义一词是英文ism后缀的中译法，比如资本主义(Capitalism)，社会主义(Socialism)，所以其他的东西接上个ism，摇身一变就成了某某主义。不吃肉就是吃素，这是一种生活方式，叫素食生活，肉食生活，不婚人生，消极人生。爱国是不需要主义的，人人都爱国，这是爱国情怀。要是爱国也要来个主义，那古人都不爱国吗？古人讲的是家国天下，家国情怀，没人讲什么主义。我看美国人也不紧密围绕在特总统周围，高举什么什么主义伟大旗帜，人家不是一样收拾全球？少讲主义，多干实事。凡是张嘴就来主义，多是骗子，不是骗别人就是骗自己，连自己都骗，真是够坏的了。</p><p><strong>们</strong><br>这个们，也太多了。先生们，女士们，人们，男人们，女人们，士兵们，罪犯们。实际上，们字多余。且中文中也有各位，众位，列位，诸位的说法。   </p><p>员工们都努力工作<br>女性们服装花样真多<br>医生们一致认为他已经康复<br><em>员工努力工作</em><br><em>女性服装花样真多</em><br><em>医生一致认为他已康复</em>  </p><p>一致一词不正说明是多人才做的决定吗？一个人如何一致认为？Ladies and Gentlemen也不是女士们，先生们而是各位女士，先生。们字太多，大可不要。</p><p><strong>之一</strong><br>之一也常见，尤其是one of the most +最高级一类的句子翻译为中文，清一色都是…之一。这样翻译是不算错的，但不够简练。保留之一似乎更显精确，可大家都知道的事，加上之一，反而读起来绕口，未必多精确，更可能像是裹脚布。《哈姆雷特》是莎士比亚的名剧之一。谁都知道莎士比亚牛，想来也知道他写的剧本多，出名的也多。所以，之一二字可以删去。《哈姆雷特》是莎士比亚的名剧。李白是中国最伟大的诗人之一。这句表达的意思没错，但太拗嘴。其实用xx之一不就是要表示他很厉害吗？干脆直接点儿：李白是中国极伟大的诗人。</p><p>稽康是竹林七贤之一。<br>李广是汉朝名将之一。<br>《红楼梦》是中国的文学名著之一。<br><em>稽康是竹林七贤。</em><br><em>李广是汉朝名将。</em><br><em>《红楼梦》是中国文学名著。</em>    </p><p><strong>被</strong><br>被字句，学时态必学的，所以中文里冒出一堆被。“他被警告，那女人有艾滋”，“她被他深深地喜爱着”，“菜被吃光了”，“那条狗被饿得死去活来的”。全是翻译体，完全不像中文。中文里其实有：给，遭，教，让，为，任，挨等词。“他遭人警告说，那女人有艾滋”，“他深爱着她”，“菜吃光了”，“那条狗饿得死去活来的”。只被字一拿开，句子瞬间就中国化了。什么时候用被呢？为了突出主体的遭遇。“她被人强奸了”，“他让人给砍了”，“我挨打了”。这种用法，凸显了主人公的遭遇，被等字正当其时。这时最好不用“有人强奸了她”，“有人砍了他”，“老师打了我”。这种句子，软绵绵的，明明主人公遭殃，还不干脆说出来，偏拿别人当主语，自己反倒成了配角。记得大学本科某杨姓同学回答老师问题时说“如果我把你干咯…”，虽令人大笑，倒也实在。要是他来句“如果你被我干咯…”就没那效果了。我至今还记得这句，不正说明讲人话给人印象深刻吗？所以，少说被，少些套路，直接点儿，如果我把你干了…..</p><p><strong>名词动词混用</strong><br>说话弯弯绕，官样文章最常见。什么“作出突出贡献”，“作了十年奋斗”，“作重大改革”，“作重要批示”。难道不就是“贡献突出”，“奋斗十年”，“大加改革”，“重要批示”吗？现在可能觉得习惯了，纠正的反而奇怪。实际就是翻译体西化中国人太严重，大家都中毒了。作出二字不就是后面所接词汇实际在做的吗？批示不就是做的事吗，哪里还要再来一个作出？中文动态词强，却偏用静态词。社会上有些人成天地高喊文化复兴，然而他自己都是一套西方化的辞令，何谈复兴呢？爱批示的人，要好好反省，实际上你的批示实在不怎么重要，反而多半是屁事。</p><p>其他类似的动名词乱用如：<br>成都市的交通有不少问题(存在)。<br>伴侣间难免会有摩擦(的发生)。  </p><p>在他的前面，存在着巨大的困难。<br>中美两国的人民间有着深厚的友谊。<br>他在民族复兴的进程中发挥着重要的作用。<br><em>他遭遇巨大困难。</em><br><em>中美两国人民友谊深厚。</em><br><em>他为民族复兴作出重要贡献。</em></p><p><strong>有关</strong><br>关于，有关，涉及等等一类词，看起来很有道理，其实是多余的。“你有关于他的消息吗？”，这读起来似乎很通顺。然而实际上人们多说：“你有他消息没？”，而不会一张嘴就关于，涉及。科研论文最喜欢用这类词汇，但多是废话。一件事，倘使不相关，如何会坐下来讨论？这二字，是否画蛇添足？关于，涉及这类词是英文中的about，concerning等带出来的，用多了，一见about，马上就有关。所以，中国就有这么一堆相关部门，有关部门。</p><p>你有(关于)老王的消息吗？<br>(关于)老王的为人，我们已讨论过了。<br>(关于)这人究竟有没有罪(的问题)，谁也说不好。 </p><p><strong>成功</strong><br>表示完成的虚词或副词都是多余的。爱因斯坦成功地提出相对论。难道提出不说明他成功了吗？爱因斯坦提出相对论，这么译还有人看不懂吗？他已经煮好饭了。煮好就是完成的意思，再加了字就是重复。已经和了共用于一句是有问题的，只是大家说习惯了。他已煮好饭，一样通顺。表示完成状态的词汇在英文中多是ed结尾，所谓的过去时，再加助动词可以表示什么现在完成时，过去完成时，但核心还得看动词本身。完成就是完成，不要再添东西。</p><p><strong>乱用成语</strong><br>成语是中华民族先民智慧的积淀，是传给后人的宝藏。然而，各种不正规的用法见诸于媒体，报端。一个普通女性死了，马上配上“香消玉陨”，女人做贼，也感叹“卿本佳人，奈何做贼”，对应现在就是“明明可以靠颜值吃法，却偏偏要做贼。”这种言语使用，把人的注意力转移到美丑上，是非则全然忘了。做贼就是不对，该批判，该反思。然而，大众却关心起其长相来了，这时罪名不重要了。洗个澡，也要说是什么出水芙蓉。这类太雅的词配上极俗的事丝毫没有表现出什么高雅，反而显得很庸俗。最后就像孔乙己般，全是知乎者也之类的词语，叫人半懂不懂。</p><p><strong>简单词，复杂意</strong><br>有的句子单词很简单，但连起来就不知如何译。比如To be or not to be, That’s a question.这里的be不表“是”而表“存在”。所以，句子不是“是还是不是，是个问题”而是“是生是死，是个值得考虑的问题”。这句很著名，是《哈姆雷特》中名句。Don’t cough more than you can help.看起来各个单词都认识，一翻译又出问题。难道是“不要咳得多于你能咳的”吗？可没人会这么说，实际是“能不咳，就不咳”。I say no and that’s that.糟了，这更变态，都是什么呀？怎么一堆that，还有and？有人一看and，心想和字少不了，翻译就来了：“我说不行和那个就是那个”。这是人话吗？that’s that 表示前面I say no这件事，是再次强调。所以译文应该是：“说不行，就不行”，主语可不译，句子中含有强烈的语气，主语是很明显的。这么译，不正是中国话了吗？</p><p>作中国人，说中国话，相当多的中国人言谈举止已经西化得严重了，除了他的躯体，剩下的全奉献给了西方。在大谈民族复兴的时候，搞翻译的，要好好学翻译，好好说话。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/01/10/lhPP6U.md.png&quot; alt=&quot;fydd&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Culture" scheme="http://www.shieber.cn/categories/Culture/"/>
    
    
      <category term="Translation" scheme="http://www.shieber.cn/tags/Translation/"/>
    
  </entry>
  
  <entry>
    <title>神翻译</title>
    <link href="http://www.shieber.cn/title/eb015e2b/"/>
    <id>http://www.shieber.cn/title/eb015e2b/</id>
    <published>2020-01-10T02:50:21.000Z</published>
    <updated>2020-01-10T03:38:08.862Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2020/01/10/lfqrTO.md.png" alt="error1"></p><a id="more"></a><p>中国神翻译时时见诸新闻，特收集一些有趣的翻译。  </p><h2 id="字句翻译"><a href="#字句翻译" class="headerlink" title="字句翻译"></a>字句翻译</h2><p>1.God Use VPN. 佛跳墙。<br>2.Old dry mother. 老干妈。<br>3.We found love. 潍坊的爱。<br>4.Jack, slow fuck. 捷克斯洛伐克。<br>5.Seven up eight down.七上八下。<br>6.A time sex thing. 一次性用品。<br>7.You can kill me, but you can’t fuck me. 士可杀，不可辱。<br>8.You di da di da me, I hua la hua you.滴水之恩，当以涌泉相报。  </p><h2 id="人名翻译"><a href="#人名翻译" class="headerlink" title="人名翻译"></a>人名翻译</h2><table><thead><tr><th align="center">译名</th><th align="center">人物</th><th align="center">译名</th><th align="center">人物</th></tr></thead><tbody><tr><td align="center">Wayne</td><td align="center">魏延</td><td align="center">Summary</td><td align="center">司马懿</td></tr><tr><td align="center">John</td><td align="center">张颌</td><td align="center">Water</td><td align="center">华佗</td></tr><tr><td align="center">Susan</td><td align="center">孙尚香</td><td align="center">Major</td><td align="center">马忠</td></tr><tr><td align="center">Marshall</td><td align="center">马超</td><td align="center">Joey</td><td align="center">周瑜</td></tr><tr><td align="center">David</td><td align="center">典韦</td><td align="center">Rambo</td><td align="center">吕布</td></tr><tr><td align="center">Pond</td><td align="center">庞德</td><td align="center">Marcel</td><td align="center">马谡</td></tr><tr><td align="center">Josh</td><td align="center">贾诩</td><td align="center">Dunn</td><td align="center">邓艾</td></tr><tr><td align="center">Russell</td><td align="center">鲁肃</td><td align="center">Yahoo</td><td align="center">羊祜</td></tr><tr><td align="center">Charlie</td><td align="center">张辽</td><td align="center">Chauncey</td><td align="center">陈式</td></tr><tr><td align="center">Cunning</td><td align="center">甘宁</td><td align="center">Faye</td><td align="center">费祎</td></tr><tr><td align="center">Pavon</td><td align="center">潘风</td><td align="center">Hansen</td><td align="center">华雄</td></tr><tr><td align="center">Raymond</td><td align="center">吕蒙</td><td align="center">Luke</td><td align="center">陆抗</td></tr><tr><td align="center">Rachel</td><td align="center">文丑</td><td align="center">Joy</td><td align="center">大乔</td></tr><tr><td align="center">Gay</td><td align="center">关羽</td><td align="center">Joy.II</td><td align="center">小乔</td></tr><tr><td align="center">Jeff</td><td align="center">张飞</td><td align="center">Sheldon</td><td align="center">夏侯惇</td></tr><tr><td align="center">Chocolate</td><td align="center">诸葛亮</td><td align="center"></td><td align="center"></td></tr></tbody></table><p>不定期更新…..</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/01/10/lfqrTO.md.png&quot; alt=&quot;error1&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Culture" scheme="http://www.shieber.cn/categories/Culture/"/>
    
    
      <category term="Translation" scheme="http://www.shieber.cn/tags/Translation/"/>
    
  </entry>
  
  <entry>
    <title>桃花源记 【晋】陶渊明・九译</title>
    <link href="http://www.shieber.cn/title/27ef22b9/"/>
    <id>http://www.shieber.cn/title/27ef22b9/</id>
    <published>2020-01-09T02:55:59.000Z</published>
    <updated>2020-01-10T03:48:04.579Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2020/01/09/lRbTJA.md.png" alt="thyj">            </p><a id="more"></a><p>　 最近看余光中书籍，书中提到各家(大方之家)对《桃花源记》翻译错漏百出，遂收集九位方家译文以供赏析。九位大家，有中国人，也有外国人，各家翻译风格不同，给人的感觉也殊为各异，细细品读，发觉文字间各有乾坤。有翻译对原文字句断地非常好，一一对应，也有随性发挥者。除此之外，时态翻译也是一个重点。中国人读桃花源记会觉得是什么时候的事呢？是过去抑或现在？仔细斟酌，就可知有的译文时态不合适。桃花源记是我最喜欢的一篇古文，时光荏苒，白驹过隙，还记得此中词句，不时吟咏，确也生出一番别样的感受。  </p><h2 id="译本一-许景城"><a href="#译本一-许景城" class="headerlink" title="译本一 [许景城]"></a>译本一 [许景城]</h2><p><strong><center>An Idyllic Land of Peach-Blossom Spring<br>Tao Yuanming from Jin Dynasty</center></strong></p><p>　 晋太元中，武陵人捕鱼为业，缘溪行，忘路之远近。忽逢桃花林，夹岸数百步，中无杂树，芳草鲜美，落英缤纷；渔人甚异之。复前行，欲穷其林。<br>　 Amid the Taiyuan era of Eastern Jin Dynasty, there was a fisherman, a native of Wuling. He rowed his boat along a brook, not mindful of how far he had toured, when suddenly he came across a blossoming peach grove flanking the banks continuously for hundreds of footsteps. The peach grove with no other sundry trees permeated with sweet fragrance, fresh green grass, and falling and fallen blossoms. Amazed by what he saw, the fisherman rowed further, with a desire to explore how far it extended.  </p><p>　 林尽水源，便得一山。山有小口，仿佛若有光，便舍船，从口入。初极狭，才通人；复行数十步，豁然开朗。土地平旷，屋舍俨然。有良田、美池、桑、竹之属，阡陌交通，鸡犬相闻。其中往来种作，男女衣着，悉如外人；黄发垂髫，并佁然自乐。<br>　 When the grove faded away at the end of the brook, he found himself in front of a mountain with a small opening through which a light loomed. He thus left his boat and walked into the opening which at first was found to be so narrow that only one could pass through it. After walking forward for a few footsteps, he discovered that it led to an open air where flat and wide was the land with well-arranged houses, rich fields, beautiful ponds, mulberries, bamboos and the like. He saw the paths intersecting the fields in all directions, and heard cocks crowing and dogs barking. Here, men and women passing back and forth or working in the fields, were dressed like people outside. The grizzled-haired elders and the children with uncoiled hairs looked happy and self-contentede.  </p><p>　 见渔人，乃大惊，问所从来；具答之。便要还家，设酒、杀鸡、作食。村中闻有此人，咸来问讯。自云：先世避秦时乱，率妻子邑人来此绝境，不复出焉；遂与外人间隔。问今是何世？乃不知有汉，无论魏、晋！此人一一为具言所闻，皆叹惋。余人各复延至其家，皆出酒食，停数日，辞去。此中人语云：”不足为外人道。”<br>　 People were so astonished to see this outsider, and asked him where he came from. After the fisherman answered all the questions, he was invited to their homes where they served wine and killed chicken to offer a feast. When the news of the fisherman’ visit spread out to other villagers, they all came to greet him. Then, they told the outsider that their ancestors, fleeing from disorders and chaos during the Qin Period, had come with their wives and children to this idyllic land, and had never gone out since, leaving themselves secluded from outsiders. When they asked what dynasty it was at present, they had no idea there had been dynasties such as Han, Wei and Jin. The outsider related all he knew in detail, event by event, and they heaved frequent sighs and sorrows. The villages by turns invited him to their houses where he was entertained with wine and food. He stayed for a few days. When he decided to leave, people of this place reminded him, “It’s better not to reveal this place to others.”  </p><p>　 既出，得其船，便扶向路，处处志之。及郡下，诣太守，说如此。太守即遣人随其往，寻向所志，遂迷不复得路。<br>　 After he came out and got his boat, he retraced and marked the route via which he had come. When he reached the town, he visited the prefect, and narrated the whole story to him who immediately sent his pawns to go with the fisherman to look for that place. They followed the marks but got lost and never found the way.  </p><p>　 南阳刘子骥，高尚士也，闻之，欣然规往，未果，寻病终。后遂无问津者。<br>　 At this news, Liu Ziji from Nanyang, a gentleman, gleefully decided to seek for that place, but he ailed and died before he could fulfill his plan. From then on, no one else ever quested for that land.  </p><p>Notes:<br>　　[1] Tao Yuanming (365- 427AD), from Eastern Jin Dynasty, was a famous Chinese pastoral poet.<br>　　[2] This prose was written by Tao Yuanming in the second year (421 AD) during the era of Yongchu in Eastern Jin Dynasty(永初二年). The poet described an idyllic place like Shangri-La in pursuit of a peaceful and self-sufficient society without classes, and exploitation, which was in sharp contrast with his contemporary society.<br>　　[3] The Taiyuan Era started from 376AD to 396 AD.<br>　　[4] Qin Period extended from 221BC to 208BC.<br>　　[5] Han Dynasty reigned from 206 BC to 220AD.　<br>　　[6] Wei Dynasty reigned from 220AD to 265AD.<br>　　改译于英国班戈梅奈观海楼 2016-2-28   </p><h2 id="译本二-A-R-Davis"><a href="#译本二-A-R-Davis" class="headerlink" title="译本二 [A. R. Davis]"></a>译本二 [A. R. Davis]</h2><p><strong><center>Peach-Blossom Source</center></strong></p><p>　 晋太元中，武陵人捕鱼为业，缘溪行，忘路之远近。忽逢桃花林，夹岸数百步，中无杂树，芳草鲜美，落英缤纷；渔人甚异之。复前行，欲穷其林。<br>　 During the Taiyuan period (376–396) of Jin a man of Wuling, who made his living as a fisherman, ascended a stream, forgetful of the distance he traveled. Suddenly he came upon a grove of peach trees in blossom. They lined the banks for several hundred paces: among them were no other kinds of tree. The fragrant herbage was fresh and beautiful; fallen blossom lay in profusion. The fisherman, in extreme wonder, again went forward, wishing to go to the end of the grove.</p><p>　 林尽水源，便得一山。山有小口，仿佛若有光，便舍船，从口入。初极狭，才通人；复行数十步，豁然开朗。土地平旷，屋舍俨然。有良田、美池、桑、竹之属，阡陌交通，鸡犬相闻。其中往来种作，男女衣着，悉如外人；黄发垂髫，并佁然自乐。<br>　 The grove ended at the stream’s source, and there he found a hill. In the hill was a small opening from which a light seemed to come. So he left his boat and went in through the opening. At first it was very narrow, barely allowing a man to pass, but as he went on for some tens of paces, it came out into the open air, upon lands level and wide with houses of a stately appearance. There fine fields and beautiful pools, clumps of mulberries and bamboos. The field dykes intersected; cocks crowed and dogs barked to each other. The clothes of the men and women who came and went, planted and worked among them were entirely like those of people outside. The white-haired and the children with their hair in tufts happily enjoyed themselves.</p><p>　 见渔人，乃大惊，问所从来；具答之。便要还家，设酒、杀鸡、作食。村中闻有此人，咸来问讯。自云：先世避秦时乱，率妻子邑人来此绝境，不复出焉；遂与外人间隔。问今是何世？乃不知有汉，无论魏、晋！此人一一为具言所闻，皆叹惋。余人各复延至其家，皆出酒食，停数日，辞去。此中人语云：”不足为外人道。”<br>　 When they saw the fisherman, they were greatly surprised and asked from what place he came. When he had answered all their questions, they invited him to come back to their home, where they set out wine, killed a chicken and made a meal. When the villagers heard of this man, they all came to pay their respects. They told him that their ancestors, fleeing from the troubles during the Qin period (221BC–208BC), had brought their wives and children and neighbours to this inaccessible spot and had not gone out again. Thus they became cut off from people outside. They asked what dynasty it was now: they did not know that there had been Han (206 BC–220AD), nor of courts Wei (220–265AD) or Jin. The fisherman told them all he knew, item by item, and at everything they sighed with grief. The others in turn also invited him to their homes, and all set out wine and food. He stayed for several days and then took leave of them. The people of this place said to him: “You should not speak of this to those outside.”</p><p>　 既出，得其船，便扶向路，处处志之。及郡下，诣太守，说如此。太守即遣人随其往，寻向所志，遂迷不复得路。<br>　 When he had gone out, he found his boat and followed the route by which he had come: everywhere he noted the way. When he reached the commandery, he called on the prefect and told him this story. The prefect immediately sent a man to go with him and seek out the places he had previously noted, but they went astray and could not find the way again.</p><p>　 南阳刘子骥，高尚士也，闻之，欣然规往，未果，寻病终。后遂无问津者。<br>　 Liu Ziji of Nanyang, who was a scholar of lofty ideals, heard of it and joyfully planned to go. Soon after, before he had carried out his plan, he fell ill and died. Afterwards there was no one who “sought the ford”.</p><h2 id="译本三-Rick-Davis-amp-David-Steelman"><a href="#译本三-Rick-Davis-amp-David-Steelman" class="headerlink" title="译本三 [Rick Davis &amp; David Steelman]"></a>译本三 [Rick Davis &amp; David Steelman]</h2><p><strong><center>Peach Blossom Shangri-la<br>        Tao YuanMing[1]</center></strong></p><p>　 晋太元中，武陵人捕鱼为业，缘溪行，忘路之远近。忽逢桃花林，夹岸数百步，中无杂树，芳草鲜美，落英缤纷；渔人甚异之。复前行，欲穷其林。<br>　 During the Taiyuan era [2] of the Jin Dynasty [3] there was a man of Wuling [4] who made his living as a fisherman. Once while following a stream he forgot how far he had gone. He suddenly came to a grove of blossoming peach trees. It lined both banks for several hundred paces and included not a single other kind of tree. Petals of the dazzling and fragrant blossoms were falling everywhere in profusion. Thinking this place highly unusual, the fisherman advanced once again in wanting to see how far it went.</p><p>　 林尽水源，便得一山。山有小口，仿佛若有光，便舍船，从口入。初极狭，才通人；复行数十步，豁然开朗。土地平旷，屋舍俨然。有良田、美池、桑、竹之属，阡陌交通，鸡犬相闻。其中往来种作，男女衣着，悉如外人；黄发垂髫，并佁然自乐。<br>　 The peach trees stopped at the stream’s source, where the fisherman came to a mountain with a small opening through which it seemed he could see light. Leaving his boat, he entered the opening. At first it was so narrow that he could barely pass, but after advancing a short distance it suddenly opened up to reveal a broad, flat area with imposing houses, good fields, beautiful ponds, mulberry trees, bamboo, and the like. The fisherman saw paths extending among the fields in all directions, and could hear the sounds of chickens and dogs. Men and women working in the fields all wore clothing that looked like that of foreign lands. The elderly and children all seemed to be happy and enjoying themselves.</p><p>　 见渔人，乃大惊，问所从来；具答之。便要还家，设酒、杀鸡、作食。村中闻有此人，咸来问讯。自云：先世避秦时乱，率妻子邑人来此绝境，不复出焉；遂与外人间隔。问今是何世？乃不知有汉，无论魏、晋！此人一一为具言所闻，皆叹惋。余人各复延至其家，皆出酒食，停数日，辞去。此中人语云：”不足为外人道。”<br>　 The people were amazed to see the fisherman, and they asked him from where he had come. He told them in detail, then the people invited him to their home, set out wine, butchered a chicken [5], and prepared a meal. Other villagers heard about the fisherman, and they all came to ask him questions. Then the villagers told him, “To avoid the chaos of war during the Qin Dynasty [6], our ancestors brought their families and villagers to this isolated place and never left it, so we’ve had no contact with the outside world.” They asked the fisherman what the present reign was. They were not even aware of the Han Dynasty [7], let alone the Wei [8] and Jin. The fisherman told them everything he knew in great detail, and the villagers were amazed and heaved sighs. Then other villagers also invited the fisherman to their homes, where they gave him food and drink. After several days there, the fisherman bid farewell, at which time some villagers told him, “It’s not worth telling people on the outside about us.” [9]</p><p>　 既出，得其船，便扶向路，处处志之。及郡下，诣太守，说如此。太守即遣人随其往，寻向所志，遂迷不复得路。<br>　 The fisherman exited through the opening, found his boat, and retraced his route while leaving markers to find this place again. Upon his arrival at the prefecture town he went to the prefect and told him what had happened. The prefect immediately sent a person to follow the fisherman and look for the trail markers, but they got lost and never found the way.</p><p>　 南阳刘子骥，高尚士也，闻之，欣然规往，未果，寻病终。后遂无问津者。<br>　 Liu Ziji [10] of Nanyang [11] was a person of noble character. When he heard this story he was happy and planned to visit the Shangri-la, but he died of illness before he could accomplish it. After that no one else ever looked for the place.</p><p>Translator’s Notes:<br>　　[1] Chinese nature poet, c. 365-427. This prose story is one of the poet’s most well-known works.<br>　　[2] 376-396.<br>　　[3] 265-420 (actually two sequential dynasties, the “Western” and the “Eastern”).<br>　　[4] A place in present-day Hunan Province.<br>　　[5] “…set out wine, butchered a chicken”: A stock phrase meaning to entertain a guest lavishly.<br>　　[6] 221-206 B.C.<br>　　[7] 206 B.C. to A.D. 220.<br>　　[8] A.D. 220-265.<br>　　[9] The villagers would just as soon keep their existence secret.<br>　　[10] A retired scholar of the Jin Dynasty.<br>　　[11] A place in present-day Henan Province.<br>　　This translation is based on the SiKuQuanShu text with editorial emendations and punctuation by the translators. It was done by Rick Davis (Japan) with help from David Steelman (Taiwan).</p><h2 id="译本四-James-Robert-Hightower"><a href="#译本四-James-Robert-Hightower" class="headerlink" title="译本四 [James Robert Hightower]"></a>译本四 [James Robert Hightower]</h2><p><strong><center>The Peach Blossom Spring</center></strong></p><p>　 晋太元中，武陵人捕鱼为业，缘溪行，忘路之远近。忽逢桃花林，夹岸数百步，中无杂树，芳草鲜美，落英缤纷；渔人甚异之。复前行，欲穷其林。<br>　 During the Tai-yuan period of the China dynasty a fisherman of Wu-ling once rowed upstream, unmindful of the distance he had gone, when he suddenly came to a grove of peach trees in bloom. For several hundred paces on both banks of the stream there was no other kind of tree. The wild flowers growing under them were fresh and lovely, and fallen petals covered the ground—it made a great impression on the fisher-man. He went on for away with the idea of finding out how far the grove extended.</p><p>　 林尽水源，便得一山。山有小口，仿佛若有光，便舍船，从口入。初极狭，才通人；复行数十步，豁然开朗。土地平旷，屋舍俨然。有良田、美池、桑、竹之属，阡陌交通，鸡犬相闻。其中往来种作，男女衣着，悉如外人；黄发垂髫，并佁然自乐。<br>　 It came to an end at the foot of a mountain whence issued the spring that supplied the streams. There was a small opening in the mountain and it seemed as though light was coming through it. The fisherman left his boat and entered the cave, which at first was extremely narrow, barely admitting his body, after a few dozen steps it suddenly opened out onto a broad and level plain where well-built houses were surrounded by rich fields and pretty ponds. Mulberry, bamboo and other trees and plants grew there, and criss-cross paths skirted the fields. The sounds of cocks crowing and dogs barking could be heard from one courtyard to the next. Men and women were coming and going about their work in the fields. The clothes they wore were like those of ordinary people. Old men and boys were carefree and happy.</p><p>　 见渔人，乃大惊，问所从来；具答之。便要还家，设酒、杀鸡、作食。村中闻有此人，咸来问讯。自云：先世避秦时乱，率妻子邑人来此绝境，不复出焉；遂与外人间隔。问今是何世？乃不知有汉，无论魏、晋！此人一一为具言所闻，皆叹惋。余人各复延至其家，皆出酒食，停数日，辞去。此中人语云：”不足为外人道。”<br>　 When they caught sight of the fisherman, they asked in surprise how he had got there. The fisherman told the whole story, and was invited to go to their house, Where he was served wine while they killed a chicken for a feast. When the other villagers heard about the fisherman’s arrival, they all came to pay him a visit. They told him that their ancestors had fled the disorders of Ch’in times and, having taken refugee here with wives and children and neighbours, had never ventured out again consequently they had lost all contact with the out-side world. They asked what the present ruling dynasty was, for they had never heard of the Han, Let alone the Wei and the Jin. They sighed unhappily as the fisherman enumerated the dynasties one by one and recounted the vicissitudes of each.</p><p>　 既出，得其船，便扶向路，处处志之。及郡下，诣太守，说如此。太守即遣人随其往，寻向所志，遂迷不复得路。<br>　 The visitors all asked him to come to their houses in turn, and at every house he had wine and food. He stayed several days. As he was about to go away, the people said, “There’s’ no need to mention our existence to outsiders.” After the fisherman had gone out and recovered his boat, he carefully marked the route. On reaching the city, he reported what he had found to the magistrate, who at once sent a man to follow him back to the place. They proceed according to the marks he had made, but went astray and were unable to find the cave again.</p><p>　 南阳刘子骥，高尚士也，闻之，欣然规往，未果，寻病终。后遂无问津者。<br>　 A high-minded gentleman of Nan-yang named LiuTzu-chi heard the story and happily made preparations to go there, but before he could leave he fell sick and died. Since then there has been no one interested in trying to find such a place.</p><h2 id="译本五-Lin-Yutang-林语堂"><a href="#译本五-Lin-Yutang-林语堂" class="headerlink" title="译本五 [Lin Yutang 林语堂]"></a>译本五 [Lin Yutang 林语堂]</h2><p><strong><center>The Peach Colony</center></strong></p><p>　 晋太元中，武陵人捕鱼为业，缘溪行，忘路之远近。忽逢桃花林，夹岸数百步，中无杂树，芳草鲜美，落英缤纷；渔人甚异之。复前行，欲穷其林。林尽水源，便得一山。山有小口，仿佛若有光，便舍船，从口入。初极狭，才通人；复行数十步，豁然开朗。土地平旷，屋舍俨然。有良田美池，桑竹之属，阡陌交通，鸡犬相闻。其中往来种作，男女衣着，悉如外人；黄发垂髫，并怡然自乐。<br>　 During the reign of Taiyuan of Chin, there was a fisherman of Wuling. One day he was walking along a bank. After having gone a certain distance, he suddenly came upon a peach grove which extended along the bank for about a hundred yards. He noticed with surprise that the grove had a magic effect, so singularly free from the usual mingling of brushwood, while the beautifully grassy ground was covered with its rose petals. He went further to explore, and when he came to the end of the grove, he saw a spring which came from a cave in the hill, Having noticed that there seemed to be a weak light in the cave, he tied up his boat and decided to go in and explore. At first the opening was very narrow, barely wide enough for one person to go in. After a dozen steps, it opened into a flood of light. He saw before his eyes a wide, level valley, with houses and fields and farms. There were bamboos and mulberries; farmers were working and dogs and chickens were running about. The dresses of the men and women were like those of the outside world, and the old men and children appeared very happy and contented. </p><p>　 见渔人，乃大惊，问所从来；具答之。便要还家，设酒、杀鸡、作食。村中闻有此人，咸来问讯。自云：先世避秦时乱，率妻子邑人来此绝境，不复出焉；遂与外人间隔。问今是何世？乃不知有汉，无论魏、晋！此人一一为具言所闻，皆叹惋。余人各复延至其家，皆出酒食，停数日，辞去。此中人语云：“不足为外人道。”<br>　 They were greatly astonished to see the fisherman and asked him where he had come from. The fisherman told them and was invited to their homes, where wine was served and chicken was killed for dinner to entertain him. The villagers hearing of his coming all came to see him and to talk. They said that their ancestors had come here as refugees to escape from the tyranny of Tsin Shih-huang (builder of Great Wall) some six hundred years ago, and they had never left it. They were thus completely cut off from the world, and asked what was the ruling dynasty now. They had not even heard of the Han Dynasty (two centuries before to two centuries after Christ), not to speak of the Wei (third century A.D.) and the Chin (third and fourth centuries). The fisherman told them, which they heard with great amazement. Many of the other villagers then began to invite him to their homes by turn and feed him dinner and wine.After a few days, he took leave of them and left. The villagers begged him not to tell the people outside about their colony.</p><p>　 既出，得其船，便扶向路，处处志之。及郡下，诣太守，说如此。太守即遣人随其往，寻向所志，遂迷不复得路。南阳刘子骥，高尚士也，闻之，欣然规往，未果，寻病终。后遂无问津者。<br>　 The man found his boat and came back, marking with signs the route he had followed. He went to the magistrate’s office and told the magistrate about it. The latter sent someone to go with him and find the place. They looked for the signs but got lost and could never find it again. Liu Tsechi of Nanyang was a great idealist. He heard of this story, and planned to go and find it, but was taken ill and died before he could fulfill his wish. Since then, no one has gone in search of this place.</p><h2 id="译本六-Roland-C-Fang-方重"><a href="#译本六-Roland-C-Fang-方重" class="headerlink" title="译本六[Roland C. Fang 方重]"></a>译本六[Roland C. Fang 方重]</h2><p><strong><center>Peach-Blossom Springs</center></strong></p><p>　 晋太元中，武陵人捕鱼为业，缘溪行，忘路之远近。忽逢桃花林，夹岸数百步，中无杂树，芳草鲜美，落英缤纷；渔人甚异之。复前行，欲穷其林。林尽水源，便得一山。山有小口，仿佛若有光，便舍船，从口入。初极狭，才通人；复行数十步，豁然开朗。土地平旷，屋舍俨然。有良田美池，桑竹之属，阡陌交通，鸡犬相闻。其中往来种作，男女衣着，悉如外人；黄发垂髫，并怡然自乐。<br>　 During the reign of Emperor Shao-Wu of Eastern Tsin there was once a native of Wuling, who lived on fishing. One day he rowed up a stream, and soon forgot how far he had gone. All of a sudden he came upon a peach grove. For hundreds of paces along both banks of the stream, the peach-trees were in full bloom. No other trees were to be seen in the whole grove. The soft grass looked fresh and beautiful. Here and there falling blossoms were dancing gracefully in a thousand hues. The fisherman was beside himself with amazement. He went on further in order to reach the uppermost limits of the grove. As the peaches came to an end, the headsprings of the stream was found to issue from the side of a mountain. A narrow cave-like opening showed him some light that seemed to emerge from within. Leaving his boat he ventured in. At first it was just wide enough to admit one person. But after a few dozen paces an extensive view suddenly appeared before him. He saw the level plain stretch out far and wide, and the houses and homesteads all neatly arranged. Rich rice-fields, picturesque ponds, and mulberry and bamboo groves were everywhere. The foot-paths crossed and re-crossed one another. As the cocks crowed, the dogs barked in return. All the inhabitants busied themselves with farm work in the same manner as the people outside, so did their men and women attire themselves. The yellow-tressed old folk and the youngsters with flowing hair were all living in self-contentment. </p><p>　 见渔人，乃大惊，问所从来；具答之。便要还家，设酒、杀鸡、作食。村中闻有此人，咸来问讯。自云：先世避秦时乱，率妻子邑人来此绝境，不复出焉；遂与外人间隔。问今是何世？乃不知有汉，无论魏、晋！此人一一为具言所闻，皆叹惋。余人各复延至其家，皆出酒食，停数日，辞去。此中人语云：“不足为外人道。”<br>　 Seeing the fisherman they were so eager to find out from whence he came. He made his answers accordingly and was invited to their homes to be entertained with chicken and wine. Others in the village, on hearing of the arrival of a stranger, also flocked round to make inquiries. Of their own accord they told him of the forefathers who had, during the troublous times of the Chins, sought refuge in this place of absolute seclusion together with their families and neighbours. After having settled down here they never thought of going out again. They had been so cut off from the rest of the world that a knowledge of the times would be a revelation to them. They had not heard of the Han Dynasty, not to say the Wei and the Tsin. The fisherman informed them all about these changes, and they could not help being deeply affected. Then more of them asked him to dine by turns. It was not until several days later that he begged to take leave. He was bidden, however, to keep to himself all the things talked about among them, for, they said, such matters would not be worth imparting to the outside world. </p><p>　 既出，得其船，便扶向路，处处志之。及郡下，诣太守，说如此。太守即遣人随其往，寻向所志，遂迷不复得路。南阳刘子骥，高尚士也，闻之，欣然规往，未果，寻病终。后遂无问津者。<br>　 Our fisherman came out, found his boat again, and took care to leave marks all along his way home. As soon as he was back to the city he told his adventure to the magistrate, who sent men to go with him. They tried to trace the marks he had left, but failed, and lost their way thither. A good scholar of Nanyang, on learning of it, was anxious to re-discover the place. Nor did he succeed, and died soon of illness. Ever since then, few have attempted the passage again</p><h2 id="译本七-罗经国"><a href="#译本七-罗经国" class="headerlink" title="译本七[罗经国]"></a>译本七[罗经国]</h2><p><strong><center>A Tale of the Fountain of the Peach Blossom Spring</center></strong></p><p>　 晋太元中，武陵人捕鱼为业，缘溪行，忘路之远近。忽逢桃花林，夹岸数百步，中无杂树，芳草鲜美，落英缤纷；渔人甚异之。复前行，欲穷其林。<br>　 In the year of Taiyuan (2) of the Jin Dynasty, there lived a man in Wuling Prefecture (3) who earned his living by fishing. One day, he rowed his boat along a stream, unaware of how far he had gone when all of a sudden, he found himself in the midst of a wood full of peach blossoms. The wood extended several hundred footsteps along both banks of the stream. There were no trees of other kinds. The fragrant grass was fresh and beautiful and peach petals fell in riotous profusion. The fisherman was so curious that he rowed on, in hopes of discovering where the trees ended.</p><p>　 林尽水源，便得一山。山有小口，仿佛若有光，便舍船，从口入。初极狭，才通人；复行数十步，豁然开朗。土地平旷，屋舍俨然。有良田、美池、桑、竹之属，阡陌交通，鸡犬相闻。其中往来种作，男女衣着，悉如外人；黄发垂髫，并佁然自乐。<br>　 At the end of the wood was the fountainhead of the stream. The fisherman beheld a hill, with a small opening from which issued a glimmer of light. He stepped ashore to explore the crevice. His first steps took him into a passage that accommodated only the width of one person. After he progressed about scores of paces, it suddenly widened into an open field. The land was flat and spacious. There were houses arranged in good order with fertile fields, beautiful ponds, bamboo groves, mulberry trees and paths crisscrossing the fields in all directions. The crowing of cocks and the barking of dogs were within hearing of each other. In the fields the villagers were busy with farm work. Men and women were dressed like people outside. They all, old and young, appeared happy.</p><p>　 见渔人，乃大惊，问所从来；具答之。便要还家，设酒、杀鸡、作食。村中闻有此人，咸来问讯。自云：先世避秦时乱，率妻子邑人来此绝境，不复出焉；遂与外人间隔。问今是何世？乃不知有汉，无论魏、晋！此人一一为具言所闻，皆叹惋。余人各复延至其家，皆出酒食，停数日，辞去。此中人语云：”不足为外人道。”<br>　 They were surprised at seeing the fisherman, who, being asked where he came from, answered their every question. Then they invited him to visit their homes, killed chickens, and served wine to entertain him. As the words of his arrival spread, the entire village turned out to greet him. They told him that their ancestors had come to this isolated haven, bringing their families and the village people, to escape from the turmoil during the Qin Dynasty and that from then onwards, they had been cut off from the outside world. They were curious to know what dynasty it was now. They did not know the Han Dynasty, not to mention the Wei and the Jin dynasties. The fisherman told them all the things they wanted to know. They sighed. The villagers offered him one hospitality after another. They entertained him with wine and delicious food. After several days, the fisherman took his leave. The village people entreated him not to let others know of their existence.</p><p>　 既出，得其船，便扶向路，处处志之。及郡下，诣太守，说如此。太守即遣人随其往，寻向所志，遂迷不复得路。<br>　 Once out, the fisherman found his boat and rowed homeward, leaving marks all the way. When he came back to the prefecture, he reported his adventure to the prefect, who immediately sent people to look for the place, with the fisherman as a guide. However, the marks he had left could no longer be found. They got lost and could not find the way.</p><p>　 南阳刘子骥，高尚士也，闻之，欣然规往，未果，寻病终。后遂无问津者。<br>　 Liu Ziji of Nanyang Prefecture (4), a learned scholar of high repute, was excited when hearing the fisherman’s story. He devised a plan to find the village, but it was not carried out. Liu died soon afterwards, and after his death, no one else made any attempt to find it.</p><p>Notes:<br>　 [1] This piece of writing is regarded as one of the earliest pieces about Utopianism in Chinese Literature.<br>　 [2] Taiyuan was the title of the reign of Emperor Xiaowu of the Eastern Jin Dynasty.<br>　 [3] Wuling Prefecture is today’s Changde City, Hunan Province.<br>　 [4] Nanyang is today’s Nanyang City, Henan Province.   </p><h2 id="译本八-孙大雨"><a href="#译本八-孙大雨" class="headerlink" title="译本八 [孙大雨]"></a>译本八 [孙大雨]</h2><p><strong><center>The Peach Blossom Visionary Land</center></strong></p><p>　 晋太元中，武陵人捕鱼为业，缘溪行，忘路之远近。忽逢桃花林，夹岸数百步，中无杂树，芳草鲜美，落英缤纷；渔人甚异之。复前行，欲穷其林。<br>　 During the Tai-yuan years of the dynasty Jin, a fisherman from the county of Wuling strolled on the bank of a stream, forgetting the distance of his track, into a grove of blossoming peach trees all at once. For several hundred steps along the bank side, there were no other trees; the sward was freshly green and fallen petals of the peach blooms were scattered on the grass verdure. The fisherman, surprised by the sight, walked on to see where the grove would end. It ended at the source of the stream, where there was a mountain. An aperture opened on the mount, from which light seemed to be emitted.</p><p>　 林尽水源，便得一山。山有小口，仿佛若有光，便舍船，从口入。初极狭，才通人；复行数十步，豁然开朗。土地平旷，屋舍俨然。有良田、美池、桑、竹之属，阡陌交通，鸡犬相闻。其中往来种作，男女衣着，悉如外人；黄发垂髫，并佁然自乐。见渔人，乃大惊，问所从来；具答之。便要还家，设酒、杀鸡、作食。村中闻有此人，咸来问讯。自云：先世避秦时乱，率妻子邑人来此绝境，不复出焉；遂与外人间隔。问今是何世？乃不知有汉，无论魏、晋！此人一一为具言所闻，皆叹惋。余人各复延至其家，皆出酒食，停数日，辞去。此中人语云：”不足为外人道。”<br>　 The man abandoned his boat and entered the opening. It was narrow at first, just enough to pass through. After several tens of steps, the way led to vast spaciousness. The land was level and expanded, houses were spread out in good order; goodly farms, fair ponds and mulberry and bamboo thickets were to be seen everywhere. The ways and cross roads were stretched out far and wide. Cocks’ crew and dogs’ barking were heard here and there. The men and women coming and going in their tilling and handicraft work were dressed all like people outside. The aged with hair of light beige and children with cut hair fringing their foreheads all looked gay and contented. Seeing the fisherman, people were greatly surprised, asking him whence he came from and being replied to. They then invited him to their homes, offering wine and killing chickens for entertainment. When it was generally known in the village that there was this man, more people came to see and ask questions of him. They all said that their forefathers, fleeing from turmoils during the Qin Dynasty, led their families and villagers hither to this isolated district to stay, and so being separated from the outside world. They asked what time it was then, knowing not there was any dynasty Han, to say nothing of those of Wei and Jin. The man answered them all in details, whereon they heaved sighs and exclamations. All the others also invited him severally to their homes for hospitality. After many a day, he made his departure. They told him not to publicize his sojourn there.</p><p>　 既出，得其船，便扶向路，处处志之。及郡下，诣太守，说如此。太守即遣人随其往，寻向所志，遂迷不复得路。<br>　 When out, he sought out his boat and noted closely the way leading to the aperture of the mount. After his return to the chief town of the county, he went to the alderman and made a report of his outlandish excursion. The county official dispatched a man to follow him whereto he would lead. But he could not find the spots he had noted on his way back and so lost the whereabouts of the grove of blossoming peach trees.</p><p>　 南阳刘子骥，高尚士也，闻之，欣然规往，未果，寻病终。后遂无问津者。<br>　 Liu Ziji of Nanyang, a scholar of high repute, hearing of the story sought to find out the place. He fell sick and died, before his attempted trial. Thereafter, no one ever ventured the visionary deed. </p><h2 id="译本九-谢百魁"><a href="#译本九-谢百魁" class="headerlink" title="译本九 [谢百魁]"></a>译本九 [谢百魁]</h2><p><strong><center>The Peach Blossom Source<br>Tao Yuanming</center></strong></p><p>　 晋太元中，武陵人捕鱼为业，缘溪行，忘路之远近。忽逢桃花林，夹岸数百步，中无杂树，芳草鲜美，落英缤纷；渔人甚异之。复前行，欲穷其林。林尽水源，便得一山。山有小口，仿佛若有光，便舍船，从口入。<br>　 One day in the Taiyuan period of the Jin Dynasty, a native of Wuling Prefecture, being a fisherman by trade, was boating in a stream. Oblivious of the distance that he had covered, he came upon a peach grove, which lined the banks of the stream for several hundred paces. The grove was unmixed with any other trees and was carpeted with fragrant and tender grass, while the newly opened blossom was a riot of pink. The fisherman much wondered and proceeded further, hoping to reach the end of the grove, which turned out to be the head of the stream. There he was confronted with a crag, which had a small orifice looking as if it were lit by a dim light. Then he abandoned the boat and entered the opening.</p><p>　 初极狭，才通人；复行数十步，豁然开朗。土地平旷，屋舍俨然。有良田、美池、桑、竹之属，阡陌交通，鸡犬相闻。其中往来种作，男女衣着，悉如外人；黄发垂髫，并佁然自乐。<br>　 At first the cave was very narrow, only passable for one person. After a further walk of several dozen paces, a broad view burst upon his sight. He saw an even and wide tract of land, on which some houses were arranged in good order, with fertile lands, beautiful ponds, mulberry trees and bamboos all around them. The fields were crisscrossed with ridged paths. The cocks and dogs heard and echoed each other. The clothes worn by the men and women tilling the land were identical with those of the outsiders. The aged and the adolescent all enjoyed themselves in blissful ease.</p><p>　 见渔人，乃大惊，问所从来；具答之。便要还家，设酒、杀鸡、作食。村中闻有此人，咸来问讯。自云：先世避秦时乱，率妻子邑人来此绝境，不复出焉；遂与外人间隔。问今是何世？乃不知有汉，无论魏、晋！此人一一为具言所闻，皆叹惋。余人各复延至其家，皆出酒食，停数日，辞去。此中人语云：”不足为外人道。”<br>　 At sight of the fisherman, they were dumbfounded. Then they asked whence he came, and he answered their questions one by one. He was soon invited to their homes, treated to a dinner with wine and chicken. Hearing of the stranger, the villagers all came to see him and made him inquiries. By their own account their ancestors, in order to escape from the tumults of war during the Qin Dynasty, led their wives, children and townsmen to this secluded place, and never went out again. Thus they were isolated from the outside world. Their inquiries about the present times showed that they had no idea of the Han, let alone the Wei and Jin dynasties. The fisherman told them everything he knew, and they were all surprised and regretted their ignorance. The remaining folks also invited him to their homes, entertaining him with wine and food. The fisherman, having stayed for several days, bade them farewell. The people said to him, “There is no need to tell the outside world about us.”</p><p>　 既出，得其船，便扶向路，处处志之。及郡下，诣太守，说如此。太守即遣人随其往，寻向所志，遂迷不复得路。<br>　 Having left the cave, the fisherman found his boat and rowed along the former route, making marks all the way. Upon his return in the prefecture he visited the prefect and gave him a detailed account. The latter immediately sent some people as his escort, tracing the marks in search of the place. But they went astray and lost their way.</p><p>　 南阳刘子骥，高尚士也，闻之，欣然规往，未果，寻病终。后遂无问津者。<br>　 Liu Ziji of Nanyang, a high-minded recluse, having been informed of it, set out gladly for this unknown village, but to no purpose. Later he died of illness. Afterwards, no one went to search for it again.   </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/01/09/lRbTJA.md.png&quot; alt=&quot;thyj&quot;&gt;            &lt;/p&gt;
    
    </summary>
    
      <category term="Culture" scheme="http://www.shieber.cn/categories/Culture/"/>
    
    
      <category term="Translation" scheme="http://www.shieber.cn/tags/Translation/"/>
    
  </entry>
  
  <entry>
    <title>西方著名哲学家年表</title>
    <link href="http://www.shieber.cn/title/ee0b9f9e/"/>
    <id>http://www.shieber.cn/title/ee0b9f9e/</id>
    <published>2020-01-08T04:51:39.000Z</published>
    <updated>2020-01-08T05:42:14.183Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2020/01/08/lg2Pnx.md.png" alt="Philospher">  </p><a id="more"></a><p>最近在看哲学书籍，发现对西方先贤了解不多，故特意整理下各哲学家的年表。</p><h2 id="古希腊时期：公元前七世纪——公元前二世纪"><a href="#古希腊时期：公元前七世纪——公元前二世纪" class="headerlink" title="古希腊时期：公元前七世纪——公元前二世纪"></a>古希腊时期：公元前七世纪——公元前二世纪</h2><p><img src="https://s2.ax1x.com/2020/01/08/lgfDVP.md.png" alt="guxila"></p><p><strong>泰勒斯</strong>(Thales，约前624-约前547，古希腊第一个哲学家，米利都学派创始人)<br><strong>阿那克西曼德</strong>(Anaximandros，约前610-前546，古希腊米利都学派唯物主义哲学家)<br><strong>阿那克西美尼</strong>(Anaximenes，约前588-约前525，古希腊米利都学派唯物主义哲学家)<br><strong>毕达哥拉斯</strong>(Pythagoras，约前580-约前500，古希腊数学家，唯心主义哲学家)<br><strong>色诺芬尼</strong>(Xenophanes，约前565-约前473，古希腊哲学家，埃利亚学派第一个代表人物)<br><strong>赫拉克利特</strong>(Herakleitos，约前540-约前480与470之间，古希腊唯物主义哲学家，爱非斯学派创始人)<br><strong>克拉底鲁</strong>(Kratylos，前五世纪，古希腊爱非斯学派哲学家，赫拉克利特的学生)<br><strong>巴门尼德</strong>(Parmenides，约前六世纪末-约前五世纪中叶之后，古希腊埃利亚学派唯心主义哲学家)<br><strong>留基波</strong>(Leukippos，约前500-约前440，古希腊唯物主义哲学家，原子说奠基人之一)<br><strong>阿那克萨戈拉</strong>(Anaxagoras，约前500-约前428，古希腊唯物主义哲学家)<br><strong>芝诺(埃利亚的)</strong>(Zenon Eleates，约前490-约前436，古希腊唯心主义哲学家，巴门尼德的学生)<br><strong>恩培多克勒</strong>(Empedokles，约前490-约前430，古希腊唯物主义哲学家，修辞学创始人)<br><strong>高尔吉亚</strong>(Gorgias，约前483-约前375，古希腊智者派哲学家)<br><strong>普罗泰哥拉</strong>(Protagoras，前481-约前411，古希腊智者派哲学家)<br><strong>苏格拉底</strong>(Sokrates，前469-前399，古希腊唯心主义哲学家)<br><strong>德谟克利特</strong>(Demokritos，约前460-前370，古希腊唯物主义哲学家，与留基波并称原子说创始人)<br><strong>安提西尼</strong>(Antisthenes，约前435-约前370，古希腊哲学家，犬儒学派创始人)<br><strong>亚里斯提卜</strong>(Aristippos，约前435-前360？古希腊哲学家，昔勒尼学派创始人，苏格拉底的弟子)<br><strong>柏拉图</strong>(Plato，前427-前347，古希腊客观唯心主义哲学家，学园派创始人，苏格拉底的学生，亚里士多德的老师)<br><strong>第欧根尼(锡诺帕的)  *<em>(Diogenes o Sinopeus，约前404-约前323，古希腊犬儒学派哲学家)<br>*</em>亚里士多德</strong>(Aristotles，前384-前322，古希腊哲学家、科学家，柏拉图的学生，亚历山大大帝的老师，逍遥学派创始人)<br><strong>皮浪</strong>(Pyrrhon，约前365-约前275，古希腊哲学家，怀疑论者)<br><strong>伊壁鸠鲁</strong>(Epikouros，前341-前270，古希腊唯物主义哲学家)<br><strong>芝诺(季蒂昂的)</strong>(Zenon Kitieus,约前336-约前264,古希腊斯多葛学派创始人)  </p><h2 id="罗马时期：公元前二世纪——公元五世纪"><a href="#罗马时期：公元前二世纪——公元五世纪" class="headerlink" title="罗马时期：公元前二世纪——公元五世纪"></a>罗马时期：公元前二世纪——公元五世纪</h2><p><img src="https://s2.ax1x.com/2020/01/08/lgffrn.md.png" alt="guluoma"></p><p><strong>西塞罗</strong>(Marcus Tullius Cicero，前106-前43，古罗马政治家、雄辩家、哲学家，在哲学上，是折衷主义的代表)<br><strong>卢克莱修</strong>(Titus Lucretius Carus，约前99-约前55，古罗马诗人、唯物主义哲学家)<br><strong>安德罗尼柯</strong>(Andronicus Rhodius，约前一世纪，古希腊逍遥派哲学家，因编纂亚里士多德著作而著称)<br><strong>埃奈西德穆</strong>(Aenesidemus，公元前一世纪，古希腊哲学家，怀疑论者，皮浪的思想继承者)<br><strong>斐洛</strong>(Philo Judaeus，约前30-约后45，古犹太神秘主义哲学家)<br><strong>塞涅卡</strong>(Lucius Annaeus Seneca，约前4-后65，古罗马哲学家、戏剧家，新斯多葛主义的主要代表之一)<br><strong>爱比克泰德</strong>(Epiktetos，约66-？古罗马斯多葛派哲学家)<br><strong>琉善</strong>(Loukianos，约125-约192，一译卢奇安，古希腊散文作家、唯物主义哲学家、无神论者)<br><strong>马可·奥勒留</strong>(Marcus Aurelius Antoninus，121-180，古罗马皇帝[161-180]，新斯多葛派哲学家)<br><strong>塞克斯都·恩披里柯</strong>(Sextus Empiricus，约二世纪中叶，古罗马哲学家，怀疑论者)<br><strong>德尔图良</strong>(Tertullianus，150-160年之间-约222，基督教教父之一)<br><strong>奥利金</strong>(Origenes，约185-约254，基督教神学家，教父哲学的主要代表之一)<br><strong>第欧根尼·拉尔修</strong>(Diogenes Laërtius,约200-约250,古希腊哲学史料《名哲言行录》的编纂者)<br><strong>普罗提诺</strong>(Plotinos，约204-约270，古罗马时期希腊的唯心主义哲学家，新柏拉图主义的最重要代表)<br><strong>波菲利</strong>(Porphyrios，233或234-约305，古罗马时期生于希腊的唯心主义哲学家，新柏拉图主义者，普罗提诺的门徒)<br><strong>奥古斯丁</strong>(Aurelius Augustinus，354-430，罗马帝国基督教思想家，教父哲学的主要代表)<br><strong>希帕蒂亚</strong>(Hypatia，约370-约415，罗马帝国女数学家、天文学家，新柏拉图主义哲学家)<br><strong>波伊提乌</strong>(Anicius Manlius Severinus Boethius，约480-524或525，古罗马晚期唯心主义哲学家)  </p><h2 id="中世纪时期：公元五世纪——-十四世纪末"><a href="#中世纪时期：公元五世纪——-十四世纪末" class="headerlink" title="中世纪时期：公元五世纪—— 十四世纪末"></a>中世纪时期：公元五世纪—— 十四世纪末</h2><p><img src="https://s2.ax1x.com/2020/01/08/lgfIaV.md.png" alt="zsj"></p><p><strong>埃里金纳</strong>(Johannes Scotus Erigena，约810-877，欧洲中世纪前期经院哲学家)<br><strong>安瑟伦</strong>(Anselmus，1033-1109，欧洲中世纪基督教思想家，实在论主要代表，有“最后一个教父和第一个经院哲学家”之称)<br><strong>洛色林</strong>(Roscellinus，约1050-约1112，中世纪法兰西经院哲学家，唯名论者)<br><strong>香浦</strong>(Guillaume de Champeaux，约1070-1121，中世纪法兰西经院哲学家，实在论者)<br><strong>阿伯拉尔</strong>(Petrus Abailardus，1079-1142，中世纪法兰西经院哲学家，“概念论”者)<br><strong>大阿尔伯特</strong>(Albertus Magnus，1193或1206或1207-1280，中世纪德意志经院哲学家、神学家，天主教多明我会僧侣)<br><strong>罗吉尔·培根</strong>(Roger Bacon，约1214-约1292，英国思想家，实验科学的先驱者)<br><strong>托马斯·阿奎那</strong>(Thomas Aquinas，1226-1274，中世纪神学家和经院哲学家，天主教多明我会会士)<br><strong>西格尔</strong>(Sigerus de Brantia，约1240-1281至1284，尼德兰哲学家，阿威罗伊主义者)<br><strong>爱克哈特</strong>(Meister Johannes Eckhart，约1260-1327，中世纪德意志神学家和神秘主义哲学家)<br><strong>邓斯·司各脱</strong>(Johannes Duns Scotus，约1265-1308，中世纪苏格兰经院哲学家，唯名论者)<br><strong>奥卡姆</strong>(William of Occam[或Ockham]，约1300-约1350，中世纪苏国经院哲学家，执著名的“奥康剃刀”，唯名论者)<br><strong>胡斯</strong>(Jan Hus，约1369-1415，捷克爱国者和宗教改革家)  </p><h2 id="文艺复兴时期：十五世纪初——-十六世纪末"><a href="#文艺复兴时期：十五世纪初——-十六世纪末" class="headerlink" title="文艺复兴时期：十五世纪初—— 十六世纪末"></a>文艺复兴时期：十五世纪初—— 十六世纪末</h2><p><img src="https://s2.ax1x.com/2020/01/08/lgfqxJ.md.png" alt="wyfx"></p><p><strong>但丁</strong>(Dante Alighièri，1265-1321，意大利诗人，恩格斯称他“是中世纪的最后一位诗人，同时又是新时代的最初一位诗人)<br><strong>彼特拉克</strong>(Francesco Petrarch，1304-1374，意大利诗人，欧洲文艺复兴时期人文主义先驱之一)<br><strong>薄伽丘</strong>(Geovanni Boccàccio，1313-1375，文艺复兴时期意大利作家，人文主义的主要代表之一)<br><strong>保尔</strong>(John Ball，？-1381，英国民间传教士，瓦特.泰勒起义的领导者之一)<br><strong>威克里夫</strong>(John Wycliffe，约1320-1384，英国人，欧洲宗教改革运动的先行者)<br><strong>尼古拉(库萨的)</strong>(Nicolaus Cusanus，1401-1464，文艺复兴时期德意志哲学家，枢机主教，泛神论者)<br><strong>达·芬奇</strong>(Leonardo da vinci，1452-1519，文艺复兴时期意大利艺术家、自然科学家、工程师、哲学家)<br><strong>彭波那齐</strong>(Pietro Pomponazzi，1462-1524或1525，文艺复兴时期意大利哲学家，人文主义的主要代表之一)<br><strong>伊拉斯谟</strong>(Desiderius Erasmus，约1469-1536，文艺复兴时期尼德兰人文主义者，原名盖哈尔脱·盖哈尔兹(Gerhard Gerhards)  ，生于荷兰鹿特丹)<br><strong>莫尔</strong>(Thomas More，1478-1535，文艺复兴时期英国空想共产主义者)<br><strong>马丁· 路德</strong>(Martin Luther，1483-1546，十六世纪德国宗教改革运动的发起者，基督教(新教)  路德宗的创始人)<br><strong>闵采尔</strong>(Thomas Münzer，约1490-1525，1524-1525年德国农民战争的领袖，德意志农民和城市平民的宗教改革家)<br><strong>加尔文</strong>(Jean Calvin，1509-1564，法国人，欧洲宗教改革家，基督教加尔文宗的创始者)<br><strong>特勒肖</strong>(Bernardino Telesio，1509-1588，文艺复兴时期意大利哲学家)<br><strong>蒙田</strong>(Michel Eyquem de Montaigne，1533-1592，一译蒙台涅，文艺复兴时期法兰西思想家和散文作家)<br><strong>沙朗</strong>(Pierre Charron，1541-1603，文艺复兴时期法兰西哲学家)<br><strong>布鲁诺</strong>(Giordano Bruno，1548-1600，文艺复兴时期意大利哲学家)<br><strong>康帕内拉</strong>(Tommaso Campanella，1568-1639，文艺复兴时期意大利空想共产主义者)<br><strong>伯麦</strong>(Jakob Böhme，1575-1624，文艺复兴时期德意志神秘主义哲学家)<br><strong>格劳修斯</strong>(Hugo Grotius，1583-1645，荷兰资产阶级法学家，自然法学派早期理论家，对法学、神学、历史、文学及自然科学均有研究，以国际法研究著称)<br><strong>瓦尼尼</strong>(Lucilio Vanini，1584-1619，文艺复兴时期意大利哲学家)  </p><h2 id="近代哲学时期：十七世纪初——-十九世纪三十年代"><a href="#近代哲学时期：十七世纪初——-十九世纪三十年代" class="headerlink" title="近代哲学时期：十七世纪初—— 十九世纪三十年代"></a>近代哲学时期：十七世纪初—— 十九世纪三十年代</h2><p><img src="https://s2.ax1x.com/2020/01/08/lghCGD.md.png" alt="lmzy"></p><p><strong>弗兰西斯·培根</strong>(Francis Bacon，1561-1626，“英国唯物主义和整个现代实验科学的真正始祖”[马克思])<br><strong>霍布斯</strong>(Thomas Hobbes，1588-1679，英国机械唯物主义哲学家，《利维坦》作者)<br><strong>伽桑狄</strong>(Pierre Gassendi，1592-1655，一译伽森狄，法国唯物主义哲学家、物理学家、天文学家)<br><strong>笛卡尔</strong>(René Descartes，1596-1650，法国哲学家、物理学家、数学家、生理学家，解析几何的创始人，唯理论者)<br><strong>勒卢阿</strong>(Hendrik van Roy，法文名Henri Le Roy，拉丁名Henricus Regius，1598-1679，荷兰医生，哲学家，早期机械唯物主义代表人物)<br><strong>温斯坦莱</strong>(Gerrard Winstanley，约1609-约1652，英国资产阶级革命时期掘土派运动领袖，空想共产主义者)<br><strong>李尔本</strong>(John Lilburne，约1614-1657，英国资产阶级革命时期小资产阶级民主主义者，平均派领袖)<br><strong>海林克斯</strong>(Arnold Geulincx，1625-1669，荷兰笛卡尔派唯心主义哲学家，他和马勒伯朗士并称为偶因论者)<br><strong>斯宾诺莎</strong>(Baruch [后改名为Benedictus] Spinoza，1632-1677，荷兰唯物主义哲学家，泛神论者)<br><strong>洛克</strong>(John Locke，1632-1704，英国唯物主义哲学家，提出著名的白板说，经验论者)<br><strong>马勒伯朗士</strong>(Nicolas Malebranche，1638-1715，法国唯心主义哲学家)<br><strong>莱布尼茨</strong>(Gottfried Wilhelm Leibniz，1646-1716，德国自然科学家、数学家、唯心主义哲学家)<br><strong>培尔</strong>(Pierre Bayle，1647-1706，法国启蒙思想家、唯物主义哲学家)<br><strong>考尔德</strong>(William Coward，1656-1725，英国自然神论者)<br><strong>梅叶</strong>(Jean Meslier，1664-1729，法国唯物主义者，无神论者，空想共产主义者)<br><strong>维科</strong>(Giovanni Battista Vico，1668-1744，意大利唯心主义哲学家)<br><strong>托兰德</strong>(John Toland，1670-1722，英国唯物主义哲学家)<br><strong>舍夫茨别利</strong>(Anthony Ashley Cooper Shaftesbury，1671-1713，英国自然神论者)<br><strong>柯林斯</strong>(Anthony Collins，1676-1729，英国自然神论者)<br><strong>博林布罗克</strong>(Henry St. John Bolingbroke，1678-1751，英国自然神论者)<br><strong>沃尔弗</strong>(Christian Wolff，1679-1754，德国唯心主义哲学家)<br><strong>贝克莱</strong>(George Berkeley，1685-1753，英国唯心主义哲学家)<br><strong>孟德斯鸠</strong>(Charles Louis de Secondat Montesquieu，1689-1755，法国启蒙思想家、法学家)<br><strong>伏尔泰</strong>(Voltaire，1694-1778，法国启蒙思想家、作家、哲学家。原名弗朗梭阿.马利.阿鲁埃(François Marie Arouet)  )<br><strong>摩莱里</strong>(Morelly，笔名，本名不详，十八世纪中叶法国空想共产主义者)<br><strong>哈特莱</strong>(David Hartley，1705-1757，英国唯物主义哲学家，心理联想说创始人之一，自然神论者)<br><strong>马布利</strong>(Gabriel Bonnot de Mably，1709-1785，法国空想共产主义者，孔狄亚克之兄)<br><strong>拉美特利</strong>(Julien Offroy de La Mettrie，1709-1751，法国启蒙思想家，唯物主义哲学家)<br><strong>李德</strong>(Thomas Reid，1710-1796，英国哲学家，苏格兰学派即常识学派的创始人)<br><strong>罗蒙诺索夫</strong>(Миxaил Вacильевич Ломoносοв1711-1765，俄国学者，诗人，俄国唯物主义哲学和自然科学的奠基者)<br><strong>休谟</strong>(David Hume，1711-1776，英国唯心主义哲学家、不可知论者，历史学家、经济学家)<br><strong>卢梭</strong>(Jean Jacques Rousseau，1712-1778，法国启蒙思想家、哲学家、教育学家、文学家)<br><strong>狄德罗</strong>(Denis Diderot，1713-1784，法国启蒙思想家，唯物主义哲学家，无神论者，文学家，《百科全书》主编)<br><strong>鲍姆加登</strong>(Alexander Gottlieb Baumgarten，1714-1762，德国哲学家，沃尔弗哲学体系的拥护者)<br><strong>爱尔维修</strong>(Claude Adrien Helvétius，1715-1771，法国启蒙思想家，唯物主义哲学家)<br><strong>孔狄亚克</strong>(Etienne Bonnot de Condillac，1715-1780，法国启蒙思想家，感觉论者，马布利之弟)<br><strong>达兰贝尔</strong>(Jean Le Rond d’ Alembert，1717-1783，一译达朗伯，法国数学家、启蒙思想家、哲学家，《百科全书》副主编)<br><strong>霍尔巴赫</strong>(Paul Heinrich Dietrich d’ Holbach，1723-1789，法国启蒙思想家、唯物主义哲学家、无神论者)<br><strong>康德</strong>(Immanuel Kant，1724-1804，德国古典唯心主义的创始人)<br><strong>莱辛</strong>(Gotthold Ephraim Lessing，1729-1781，德国启蒙运动时期思想家、文艺理论家、剧作家)<br><strong>多德维尔</strong>(Henry Dodwell，？-1784，英国自然神论者)<br><strong>罗比耐</strong>(Jean Baptiste René Robinet，1735-1820，法国哲学家)<br><strong>孔多塞</strong>(Jean Antoine Condorcet，1743-1794，法国资产阶级革命时期资产阶级理论家)<br><strong>雅科比</strong>(Friedrich Heinrich Jacobi，1743-1819，德国唯心主义哲学家)<br><strong>赫尔德</strong>(Johann Gottfried von Herder，1744-1803，德国文艺理论家、哲学家，狂飙运动(十八世纪七十到八十年代德国资产阶级文学运动)  理论指导者)  </p><h2 id="现代哲学时期：十九世纪三十年代——-今"><a href="#现代哲学时期：十九世纪三十年代——-今" class="headerlink" title="现代哲学时期：十九世纪三十年代—— 今"></a>现代哲学时期：十九世纪三十年代—— 今</h2><p><img src="https://s2.ax1x.com/2020/01/08/lghAsA.md.png" alt="mks"></p><p><strong>边沁</strong>(Jeremy Bentham，1748-1832，英国伦理学家、法学家，资产阶级功利主义的主要代表)<br><strong>歌德</strong>(Johann Wolfgang von Goethe，1749-1832，德国诗人、剧作家、思想家)<br><strong>葛德文</strong>(William Godwin，1756-1836，英国作家、社会思想家，牧师出身，后拥护无神论和启蒙思想)<br><strong>卡巴尼斯</strong>(Pierre Jean Georges Cabanis，1757-1808，法国革命时期资产阶级理论家、生理学家，庸俗唯物主义前驱者)<br><strong>沃尔涅</strong>(Constantin François Volney，1757-1820，法国资产阶级革命时期资产阶级思想家)<br><strong>巴贝夫</strong>(Gracchus Babeuf，原名François Noël Babeuf，1760-1797，法国革命家，空想共产主义者)<br><strong>圣西门</strong>(Claude Henri de Saint-Simon，1760-1825，法国空想社会主义者)<br><strong>邦纳罗蒂</strong>(Filippo Michele Buonarrotti，1761-1837，法国空想共产主义者。意大利人，参加1789革命，获共和国公民称号)<br><strong>费希特</strong>(Johann Gottlieb Fichte，1762-1814，德国古典唯心主义哲学家)<br><strong>黑格尔</strong>(Georg Wilhelm Friedrich Hegel，1770-1831，德国古典唯心主义的集大成者)<br><strong>欧文</strong>(Robert Owen，1771-1858，英国空想社会主义者)<br><strong>傅立叶</strong>(Charles Fourier，1772-1837，法国空想社会主义者)<br><strong>谢林</strong>(Friedrich Wilhelm Joseph von Schelling，1775-1854，德国唯心主义哲学家)<br><strong>波尔察诺</strong>(Bernhard Bolzano，1781-1848，捷克数学家、哲学家、逻辑学家)<br><strong>卡贝</strong>(Etienne Cabet，1788-1856，法国空想共产主义者)<br><strong>叔本华</strong>(Arthur Schopenhauer，1788-1860，德国唯心主义哲学家，唯意志论者)<br><strong>库辛</strong>(Victor Cousin，1792-1867，法国唯心主义哲学家，自称其哲学体系为折衷主义)<br><strong>海涅</strong>(Heinrich Heine，1797-1856，德国诗人、政论家、思想家)<br><strong>孔德</strong>(Auguste Comte，1798-1857，法国实证主义哲学家)<br><strong>德萨米</strong>(Théodore Dézamy，1803-1850，法国空想共产主义者)<br><strong>费尔巴哈</strong>(Ludwig Andreas Feuerbach，1804-1872，德国唯物主义哲学家)<br><strong>布朗基</strong>(Louis Auguste Blanqui，1805-1881，法国革命家，空想共产主义者)<br><strong>施蒂纳</strong>(Max Stirner，1806-1856，卡斯巴·施米特(Kaspar Schmidt)  的笔名，德国唯心主义哲学家，青年黑格尔派代表之一，唯我论者，无政府主义的前驱者)<br><strong>穆勒</strong>(John Stuart Mill，1806-1873，英国唯心主义哲学家、经济学家、逻辑学家，詹姆斯.穆勒之子)<br><strong>魏特林</strong>(Wilhelm Weitling，1808-1871，德国早期工人运动活动家，空想共产主义者)<br><strong>施特劳斯</strong>(David Friedrich Strauss，1808-1874，德国唯心主义哲学家，青年黑格尔派代表之一，以对基督教的批判而著名)<br><strong>蒲鲁东</strong>(Pierre Joseph Proudhon，1809-1865，法国小资产阶级经济学家和社会学家，无政府主义创始人之一)<br><strong>鲍威尔</strong>(Bruno Bauer，1809-1882，德国唯心主义哲学家，青年黑格尔派的主要代表)<br><strong>别林斯基</strong>(Виссарион Григорьевич Белинский，1811-1848，俄国革命民主主义者，文艺批判家、哲学家)<br><strong>路易·勃朗</strong>(Jean Josehp Charles Louis Blanc，1811-1882，法国小资产阶级社会主义者，历史学家)<br><strong>赫尔岑</strong>(Александр Иванович Герцен，1812-1870，俄国革命民主主义者，唯物主义哲学家、作家)<br><strong>克尔恺郭尔</strong>(Sören Kierkegaard，1813-1855，丹麦唯心主义哲学家，其思想成为现代资产阶级哲学存在主义理论根据之一)<br><strong>巴枯宁</strong>(Михаил Александрович Бакунин，1814-1876，俄国无政府主义者)<br><strong>洛采</strong>(Rudolf Hermann Lotze，1817-1881，德国唯心主义哲学家，自称其哲学为“目的论的唯心主义”)<br><strong>格律恩</strong>(Karl Grün，1817-1887，德国小资产阶级社会主义者)<br><strong>福格特</strong>(Karl Vogt，1817-1895，德国博物学家，庸俗唯物主义者，自称其哲学为“生理学人本主义”)<br><strong>马克思</strong>(Karl Marx，1818.5.5-1883.3.14，马克思主义创始人，全世界无产阶级的伟大导师和领袖)<br><strong>恩格斯</strong>(Friedrich Engels，1820.11.28-1895.8.5，马克思主义创始人之一，全世界无产阶级的伟大导师和领袖，马克思战友)<br><strong>斯宾塞</strong>(Herbert Spencer，1820-1903，英国社会学家、不可知论者、唯心主义哲学家)<br><strong>摩莱萧特</strong>(Jacob Moleschott，1822-1893，荷兰生理学家、哲学家，庸俗唯物主义的代表之一)<br><strong>毕希纳</strong>(Ludwig Büchner，1824-1899，德国医生，庸俗唯物主义代表之一)<br><strong>拉萨尔</strong>(Ferdinand Lassalle，1825-1864，德国工人运动中机会主义派别的首领)<br><strong>赫胥黎</strong>(Thomas Henry Huxley，1825-1895，英国博物学家)<br><strong>宇伯威格</strong>(Friedrich Überweg，1826-1871，德国哲学家，以著有《哲学史概论》一书而出名)<br><strong>朗格</strong>(Friedrich Albert Lange，1828-1875，德国唯心主义哲学家，早期的新康德主义者)<br><strong>约瑟夫·狄慈根</strong>(Joseph Dietzgen，1828-1888，德国社会主义著作家和哲学家，制革工人)<br><strong>车尔尼雪夫斯基</strong>(Николай Гаврилович Чернышевский，1828-1889，俄国革命民主主义者，唯物主义哲学家、文学批判家、作家)<br><strong>泰纳</strong>(Hippolyte Adolphe Taine，1828-1893，一译丹纳，法国文艺理论家、史学家、孔德实证论哲学的继承人之一)<br><strong>冯特</strong>(Wilhelm Wundt，1832-1920，德国心理学家、哲学家，构造心理学派创始人之一)<br><strong>狄尔泰</strong>(Wilhelm Dilthey，1833-1911，德国唯心主义哲学家，最初属于新康德主义，后转向生命哲学)<br><strong>杜林</strong>(Karl Eugen Dühring，1833-1921，德国哲学家、庸俗经济学家)<br><strong>哈里斯</strong>(William Torrey Harris，1835-1909，美国教育家、唯心主义哲学家，黑格尔哲学在美国最早的传播者)<br><strong>格林</strong>(Thomas Hill Green，1836-1882，英国唯心主义哲学家)<br><strong>舒佩</strong>(Wilhelm Schuppe，1836-1913，德国唯心主义哲学家，内在论的创始人)<br><strong>马赫</strong>(Ernst Mach，1838-1916，奥地利物理学家、唯心主义哲学家，经验批判主义的创始人之一)<br><strong>皮尔斯</strong>(Charles Sanders Peirce，1839-1914，美国唯心主义哲学家，实用主义创始人)<br><strong>李普曼</strong>(Otto Liebmann，1840-1912，德国唯心主义哲学家，早期的新康德主义者，最早提出“回到康德那里去”口号)<br><strong>倍倍尔</strong>(August Bebel，1840-1913，德国社会民主党和第二国际的创始者和领导者之一，车工出身，第一国际成员)<br><strong>詹姆斯</strong>(William James，1842-1910，美国唯心主义哲学家、心理学家，实用主义者，机能心理学创始人)<br><strong>拉法格</strong>(Paul Lafargue，1842-1911，法国工人运动活动家，马/恩的学生，1868年同马克思次女Laura Marx(1845-1911)  结婚)<br><strong>柯亨</strong>(Hermann Cohen，1842-1918，德国唯心主义哲学家，新康德主义马堡学派的创始人)<br><strong>哈特曼</strong>(Eduart Hartmann，1842-1906，德国唯心主义哲学家)<br><strong>阿芬那留斯</strong>(Richard Avenarius，1843-1896，德国主观唯心主义哲学家，经验批判主义的创始人之一)<br><strong>尼采</strong>(Friedrich Nietzsche，1844-1900，德国唯心主义哲学家，唯意志论者)<br><strong>梅林</strong>(Franz Mehring，1846-1919，德国社会民主党左翼领袖之一，政论家、历史学家)<br><strong>布拉德莱</strong>(Francis Herbert Bradley，1846-1924，英国唯心主义哲学家，新黑格尔主义者)<br><strong>倭铿</strong>(Rudolf Eucken，1846-1926，德国唯心主义哲学家)<br><strong>文德尔班</strong>(Wilhelm Windelband，1848-1915，德国唯心主义哲学家，新康德主义弗赖堡学派的创始人)<br><strong>毛特纳</strong>(Fritz Mauthner，1849-1923，德国唯心主义哲学家，语言哲学的代表，出生于波希米亚)<br><strong>伯恩施坦</strong>(Eduart Bernstein，1850-1932，德国社会民主党和第二国际右派首领，修正主义的代表人物)<br><strong>舒贝特-索尔登</strong>(Richard Schubert-Soldern，1852-1935，德国唯心主义哲学家，内在论的代表之一)<br><strong>迈农</strong>(Alexius Meinong，1853-1920，奥地利唯心主义哲学家)<br><strong>考茨基</strong>(Karl Kautsky，1854-1938，德国社会民主党和第二国际修正主义的首领之一)<br><strong>普列汉诺夫</strong>(Георгий Валентинович Плеханов，1856-1918，俄国最早的马克思主义传播者，后成为修正主义者，孟什维克首领之一)<br><strong>毕尔生</strong>(Karl Pearson，1857-1936，英国唯心主义哲学家、数学家，优生学的提倡者之一)<br><strong>亚力山大</strong>(Samuel Alexander，1859-1938，英国唯心主义哲学家，新实在论者)<br><strong>胡塞尔</strong>(Edmund Husserl，1859-1938，德国唯心主义哲学家，现代现象学的创始人)<br><strong>柏格森</strong>(Henri Bergson，1859-1941，法国唯心主义哲学家，生命哲学和现代非理性主义的主要代表)<br><strong>杜威</strong>(John Dewey，1859-1952，美国唯心主义哲学家、社会学家、教育学家，实用主义者)<br><strong>怀特海</strong>(Alfred North Whitehead，1861-1947，英国唯心主义哲学家、数学家)<br><strong>彼得楚尔特</strong>(Josef Petzoldt，1862-1929，德国唯心主义哲学家，经验批判主义者)<br><strong>欧根·狄慈根</strong>(Eugen Dietzgen，1862-1930，约瑟夫.狄慈根之子，父死后，利用其父哲学中某些混乱，歪曲辩证唯物主义，“滚入反动哲学”)<br><strong>李凯尔特</strong>(Heinrich Rickert，1863-1936，德国唯心主义哲学家，新康德主义弗赖堡学派的主要代表之一)<br><strong>席勒</strong>(Ferdinand Canning Scott Schiller，1864-1937，英国哲学家，实用主义者，把自己的实用主义哲学称为“人本主义”)<br><strong>柯罗齐</strong>(Benedetto Croce，1866-1952，一译克罗齐，意大利唯心主义哲学家、史学家，新黑格尔主义者)<br><strong>杜里舒</strong>(Hans Driesch，1867-1941，德国唯心主义哲学家、生物学家，新活力论者)<br><strong>列宁</strong>(Владимир Ильич Ленин Ульянов，1870.4.22-1924.1.21，马克思和恩格斯事业和学说的继承者，全世界无产阶级的伟大导师和领袖)<br><strong>罗素</strong>(Bertrand Russell，1872-1970，英国唯心主义哲学家、数学家、逻辑学家)<br><strong>波格丹诺夫</strong>(Александр Александрович Богданов，1873-1928，俄国唯心主义哲学家)<br><strong>穆尔</strong>(George Edward Moore，1873-1958，英国唯心主义哲学家，新实在论主要代表之一)<br><strong>秦梯利</strong>(Giovanni Gentile，1875-1944，意大利唯心主义哲学家，新黑格尔主义者)<br><strong>斯大林</strong>(Иосиф Виссарионович Сталин Джугашвили，1879.12.21-1953.3.5，伟大的马克思列宁主义者)<br><strong>施本格勒</strong>(Oswald Spengler，1880-1936，德国唯心主义哲学家、史学家)<br><strong>德波林</strong>(Абрам Моиесевич Деборин，1881-1963，苏联哲学家，十月革命前曾参加孟什维克，1929年后任苏联科学院院士，三十年代哲学观点受到批判)<br><strong>施利克</strong>(Moritz Schlick，1882-1936，唯心主义哲学家，生于德国，曾在奥地利维也纳大学任教，维也纳学派领导者，逻辑实证论创始人之一)<br><strong>马利丹</strong>(Jacques Maritain，1882-1973，法国神学家、唯心主义哲学家，新托马斯主义的主要代表)<br><strong>雅斯贝斯</strong>(Karl Jaspers，1883-1969，德国存在主义哲学家)<br><strong>维特根斯坦</strong>(Ludwig Wittgenstein，1889-1951，奥地利唯心主义哲学家、逻辑学家。1838年希特勒吞并奥地利后，入英国籍，剑桥大学任教)<br><strong>海德格尔</strong>(Martin Heidegger，1889-1976，德国存在主义哲学家，希特勒统治时期曾任大学校长、教授等职，拥护纳粹主义)<br><strong>毛泽东[1]</strong>(1893.12.26-1976.9.9，伟大的马克思列宁主义者，中国共产党、中国各族人民的伟大领袖和导师)<br><strong>梅洛·庞蒂</strong>(Merleau Ponty，1908-1961，法国存在主义哲学家)<br><strong>加缪</strong>(Albert Camus，1913-1960，法国存在主义者)  </p><p>[1]毛泽东的思想是从西方学习来的，所以被人归入到了西方哲学家之类。所以不要抵制西方思想，毕竟马克思就是西方思想。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/01/08/lg2Pnx.md.png&quot; alt=&quot;Philospher&quot;&gt;  &lt;/p&gt;
    
    </summary>
    
      <category term="Culture" scheme="http://www.shieber.cn/categories/Culture/"/>
    
    
      <category term="Philosphy" scheme="http://www.shieber.cn/tags/Philosphy/"/>
    
  </entry>
  
  <entry>
    <title>基础镜像生成</title>
    <link href="http://www.shieber.cn/title/dfcbc9a/"/>
    <id>http://www.shieber.cn/title/dfcbc9a/</id>
    <published>2020-01-03T07:34:57.000Z</published>
    <updated>2020-01-07T03:56:30.517Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2020/01/03/lUvgvn.jpg" alt="baseimage"></p><a id="more"></a><p>最近在折腾华为云系统openEuler OS(欧拉系统)，其中涉及到基于ISO制作基础镜像环节。</p><h2 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h2><p>传统的应用服务包括：开发，调试，部署，运维。每个流程都很费时费力。尤其是开发和部署环境不一致带来的问题让广大开发者和运维人员头痛不已。为解决这种繁琐的流程，微服务应运而生。微服务，顾名思义，就是将原来的服务模式改小，更应该说是改方便。微服务的目标是一个次只做一件事，有点儿Unix哲学的味道。</p><h2 id="基础镜像"><a href="#基础镜像" class="headerlink" title="基础镜像"></a>基础镜像</h2><p>在Linux的世界里，大家共用一套硬件管理方案：bootfs。而不同的发行版可以提供不同的文件管理系统rootfs。故而，对不同的发行版来说，需要准备不同的rootfs。拿到一个安装好的系统或是ISO文件，我们可以考虑基于此生成rootfs打包成tar.zx文件并导入为docker基础镜像。</p><h2 id="应用镜像"><a href="#应用镜像" class="headerlink" title="应用镜像"></a>应用镜像</h2><p>就是说，将某一应用和其基础镜像及其环境打包成一体，部署和开发可以做到一样的环境，这样就不用考虑不同系统环境的不同，大大的提高了开发效率，节省了成本。这种打包文件就称为镜像，它包括底层的硬件层和文件系统，最上面的才是应用层。基于一个基础镜像，在上面安装各种服务，最后作为应用镜像提供服务，可大规模部署。</p><h2 id="基础镜像生成大体流程"><a href="#基础镜像生成大体流程" class="headerlink" title="基础镜像生成大体流程"></a>基础镜像生成大体流程</h2><p>基础镜像十分重要，而它的制作流程大体如下。<br>1.利用debootstrap(debian系列)或febootstrap(Centos系列)生成rootfs非常方便。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">debootstrap --arch i386 ....</span><br><span class="line">febootstrap -i bash -i vim -i yum centos centosImage file:///mnt/iso/</span><br></pre></td></tr></table></figure><p>2.利用shell文件，仿照LFS(Linux From Scratch)制作rootfs 再利用dockerfile生成基础镜像。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">#genImage.sh </span><br><span class="line">#基于openEuler os制作rootfs，并打包成tar.xz文件</span><br><span class="line">machine=$(uname -m)</span><br><span class="line">if [ -z $RPM_ROOT ]; then</span><br><span class="line">rm -rf $machine</span><br><span class="line">echo &quot;please set RPM_ROOT&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ &quot;x$RPM_ROOT&quot; != &quot;x$(pwd)/rootfs&quot; ]; then</span><br><span class="line">echo &quot;should set RPM_ROOT to $(pwd)/rootfs&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line">if [ -z &quot;$OS_VERSION&quot; ]; then</span><br><span class="line">echo &quot;should set OS_VERSION&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ -z $ISO_PATH ];then</span><br><span class="line">echo &quot;please set ISO_PATH as iso mountpoint&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ &quot;x$USER&quot; != &quot;xroot&quot; ]; then</span><br><span class="line">echo &quot;please run as root&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ -e $RPM_ROOT ];then</span><br><span class="line">echo &quot;rootfs exist, remove it&quot;</span><br><span class="line">rm -rf $RPM_ROOT</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mkdir -p $&#123;RPM_ROOT&#125;</span><br><span class="line"></span><br><span class="line"># init rpmdb</span><br><span class="line">rpm --root $&#123;RPM_ROOT&#125; --initdb</span><br><span class="line"></span><br><span class="line"># init yum repo</span><br><span class="line">mkdir -p $&#123;RPM_ROOT&#125;/etc/yum.repos.d</span><br><span class="line">euleros_repo=$&#123;RPM_ROOT&#125;/etc/yum.repos.d/euleros.repo</span><br><span class="line">echo &quot;[base]&quot; &gt; $&#123;euleros_repo&#125;</span><br><span class="line">echo name=openEulerOS-1.0 base &gt;&gt; $&#123;euleros_repo&#125;</span><br><span class="line">echo baseurl=file://$&#123;ISO_PATH&#125; &gt;&gt; $&#123;euleros_repo&#125;</span><br><span class="line">echo &quot;enabled=1&quot; &gt;&gt; $&#123;euleros_repo&#125;</span><br><span class="line"></span><br><span class="line"># install rpm key</span><br><span class="line">rpm --root $&#123;RPM_ROOT&#125; --import $ISO_PATH/RPM-GPG-KEY-openEuler</span><br><span class="line"></span><br><span class="line"># install package</span><br><span class="line">echo &quot;install package..&quot;</span><br><span class="line">yum -y --installroot=$&#123;RPM_ROOT&#125; install yum</span><br><span class="line">yum -y --installroot=$&#123;RPM_ROOT&#125; clean all</span><br><span class="line"></span><br><span class="line">cp ./clean_in_chroot.sh  $&#123;RPM_ROOT&#125;</span><br><span class="line"># clean up</span><br><span class="line">chroot $RPM_ROOT /clean_in_chroot.sh</span><br><span class="line">rm  $&#123;RPM_ROOT&#125;/clean_in_chroot.sh</span><br><span class="line"></span><br><span class="line">echo &quot;generate packages&quot;</span><br><span class="line">rm -rf $machine</span><br><span class="line">mkdir $machine</span><br><span class="line">echo &quot;generate $machine/openEulerOS-$OS_VERSION-$&#123;machine&#125;.tar.xz&quot;</span><br><span class="line">tar -C $RPM_ROOT -cJf  $machine/openEulerOS-$OS_VERSION-$&#123;machine&#125;.tar.xz .</span><br><span class="line"></span><br><span class="line">echo &quot;enerate $machine/openEulerOS-$OS_VERSION-$&#123;machine&#125;-tar-xz.sha256&quot;</span><br><span class="line">sha256sum $machine/openEulerOS-$OS_VERSION-$&#123;machine&#125;.tar.xz  &gt; $machine/openEulerOS-$OS_VERSION-$&#123;machine&#125;-tar-xz.sha256</span><br></pre></td></tr></table></figure><p>基于tar.xz生成base image</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># Dockerfile</span><br><span class="line"># Build the base image: ARM64(鲲鹏) Cloud image</span><br><span class="line"># This is a docker file, use the Huawei openEuler OS</span><br><span class="line"># Version: 1.0</span><br><span class="line"># Author: Shieber</span><br><span class="line"># Date: 2020.01.03</span><br><span class="line"></span><br><span class="line">FROM scratch</span><br><span class="line">MAINTAINER Shieber &lt;Shieber@aliyun.com&gt;</span><br><span class="line"></span><br><span class="line">ADD openEuler-1.0-x86_64.tar.xz /</span><br><span class="line">LABEL name=&quot;openEuler Base Image&quot; \</span><br><span class="line">vendor=&quot;Hua Wei&quot; \</span><br><span class="line">license=&quot;GPLv2&quot; \</span><br><span class="line">build-date=&quot;20200103&quot;</span><br><span class="line">ADD openEuler.repo /etc/yum.repos.d/</span><br><span class="line"></span><br><span class="line">RUN [&apos;yum&apos;,&apos;makecache&apos;]</span><br><span class="line">RUN [&apos;yum&apos;,&apos;update&apos;] \</span><br><span class="line">&amp;&amp;  [&apos;yum&apos;,&apos;install&apos;,&apos;-y&apos;,&apos;vim&apos;] \</span><br><span class="line">&amp;&amp;  [&apos;yum&apos;,&apos;install&apos;,&apos;-y&apos;,&apos;bash&apos;] \</span><br><span class="line">&amp;&amp;  [&apos;yum&apos;,&apos;install&apos;,&apos;-y&apos;,&apos;openssh-server&apos;] \</span><br><span class="line">&amp;&amp;  [&apos;yum&apos;,&apos;clean&apos;] #&amp;&amp;是为了生成为一次并精简镜像</span><br><span class="line"></span><br><span class="line">CMD [&apos;/bin/bash&apos;]</span><br></pre></td></tr></table></figure><p>命令行生成image</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker image build -t openEuler-1.0-demo .</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker container run --rm -it openEuler-demo /bin/bash</span><br></pre></td></tr></table></figure><p>上面只是大体流程，实际上华为的欧拉系统只能在其ARM64架构的鲲鹏服务器上运行，所以实际安装还要复杂。上面提供的流程应对x86_64架构下的各种Linux发行版应该都没有问题。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/01/03/lUvgvn.jpg&quot; alt=&quot;baseimage&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="微服务" scheme="http://www.shieber.cn/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    
      <category term="Image" scheme="http://www.shieber.cn/tags/Image/"/>
    
  </entry>
  
  <entry>
    <title>2019个人年度报告</title>
    <link href="http://www.shieber.cn/title/9d08ff81/"/>
    <id>http://www.shieber.cn/title/9d08ff81/</id>
    <published>2019-12-31T14:30:05.000Z</published>
    <updated>2019-12-31T15:08:49.048Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/06/QJY6W8.md.png" alt="2019report"></p><a id="more"></a><h2 id="年度日历"><a href="#年度日历" class="headerlink" title="年度日历"></a>年度日历</h2><p><strong>02.02</strong><br>  参加学校团年宴，抽奖中了一个小米耳机，学校发了300元奖励及新年大礼包，感觉学校对学生还算好吧。当时获奖感言我说的是：学校知道对学生好，那么我们学生也知道什么时候该对学校好，这是一个良性互动，感谢学习的领导亲自来看学生。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKnIvq.md.png" alt="nyear"> </p><p><strong>02.28</strong><br>  帮徐俊下载LED方面论文。<br><strong>03.30</strong><br>  老杜邀请逛公园，巧遇原学生会干部(丁肇鹏)和专业老学姐(胡冰花)。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKKekF.png" alt="duwan"></p><p><strong>04.21</strong><br>  食堂饭太难吃了，数千字长文给学校食堂反馈意见。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKKKp9.md.png" alt="canteen"></p><p><strong>04.23</strong><br>  同冠军通话2h28m，聊了什么，忘了，不过确实说了好久，毕业了就各奔前程了，能聚在一起的机会就少了。<br><strong>05.08</strong><br>  参加RISC-V路演成都宣讲会，了解物联网领域RISC-V架构芯片发展情况。在美国科技封锁情况下，RISC-V可能是未来中国自主芯片设计研发的原型，未来整个产业可能是数万亿人民币的市场。现在刚起步，国内专家和政府部门正大力推动。</p><p>  <img src="https://s2.ax1x.com/2019/12/29/lK3VJS.md.png" alt="risc-v"></p><p><strong>05.11</strong><br>  买点儿中药，自己熬，调节身体。这药吃了饿得快，刚吃早饭，9点半肚子就开始叫了。   </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKMUET.md.png" alt="medicine"></p><p><strong>06.05</strong><br>  白锦瑞及其母亲到成都，请我吃法。<br><strong>06.21</strong><br>  作主题演讲：大数据时代技术演讲及未来社会发展。我大概讲的内容：关于操作系统，在美国科技封锁的情况下，国内开始了自主造操作系统的热潮。华为的鸿蒙是物联网操作系统，被逼转换为移动加物联网系统。6G是去年两会就提出了，目前5G在布局，但6G肯定开始研发了。我认为新语言主要应对物联网，对硬件操作的封装不能使用传统的语言，估计会有新语言发明出来。摩尔定律到头，CPU无法再快了，只有新的技术原理才能解决，我认为量子计算是一个方向，但目前不看好。一亿人口城市群这个概念应该是由我最先提出的，看下图中地球上亮的地方，就是一个个城市聚合体，目前长三角(上海，南京，杭州，苏州)等市慢慢地已经构成地球上最大的城市群，所以一亿人口不是不可能(五千万是最可能的)，中国的城市化必然铸造几个超级大城市。上亿人口围绕若干城市集成群，实行政策互通，交通医疗同步，开展工商业，发展教育医疗文娱产业，逐步提升中国的城镇率。</p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKMd5F.md.png" alt="6g"></p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKMhPe.md.png" alt="100m"></p><p><strong>07.10</strong><br>  北京市内游玩(北大，国图，天安门，天坛)。北京，还算好吧，交通太挤，地铁晚高峰我差点没下来，本来打算下去，结果给外面的人给挤回去了。北京大学校内环境超级好，简直就是动物园，地上有鸟，鸭子，水里有鱼，好大学确实不一样。     </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKMIxA.md.png" alt="beijing1"></p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKQ9rq.md.png" alt="beijing2"></p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKQiZV.md.png" alt="beijing3"></p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKQNQA.md.png" alt="beijing4"></p><p><strong>07.11</strong><br>  参观天津中电集团和海河。<br><strong>07.19</strong><br>  帮马文杰调试Python代码。<br><strong>09.01</strong><br>  强仔过来专门请吃法，下午陪同何英强和方齐圣游览电科，许久不见，甚是想念。<br><strong>09.17</strong><br>  参加中航工业在学校的招聘宣讲会，看表演。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lK1W5T.md.png" alt="zh"></p><p><strong>09.21</strong><br>  受邀前往雅安夹金山干部学院参加活动发言并前往红军村参观学习。当年毛和朱长征翻越的第一座大雪山就在此，感觉环境确实艰苦，全是高山，交通不便。</p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKQaLt.md.png" alt="jiajingshan"></p><p><strong>09.26</strong><br>  学校设立新部门，5位院士和一位将军兼院士出席，可能一辈子也不太可能遇到这么多院士了。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKQIFU.md.png" alt="new"></p><p><strong>09.29</strong><br>  学校校庆晚会，也庆祝共和国70周年。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKQbl9.md.png" alt="anniversary"></p><p><strong>10.01</strong><br>  国庆节，学校大装扮，感觉像过年。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKlek8.md.png" alt="nationalday"></p><p><strong>10.27</strong><br>  自己学着拆卸，给电脑除尘。风扇太脏，找师傅要30块，还不如自己来。拆很容易，但装回去就可能出错，要保管好螺丝及其顺序。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKQzFO.md.png" alt="pc"></p><p><strong>12.06</strong><br>  参与Science杂志年度科学事件评选，我选择了黑洞首次发现的那张图片，这应该是本年度最具代表性的科技话题了吧。因为一张黑洞图片，视觉中国还被有关部门约谈了。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lK1ZuR.md.jpg" alt="darkhole"></p><p><strong>12.23</strong><br>  参加华为黑客马拉松大赛，争取正月里到深圳决赛。</p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKJKLd.md.jpg" alt="huawei"></p><h2 id="年度感受"><a href="#年度感受" class="headerlink" title="年度感受"></a>年度感受</h2><p>又是一年年终，时间好快呀！翻看<a href="http://www.shieber.cn/title/4aea7fd9/">2018年终总结</a>，感觉时间就像飞一样地快。客观地说，人会随着自身年龄的增长而觉时间的飞逝。小时候的一年很长，现在的一年尤其地短，未来估计会感觉到更短。以前读到光阴似箭，日月如梭这句话毫无感觉，现在想想古人诚不欺负我。这一年，我不算努力，但也并未过于偷懒。学到些东西，看了些东西，总的来说，有所成长吧！</p><p>这一年更加感觉说话要小心注意，人小的时候，就是相互咒骂都没关系，年龄一大，人就更难交流了，说重了伤人，说轻了没意，我想最好还是不说，闭嘴。还是那个感觉：默默做事容易，说话做人难呐！这个时代，真话是入不得耳的，大部分人听不进去真话，实际上他们除了捧场话之外全听不进去。书本上教学生老实做人，不讲谎话，然而，我发现人不讲点谎话根本不可能。唯一能做到的是：不主动讲谎话，若是被人引起，说两句也没关系。当下，讲废话和捧场话最令人喜欢，讲实话真话最招人反感。</p><p>大部分人在其生命历程中总是需要围着什么东西转的(工作，家长，老师，老板，领导…)，他们是受到支配的一群人，所以最好的方式就是去领导他们而不是讲道理给他们听。因为他们的境界低，不会主动总结吸收，所以讲了真话给其听，他们反而听不懂，也不乐意。遇到这些不愿听真话的人，无聊的人，境界低的人，与之谈话最好的回应方式就是”哦，嗯”之类的词语，再不能多了！</p><h2 id="2020年度愿景"><a href="#2020年度愿景" class="headerlink" title="2020年度愿景"></a>2020年度愿景</h2><p>不立flag，就写几个小愿望吧。</p><p>1.学会摄影技术，有钱就购买专业点的相机。<br>平时研究网站，PS和前端技术，发现图片不够漂亮。然而网上找到的图片，不是分辨率不行，就是有版权，视觉中国闹的版权问题怕是以后还会有。细细想来，不如自己拍，自己PS，搞设计怎么能不学拍照呢？先买个便宜的学习，然后再买高档的相机。</p><p>2.学习视频制作，有了创意也可以用视频表现出来。<br>视频不论给别人看还是自己作记录或纪念都是很好的，前段时间我提出了构建个人数据中心的概念，其中就强调视频的重要性，所以这个必学。或许，未来社会，作视频就和今天的会PPT一样，成为一种社会基本技能。</p><p>3.争取到南京和杭州去玩一趟。<br>北上广深已经集齐，杭州，南京，武汉，厦门，青岛等等也得去看看，这个国家太大，要多走走。俗话说，读万卷书，行万里路。书我读了上百本了，要是一页算一卷的话，怎么着也有数万卷了，但路走得还不够。年轻时就多利用学校的资源出去看看，毕竟又不掏钱，何乐而不为呢？</p><h2 id="年度音乐"><a href="#年度音乐" class="headerlink" title="年度音乐"></a>年度音乐</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=497463404&auto=1&height=66"></iframe><p><strong>2019年度音乐10首</strong> <a href="http://music.163.com/#/m/playlist?id=3097742844" target="_blank" rel="noopener">网易云歌单</a></p><table><thead><tr><th align="left">曲目</th><th align="left">歌手</th></tr></thead><tbody><tr><td align="left">芒种</td><td align="left">赵方靖</td></tr><tr><td align="left">FlY-飞</td><td align="left">ANU</td></tr><tr><td align="left">左手指月</td><td align="left">萨顶顶</td></tr><tr><td align="left">莫守成规</td><td align="left">王爽冰</td></tr><tr><td align="left">Grace(惊鸿)</td><td align="left">Jannik</td></tr><tr><td align="left">我和我的祖国</td><td align="left">王菲</td></tr><tr><td align="left">大田後生仔(女生版)</td><td align="left">王玉萌</td></tr><tr><td align="left">浙江(Original Mix)</td><td align="left">Keridy</td></tr><tr><td align="left">China</td><td align="left">习谱予</td></tr><tr><td align="left">May the 4th</td><td align="left">Bee Hunter</td></tr></tbody></table><h2 id="年度观影"><a href="#年度观影" class="headerlink" title="年度观影   "></a>年度观影   </h2><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">序号</th><th align="left">名称</th></tr></thead><tbody><tr><td align="center">0</td><td align="left">《刮痧》</td><td align="center">15</td><td align="left">《哪吒之魔童降世》</td></tr><tr><td align="center">1</td><td align="left">《战狼》</td><td align="center">16</td><td align="left">《潜伏》</td></tr><tr><td align="center">2</td><td align="left">《鬼干部》</td><td align="center">17</td><td align="left">《庆余年》</td></tr><tr><td align="center">3</td><td align="left">《驴得水》</td><td align="center">18</td><td align="left">《鹿鼎记》</td></tr><tr><td align="center">4</td><td align="left">《美丽人生》</td><td align="center">19</td><td align="left">《盗墓笔记》</td></tr><tr><td align="center">5</td><td align="left">《流浪地球》</td><td align="center">20</td><td align="left">《飞虎神鹰》</td></tr><tr><td align="center">6</td><td align="left">《美丽心理》</td><td align="center">21</td><td align="left">《津门飞鹰》</td></tr><tr><td align="center">7</td><td align="left">《中国机长》</td><td align="center">22</td><td align="left">《猎鹰1949》</td></tr><tr><td align="center">8</td><td align="left">《摩登时代》</td><td align="center">23</td><td align="left">《孤岛飞鹰》</td></tr><tr><td align="center">9</td><td align="left">《勇敢的心》</td><td align="center">24</td><td align="left">《三国演义》</td></tr><tr><td align="center">10</td><td align="left">《美国往事》</td><td align="center">25</td><td align="left">《官场现形记》</td></tr><tr><td align="center">11</td><td align="left">《007幽灵党》</td><td align="center">26</td><td align="left">《人民的名义》</td></tr><tr><td align="center">12</td><td align="left">《西红市首富》</td><td align="center">27</td><td align="left">《大明王朝1566》</td></tr><tr><td align="center">13</td><td align="left">《天气之子》</td><td align="center">28</td><td align="left">《大秦帝国之裂变》</td></tr><tr><td align="center">14</td><td align="left">《辛德勒的名单》</td><td align="center">29</td><td align="left">《大秦帝国之纵横》</td></tr></tbody></table><h2 id="年度视频"><a href="#年度视频" class="headerlink" title="年度视频"></a>年度视频</h2><p>展现中国山水文化，一个法国人让我认识到了自己祖国的伟大。</p><iframe src="https://player.bilibili.com/player.html?aid=73222505&cid=125239420" width="270" height="300" frameborder="no" framespacing="0" allowfullscreen="true"></iframe><h2 id="年度图片"><a href="#年度图片" class="headerlink" title="年度图片"></a>年度图片</h2><p><img src="https://s2.ax1x.com/2019/12/06/QJYbSU.md.png" alt="best"></p><h2 id="年度书籍"><a href="#年度书籍" class="headerlink" title="年度书籍"></a>年度书籍</h2><p>《少年维特的烦恼.亲和力》–歌德</p><p>大哲学家，大文豪歌德的作品，学到很多做人的道理，对爱情的理解又上了一个台阶。拿破仑读过，黑格尔，尼采等都读过这书。感觉歌德的文字很有特点，讲道理很明白，都是大智慧。亲和力一书中对化学作用力和人情作用力的对照，写出了人间的种种道理，批判了世人的愚昧，今天一样不过时，我反而觉得这书就像在写今天的世界。这本书，经历不够的人读不懂，或者读起来觉得不好。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvX8uF.jpg" alt="weite"></p><p><strong>阅读书籍136本</strong>   </p><table><thead><tr><th align="left">书名</th><th align="left">作者</th></tr></thead><tbody><tr><td align="left">《三体》</td><td align="left">刘慈欣</td></tr><tr><td align="left">《钱商》</td><td align="left">阿瑟・黑利 (李克强荐)</td></tr><tr><td align="left">《道德经》</td><td align="left">老子</td></tr><tr><td align="left">《商君书》</td><td align="left">商鞅</td></tr><tr><td align="left">《潜规则》</td><td align="left">吴思</td></tr><tr><td align="left">《性之变》</td><td align="left">潘绥铭</td></tr><tr><td align="left">《金瓶梅》</td><td align="left">王汝梅</td></tr><tr><td align="left">《梦的解析》</td><td align="left">弗洛伊德</td></tr><tr><td align="left">《谈谈方法》</td><td align="left">勒内・笛卡尔</td></tr><tr><td align="left">《娱乐至死》</td><td align="left">尼尔・波兹曼</td></tr><tr><td align="left">《百年孤独》136</td><td align="left">加西亚・马尔克斯</td></tr><tr><td align="left">《汪曾祺谈吃》</td><td align="left">汪曾祺</td></tr><tr><td align="left">《人生的智慧》</td><td align="left">阿瑟・叔本华</td></tr><tr><td align="left">《人性的弱点》</td><td align="left">戴尔・卡耐基</td></tr><tr><td align="left">《社会契约论》</td><td align="left">让・雅克・卢梭</td></tr><tr><td align="left">《贫穷的本质》</td><td align="left">班纳吉(2019诺贝尔经济学奖)</td></tr><tr><td align="left">《相对论的意义》1</td><td align="left">爱因斯坦</td></tr><tr><td align="left">《天堂蒜薹之歌》</td><td align="left">莫言(2012诺贝尔文学奖)</td></tr><tr><td align="left">《痛苦的中国人》</td><td align="left">汉德克(2019诺贝尔文学奖)</td></tr><tr><td align="left">《女生呵护指南》</td><td align="left">六层楼</td></tr><tr><td align="left">《布雷顿森林货币战》</td><td align="left">本・斯泰尔</td></tr><tr><td align="left">《历史决定论的贫困》</td><td align="left">卡尔・波普尔</td></tr><tr><td align="left">《特朗普成功创业101》</td><td align="left">迈克尔・戈登</td></tr><tr><td align="left">《写给女人的幸福箴言》</td><td align="left">戴尔・卡耐基</td></tr><tr><td align="left">《少年维特的烦恼.亲和力》</td><td align="left">歌德</td></tr><tr><td align="left">略…</td><td align="left">略…</td></tr><tr><td align="left">《论人类不平等的起源和基础》</td><td align="left">让・雅克・卢梭</td></tr></tbody></table><h2 id="年度厨艺-学会菜品"><a href="#年度厨艺-学会菜品" class="headerlink" title="年度厨艺(学会菜品)"></a>年度厨艺(学会菜品)</h2><table><thead><tr><th align="left">菜名</th><th align="left">译名</th></tr></thead><tbody><tr><td align="left">麻婆豆腐</td><td align="left">Mapo Tofu</td></tr><tr><td align="left">小炒木耳</td><td align="left">Fried Fungus</td></tr><tr><td align="left">家常豆腐</td><td align="left">Homestyle Tofu</td></tr><tr><td align="left">溜炒腰花</td><td align="left">Stir-fried Pig Kidneys</td></tr><tr><td align="left">椒香花鲢</td><td align="left">Bighead carp with Szechuan Pepper</td></tr><tr><td align="left">酸菜豆腐鱼</td><td align="left">Fish with Szechuan Sauerkraut and Tofu</td></tr></tbody></table><h2 id="年度消费"><a href="#年度消费" class="headerlink" title="年度消费"></a>年度消费</h2><p><strong>支付宝全年消费</strong></p><p><img src="https://s2.ax1x.com/2019/12/30/lQrjW4.md.png" alt="alipay"></p><p><strong>微信全年消费</strong></p><p><img src="https://s2.ax1x.com/2019/12/30/lQsiTK.md.png" alt="wechat"></p><p><strong>京东全年消费</strong></p><p><img src="https://s2.ax1x.com/2019/12/30/lQskFO.md.png" alt="jdpay"></p><p><strong>三家合计消费</strong></p><p><img src="https://s2.ax1x.com/2019/12/30/lQsEfe.md.png" alt="total"></p><h2 id="年度技能树"><a href="#年度技能树" class="headerlink" title="年度技能树"></a>年度技能树</h2><p><img src="https://s2.ax1x.com/2019/12/06/QJJKEt.png" alt="skills">  </p><h2 id="工作时间统计"><a href="#工作时间统计" class="headerlink" title="工作时间统计"></a>工作时间统计</h2><table><thead><tr><th align="left">条目</th><th align="left">内容</th></tr></thead><tbody><tr><td align="left">全年工时</td><td align="left">4244.95h(h/小时,m/分钟)</td></tr><tr><td align="left">一季度</td><td align="left">974.3h (10h49m/每天)</td></tr><tr><td align="left">二季度</td><td align="left">917.7h (10h5m/每天)</td></tr><tr><td align="left">三季度</td><td align="left">1064.95h (11h34m/每天)</td></tr><tr><td align="left">四季度</td><td align="left">1288.0h (14h0m/每天)</td></tr></tbody></table><p><img src="https://s2.ax1x.com/2019/12/31/l3zFBQ.md.png" alt="time"></p><h2 id="其他统计数据"><a href="#其他统计数据" class="headerlink" title="其他统计数据"></a>其他统计数据</h2><table><thead><tr><th align="left">条目</th><th align="left">内容</th></tr></thead><tbody><tr><td align="left">生病次数</td><td align="left">1 (冠周炎)</td></tr><tr><td align="left">通宵次数</td><td align="left">6</td></tr><tr><td align="left">熬夜次数</td><td align="left">31</td></tr><tr><td align="left">新加好友</td><td align="left">28 (女:5，男:23)</td></tr><tr><td align="left">自由指数</td><td align="left">9.5</td></tr><tr><td align="left">健康指数</td><td align="left">8.5</td></tr><tr><td align="left">性福指数</td><td align="left">0.0</td></tr><tr><td align="left">幸福指数</td><td align="left">8.5</td></tr><tr><td align="left">休息天数</td><td align="left">13</td></tr><tr><td align="left">全年晴天</td><td align="left">138.5天</td></tr><tr><td align="left">全年阴天</td><td align="left">194.0天</td></tr><tr><td align="left">全年雨天</td><td align="left">32.5天</td></tr><tr><td align="left">阴晴雨比</td><td align="left">6.0:4.3:1.0</td></tr><tr><td align="left">天气统计</td><td align="left">地点：清水河</td></tr><tr><td align="left">天气统计</td><td align="left">时段：1.1~12.31</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/06/QJY6W8.md.png&quot; alt=&quot;2019report&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="年度报告" scheme="http://www.shieber.cn/categories/%E5%B9%B4%E5%BA%A6%E6%8A%A5%E5%91%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>2019年度新闻</title>
    <link href="http://www.shieber.cn/title/c739c660/"/>
    <id>http://www.shieber.cn/title/c739c660/</id>
    <published>2019-12-31T13:52:38.000Z</published>
    <updated>2020-01-03T03:21:39.710Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/31/l3IZMq.md.png" alt="2019"></p><a id="more"></a><h2 id="年度关键字词"><a href="#年度关键字词" class="headerlink" title="年度关键字词"></a>年度关键字词</h2><p>(0) 猪<br>(1) 难<br>(2) 稳<br>(3) 贸易摩擦<br>(4) 我和我的祖国  </p><h2 id="十大新词语"><a href="#十大新词语" class="headerlink" title="十大新词语"></a>十大新词语</h2><p>(0) 6G<br>(1) 996<br>(2) 5G元年<br>(3) 夸夸群<br>(4) 灵魂砍价<br>(5) 止暴治乱<br>(6) 极限施压<br>(7) 基层减负年<br>(8) 冰墩墩/雪容融<br>(9) 乡字号/土字号  </p><h2 id="十大年度流行语"><a href="#十大年度流行语" class="headerlink" title="十大年度流行语"></a>十大年度流行语</h2><p>(0) 硬核<br>(1) 我太南了<br>(2) 垃圾分类<br>(3) 学习强国<br>(4) 金色十年<br>(5) 先行示范区<br>(6) 最美奋斗者<br>(7) 基层减负年<br>(8) 中美贸易磋商<br>(9) 我和我的祖国  </p><h2 id="十大年度网络流行语"><a href="#十大年度网络流行语" class="headerlink" title="十大年度网络流行语"></a>十大年度网络流行语</h2><p>(0) 996<br>(1) 硬核<br>(2) 柠檬精<br>(3) 断舍离<br>(4) 不忘初心<br>(5) 是个狼人<br>(6) 鱼女无瓜<br>(7) 14亿护旗手<br>(8) 道路千万条，安全第一条<br>(9) 我不要你觉得，我要我觉得</p><h2 id="年度新闻"><a href="#年度新闻" class="headerlink" title="年度新闻"></a>年度新闻</h2><p><strong>2019.01.01</strong><br>    (1) 中美建交40周年。<br>    (2) 元旦节，世界各地花样迎新年。<br><strong>2019.01.02</strong><br>    (1) 《告台湾同胞书》发表四十周年纪念会在人民大会堂举行，习发表讲话。<br><strong>2019.01.03</strong><br>    (1) 22:22分，玉兔二号着陆月球背面并发回首张照片。<br><strong>2019.01.05</strong><br>    (1) TIOBE显示，Python时隔八年再度成为年度编程语言。<br><strong>2019.01.06</strong><br>    (1) Linus通过邮件宣布，Linux内核开发进入5.0阶段。<br><strong>2019.01.08</strong><br>    (1) 国家科学技术奖励大会在京召开，最高奖励调整为800万元。<br><strong>2019.01.15</strong><br>    (1) 中国嫦娥四号发回照片，显示在月球上的播种已生根发芽。<br>    (2) 发现DNA双螺旋结构的沃森由于发表种族歧视言论被冷泉港实验室取消一切荣誉头衔。<br><strong>2019.01.17</strong><br>    (1) 华为面临外部困境，任正非罕见回应外界质疑，阐述华为理念。<br><strong>2019.01.18</strong><br>    (1) 《啥是佩琪》霸屏网络。<br>    (2) 十余款违法应用披露：消消乐涉恶意扣费，QQ音乐，网易新闻等过度搜集用户隐私。<br><strong>2019.01.20</strong><br>    (1) 拼多多后台现重大Bug，被薅羊毛上千万。<br><strong>2019.01.21</strong><br>    (1) 国家统计局公布2018年GDP：90.0309万亿元，增速为6.6%。<br>    (2) 基因编辑婴儿事件当事人贺建奎被解除劳动合同，终止一切教学科研活动。<br>    (3) 国家统计局公布人口数据：2018年末全国人口13.9538亿，全年新增530万人。<br><strong>2019.01.22</strong><br>    (1) 马云入选全球“十大思想者”，外媒称其改变了社会。<br>    (2) 加拿大《环球邮报》报道，美国准备正式引渡孟晚舟到美国受审。<br><strong>2019.01.23</strong><br>    (1) 《百度搜索引擎已死》一文揭露百度搜索将用户导向自家百家号内容。<br><strong>2019.01.24</strong><br>    (1) 华为公布5G基站核心芯片，5G时代基本开启。<br><strong>2019.02.05</strong><br>    (1) 农历己亥猪年正月初一，各地喜迎新年。<br><strong>2019.02.07</strong><br>    (1) 国产科幻电影《流浪地球》热映，中国科幻展现东方人的别样宇宙观。<br><strong>2019.02.12</strong><br>    (1) 北大，北电发声：调查翟天临学术造假。<br><strong>2019.02.18</strong><br>    (1) 上海虹桥火车站启动5G网络。<br><strong>2019.03.04</strong><br>    (1) 全国两会如期召开。<br><strong>2019.03.07</strong><br>    (1) 华为起诉美国政府禁购令违反美国宪法。<br><strong>2019.03.10</strong><br>    (1) 埃塞俄比亚航空公司波音737客机坠毁，157人全部遇难，含8名中国人。<br><strong>2019.03.13</strong><br>    (1) 腾讯QQ正式推出注销功能。<br><strong>2019.03.15</strong><br>    (1) 3.15晚会曝光各种黑心厂和公司，各地工商加紧查办。<br><strong>2019.03.21</strong><br>    (1) 韩国”胜利门”性丑闻震动青瓦台，检方彻查。<br>    (2) 日本公布2020奥运会火炬样品，使用的铝材来自2011年311大地震废弃物。<br><strong>2019.03.25</strong><br>    (1) 剑桥大学承认中国高考成绩，全省前0.1%的人方有资格报名。<br><strong>2019.03.26</strong><br>    (1) 华为发布新产品P30系列，拍照功能比肩专业摄像机。<br><strong>2019.03.31</strong><br>    (1) 教育部批准35所高校本科开设AI专业。<br><strong>2019.04.01</strong><br>    (1) 10点41分，日本官房长官菅义伟公布新年号：令和。<br><strong>2019.04.02</strong><br>    (1) 四川凉山地区因雷击木引发山火，30名消防人员因抢险死亡。<br><strong>2019.04.08</strong><br>    (1) 996工作制，加班要命，引发广泛热议。<br><strong>2019.04.10</strong><br>    (1) 首张黑洞照片公布，引发全球热议。<br><strong>2019.04.11</strong><br>    (1) 维基解密创始人阿桑奇被英国警方从厄瓜多尔驻伦敦大使馆逮捕。<br><strong>2019.04.12</strong><br>    (1) 视觉中国给黑洞，国旗等图片加上版权，被有关部门约谈。<br><strong>2019.04.13</strong><br>    (1) 某女硕士购买奔驰车却被4S店欺负，投诉无门，车盖上哭诉。<br><strong>2019.04.15</strong><br>    (1) 巴黎圣母院发生火灾，塔尖被烧毁，部分珍贵文物遭到损毁。<br><strong>2019.04.16</strong><br>    (1) 大数据：2018年中国人均阅读量4.67，深苏京沪等城市排在前列。<br><strong>2019.04.17</strong><br>    (1) 亚马逊决定部分电商业务退出中国，干不过阿里，京东，拼夕夕。<br><strong>2019.04.19</strong><br>    (1) 国家图书馆保存2000亿条微博，网友调侃：后人不懂我的梗咋办？<br><strong>2019.04.23</strong><br>    (1) 海军成立70周年，在青岛附近海域举行海上阅兵，习出席。<br><strong>2019.04.30</strong><br>    (1) 日本明仁天皇参加”退位礼正殿之仪”正式退位，平成时代结束，令和到来。<br><strong>2019.05.04</strong><br>    (1) 伟大的”五四运动”100周年纪念日。<br><strong>2019.05.06</strong><br>    (1) 俄罗斯一飞机发生故障，导致41人死亡。<br>    (2) 美总统特朗普发推威胁给中国商品加税，国内股指大跌6%。<br><strong>2019.05.11</strong><br>    (1) 女子网购18件衣服，五一节试穿后却要求全退，遭到网友人肉搜索。<br><strong>2019.05.13</strong><br>    (1) 广东查处32名高考移民，已取消报名资格。<br><strong>2019.05.15</strong><br>    (1) 华为及国内部分高校被美国列入商务部工业和安全局的实体名单。<br><strong>2019.05.20</strong><br>    (1) 比尔.盖茨通过公众号继续分享其夏季书单。<br><strong>2019.05.21</strong><br>    (1) 国内三大航空公司就波音737MAX长时间停飞及订单无法按期交付提出赔偿。<br>    (2) 华为创始人任正非再次接受央视专访，回应美国封杀并谈及基础教育对民族的重要性。<br><strong>2019.05.23</strong><br>    (1) 中国时速600千米高速磁悬浮实验样车在青岛下线。<br><strong>2019.05.24</strong><br>    (1) 夸克理论提出者默里·盖尔曼去世，享年89岁。<br>    (2) 英国首相特蕾莎·梅宣布辞职，一度哽咽：“我已尽力”。<br>    (3) Nature：全球禁止氟利昂多年后，中国东部仍在大量排放，尤其是山东和河北。<br>    (4) 国家卫健委发布《卫生健康事业发展统计报告》显示：中国人均寿命达77岁。<br><strong>2019.05.25</strong><br>    (1) 四川卧龙熊猫保护基地发现首例纯白色野生大熊猫。<br>    (2) 世卫组织(WHO)将中医疗法纳入其新版《国际疾病分类》。<br>    (3) 第一财经“城市魅力排行榜”发布，成都杭州等城市成为新一线城市。<br><strong>2019.05.29</strong><br>    (1) IEEE禁止华为专家参与期刊审稿。<br>    (2) 爱因斯坦广义相对论被证实100周年纪念日。<br><strong>2019.06.01</strong><br>    (1) 国务院办公室发布《关于中美经贸磋商的中方立场》。<br><strong>2019.06.06</strong><br>    (1) 工信部给四家通信运营商(移动，联通，电信，广电）发布5G牌照。<br><strong>2019.06.07</strong><br>    (1) 2019年全国高考今拉开帷幕。<br><strong>2019.06.17</strong><br>    (1) 宜宾长宁发生里氏6.0级地震，预警系统实现提前61秒向成都预警。<br><strong>2019.06.20</strong><br>    (1) 习访问朝鲜，时隔14周年后再次有中方领导人访朝。<br><strong>2019.06.24</strong><br>    (1) 点读机女孩高君雨成绩568分，超广东一本线163分。<br><strong>2019.06.25</strong><br>    (1) 章莹颖被杀害案宣判：被告谋杀罪成立。<br><strong>2019.06.27</strong><br>    (1) 美国2城市禁用面部识别软件。<br>    (2) 贵州茅台股票破千，27年来A股再次进入千元股时代。<br><strong>2019.06.29</strong><br>    (1) 腾讯成立开源管理办公室。<br>    (2) 中国航天按部就班，确定于2022年建立大型太空站。<br><strong>2019.06.30</strong><br>    (1) 化学元素周期表诞生150周年纪念日，周期表内元素仍未圆满。<br><strong>2019.07.03</strong><br>    (1) 百度老板李彦宏遭某男子泼水。<br><strong>2019.07.12</strong><br>    (1) 山东大学学伴项目’留学生三女配一男’招致强烈批评。<br><strong>2019.07.16</strong><br>    (1) 计算机科学之父阿兰·图灵确定登上英国50英镑新钞。<br><strong>2019.07.17</strong><br>    (1) 艾隆·马斯克创立的脑机接口公司Neuralink发布首款脑后插管技术。<br><strong>2019.07.20</strong><br>    (1) 美国阿波罗登月工程50周年纪念日。<br>    (2) 著名香港艺人任达华先生在广东中山参加活动时遭行刺。<br><strong>2019.07.21</strong><br>    (1) 香港暴徒游行示威活动中冲撞中联办，污损国徽。<br><strong>2019.07.23</strong><br>    (1) 华为对优秀青年实行年薪制，某中科院青年获200万年薪。<br>    (2) 英国保守党党首选举结束：鲍里斯·约翰逊将接任首相一职。<br>    (3) 中共讣告：前国务院总理李鹏于2019.07.22日逝世，享年91岁。<br><strong>2019.07.24</strong><br>    (1) 刘强东案件相关文档曝光，非强奸。<br><strong>2019.07.28</strong><br>    (1) 受中美两国关系影响，新闻联播近期内容突换风格，频爆’喷饭，跑火车’等词。<br><strong>2019.07.31</strong><br>    (1) 47个城市赴台个人自由行暂停实施。<br><strong>2019.08.04</strong><br>    (1) 美国发生两起枪击案，造成严重伤亡。<br><strong>2019.08.06</strong><br>    (1) 受美股下跌影响，沪深两市开盘跌1.8%，八月以来沪深两市累计下跌5%以上。<br><strong>2019.08.09</strong><br>    (1) 华为2019开发者大会召开，鸿蒙操作系统释出，并计划开源。<br><strong>2019.08.10</strong><br>    (1) 台风利奇马登录沿海地区，给浙江等省份带来严重人员财产损失。<br><strong>2019.08.15</strong><br>    (1) 香港示威游行活动引发暴力事件，港人李嘉诚等呼吁理性表达，爱香港，拒绝暴力。<br><strong>2019.08.18</strong><br>    (1) 中共中央支持深圳建立社会主义先行示范区。<br><strong>2019.08.26</strong><br>    (1) Linux内核发布28周年，总内核树260万行代码；Linux已统治全部Top500超级计算机，绝大部分云计算并衍生出安卓。<br><strong>2019.08.29</strong><br>    (1) 微软向Linux内核提供exFAT支持。<br><strong>2019.08.30</strong><br>    (1) 温州乐清”滴滴顺丰车杀人”司机被执行死刑，立即执行。<br><strong>2019.08.31</strong><br>    (1) AI换脸软件ZAO一夜爆火，个人隐私引发舆论。<br>    (2) 华为设立新网站，开源鸿蒙系统和方舟编译器等重要工具，软件。<br><strong>2019.09.03</strong><br>    (1) 谷歌释出Android10正式版操作系统。<br>    (2) 部分学校在课堂推行人脸识别，引发争议。<br><strong>2019.09.05</strong><br>    (1) 2022年卡塔尔世界杯会徽发布。<br><strong>2019.09.08</strong><br>    (1) 中国男篮对局失利，错失奥运入场券。<br>    (2) 清华大学教授，密码学家王小云(女)获未来科学大奖，奖金100万美元。<br><strong>2019.09.10</strong> (教师节)<br>    (1) 谷歌开发者大会今在上海召开。<br>    (2) 马云遵循2018年9月10日的决定如期卸任，挥泪现场，告别阿里。<br><strong>2019.09.11</strong><br>    (1) 苹果发布iPhone11等新产品，价格全面下调。<br>    (2) 联通和电信确认双方共建共享5G网络基础设施。<br><strong>2019.09.17</strong><br>    (1) 2022冬奥会和残奥会吉祥物发布。<br>    (2) 国家邮政总局：中国快递包裹总量已超美，日，欧总和。<br><strong>2019.09.18</strong><br>    (1) 华为全连接大会今在上海召开，发布多款产品，助力中国智造。<br><strong>2019.09.23</strong><br>    (1) 阿里巴巴蚂蚁森林获联合国“地球卫士奖”。<br><strong>2019.09.24</strong><br>    (1) 中国贵州FAST天眼向全球开发。<br><strong>2019.09.25</strong><br>    (1) 北京大兴国际机场投入使用，习出席并致辞。<br><strong>2019.09.28</strong><br>    (1) 中国女排取得十连胜，提取锁定冠军献礼国庆。<br><strong>2019.09.29</strong><br>    (1) 共和国勋章和国家荣誉称号奖章颁奖大会在京举行，袁隆平和屠呦呦等获奖。<br><strong>2019.10.01</strong><br>    (1) 共和国年届古稀，今举行盛大阅兵，群众游行及烟花晚会。<br>    (2) 阿里巴巴集团蚂蚁金服自研的OceanBase数据库登顶世界第一。<br><strong>2019.10.04</strong><br>    (1) 为应对香港乱局，港府宣布实施《禁止蒙面规例》。<br><strong>2019.10.06</strong><br>    (1) 美休斯顿火箭俱乐部总经理公开发表涉港不当言论，中国篮协暂停与之交流合作。<br><strong>2019.10.07</strong><br>    (1) 年度诺奖陆续公布，2019诺贝尔生理学或医学奖颁给细胞缺氧适应性机制研究。<br><strong>2019.10.08</strong><br>    (1) 美商务部将包括旷视科技在内的28家中国科技公司或组织加入实体清单。<br><strong>2019.10.10</strong><br>    (1) 江苏无锡312国道K135处跨桥侧翻，多辆车被碾压，造成3死2伤。<br><strong>2019.10.14</strong><br>    (1) 云贵川部分地区微信和QQ遭封号，涉国家严厉打击电信诈骗案。<br><strong>2019.10.15</strong><br>    (1) 统计局公布，9月CPI猛增为3%，猪价上涨成重要推手。<br><strong>2019.10.18</strong><br>    (1) 军运会今在武汉开幕。<br>    (2) 人造肉饼今天首次上市，价格是猪肉六倍。<br><strong>2019.10.22</strong><br>    (1) 2024年巴黎奥运会和残奥会会徽发布。<br>    (2) 袁隆平主导的第三代杂交水稻首次专家测产，亩产突破1046.3公斤。<br><strong>2019.10.23</strong><br>    (1) 华为发布Mate30 5G双模全网通智能手机和折叠屏智能手机。<br>    (2) 谷歌量子验证登顶Nature150周年纪念刊，谷歌CEO发文祝贺。<br>    (3) UNIX系统诞生50周年，催生C语言和互联网，并衍生出Linux系统，苹果系统和安卓系统。<br><strong>2019.10.24</strong><br>    (1) 程序员开发者节日，讯飞召开1024开发者大会。<br>    (2) 中共中央政治局集中讨论学习区块链技术，布局区块链技术。<br><strong>2019.10.25</strong><br>    (1) 英国一货车内发现39具尸体，警方称不能证明都是中国公民。<br><strong>2019.10.30</strong><br>    (1) 华为HR胡玲实名内网反映公司问题。<br><strong>2019.10.31</strong><br>    (1) 移动联通电信和铁塔四家运营商牵头，中国正式开启5G商用。<br><strong>2019.11.01</strong><br>    (1) 十九届四中全会公报刊发，要求全面实现国家治理体系现代化。<br><strong>2019.11.03</strong><br>    (1) 桂林航空某女乘客被爆进入飞机驾驶室，机长终身禁飞。<br><strong>2019.11.04</strong><br>    (1) 旅行者2号发回飞出太阳系穿越星际空间的首批数据。<br>    (2) 顶级期刊自然(Nature 1869~2019)创刊150年，官网发文回忆历史。<br><strong>2019.11.05</strong><br>    (1) 第二届国际进口博览会开幕，习致辞。<br><strong>2019.11.07</strong><br>    (1) 中国成立6G技术研发推进工作组和总体专家组，正式开启6G研究。<br><strong>2019.11.09</strong><br>    (1) 王思聪被限制高消费，王家奉行的远政治，亲政府似乎不奏效。<br><strong>2019.11.11</strong><br>    (1) 双十一天猫全天交易额达2684亿，消费额各省排名：广东、浙江、江苏、上海、山东、北京、四川、河南、福建、湖北。<br><strong>2019.11.13</strong><br>    (1) 北京确诊两例鼠疫。<br>    (2) 香港教育局宣布全港停课。<br><strong>2019.11.17</strong><br>    (1) 45岁林志玲与日本男星AKIRA(黑泽良平)在台南举行婚礼。<br><strong>2019.11.20</strong><br>    (1) 香港理工大学闹剧结束，校园满目疮痍。<br>    (2) 湖南未成年少女被强奸，6人被批捕，含公职人员。<br><strong>2019.11.21</strong><br>    (1) 某医生万米高空为乘客吸出800毫升尿液。<br>    (2) 国务院办公厅公布2020年节假日安排：春节7天，国庆中秋共8天。<br><strong>2019.11.22</strong><br>    (1) 王思聪名下房产，汽车，存款被查封。<br><strong>2019.11.25</strong><br>    (1) 就近期公司暴力裁员事件，网易做出道歉声明。<br>    (2) 全球IPv4地址分配完毕，IPv6即将投入大规模使用。<br><strong>2019.11.27</strong><br>    (1) 微软推出玻璃硬盘，理论上可保存千年。<br>    (2) 浙江卫视录制节目过程中，某明星猝死，年仅35岁，引发一轮声讨。<br><strong>2019.12.01</strong><br>    (1) 华为孟晚舟被加拿大政府拘押一年。<br>    (2) 广州突发地陷，3人失联，前有苏州桥塌，后有羊城地陷。<br><strong>2019.12.02</strong><br>    (1) 联合国气候大会召开。<br>    (2) 华为就被羁押251天释放的前员工维权事件作出回应：支持当事人运用法律。<br><strong>2019.12.03</strong><br>    (1) 贺建奎“基因编辑婴儿”论文曝光。<br><strong>2019.12.05</strong><br>    (1) 条形码发明人乔治·劳雷尔去世，享年94岁。<br><strong>2019.12.06</strong><br>    (1) 上海财经大学会计学院某研究生公开发文举报学院副教授对其进行性骚扰。<br><strong>2019.12.10</strong><br>    (1) 世界反兴奋剂执委会宣布俄罗斯被禁止参加国际赛事四年，普京强硬回应。<br><strong>2019.12.14</strong><br>    (1) 中兴，深度(deepin)联合推出的国产操作系统UOS(统一操作系统)释出，<br><strong>2019.12.16</strong><br>    (1) Nature杂志公布年度照片：黑洞发现。<br><strong>2019.12.17</strong><br>    (1) 国产航母山东舰交付使用，习出席交接入列仪式。<br><strong>2019.12.18</strong><br>    (1) 关于李子柒视频是否文化输出，国内开启大讨论。<br><strong>2019.12.19</strong><br>    (1) 网络热播剧《庆余年》无广告版(盗版)全集泄出。<br><strong>2019.12.20</strong><br>    (1) 澳门回归20周年纪念日，习出席。<br><strong>2019.12.21</strong><br>    (1) 北大苏剑：“中国人口从去年开始就在负增长，劳动力2022年后每年减少1000万”。<br><strong>2019.12.23</strong><br>    (1) 俄罗斯在测试中成功断开同国际互联网的连接。<br><strong>2019.12.25</strong><br>    (1) 民航总医院急诊科副主任医师在就诊过程中遭病患家属伤害，今晨逝世。<br><strong>2019.12.27</strong><br>    (1) 长征五号火箭“胖五”发射成功。<br><strong>2019.12.30</strong><br>    (1) 基因编辑婴儿事件主导者贺建奎被判刑三年，罚款三百万元。<br><strong>2019.12.31</strong><br>    (1) 习发表新年贺词：不负韶华，共同迎接2020！</p><p><a id="download" href="https://gitee.com/QMHTMY/share/blob/master/2019events.pdf" target="_blank" rel="noopener"><i class="fa fa-download"></i><span>下载年度报告</span></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/31/l3IZMq.md.png&quot; alt=&quot;2019&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="年度新闻" scheme="http://www.shieber.cn/categories/%E5%B9%B4%E5%BA%A6%E6%96%B0%E9%97%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>每日PS技巧15：图片移植拼接</title>
    <link href="http://www.shieber.cn/title/cbd7f6be/"/>
    <id>http://www.shieber.cn/title/cbd7f6be/</id>
    <published>2019-12-30T04:25:32.000Z</published>
    <updated>2019-12-30T05:26:54.867Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/30/lMaD10.md.png" alt="PS15_1"></p><a id="more"></a><p>将人物身体部位结合到水果上可以给植物赋予生命力，创造出各种好玩儿有趣的图片效果。本次学习制作封面图的方法，一旦学会，以后就能随意组合。</p><h2 id="今日技巧-图片移植拼接"><a href="#今日技巧-图片移植拼接" class="headerlink" title="今日技巧 [图片移植拼接]"></a>今日技巧 [图片移植拼接]</h2><p>主要步骤：  </p><p>1) 打开两幅图片素材<br>2) 调整大小，使得图位置合适<br>3) 利用工具提取嘴唇或其他部位<br>4) 调整提取部位的色相，使相宜<br>5) 保存图片并输出</p><p>首先导入两幅图片素材，调整人体嘴唇到合适位置。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMdeg0.md.png" alt="PS15_2"></p><p><img src="https://s2.ax1x.com/2019/12/30/lMdtv6.md.png" alt="PS15_3"></p><p>利用工具(锁套，钢笔等)建立选区，这里我用的钢笔，主要我的这个PS是精简版，锁套不能用。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMdsPA.md.png" alt="PS15_4"></p><p>建立选区后复制到新图层，这样得到一个干净的嘴唇。上面的图层我打开了调整图层，所以显得更亮，其实应该最后一步处理的。我先关闭，看看原图的色彩。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMwhy6.md.png" alt="PS15_5"></p><p>现在再创建口腔内部的选区，并Ctrl+Shift+I反向(相当于选择嘴唇)，Ctrl+U打开色相调节器。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMwj6P.md.png" alt="PS15_6"></p><p>下面是调节好的图片，大概颜色就这样。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMdcxP.md.png" alt="PS15_7"></p><p>此时合并背景图层和嘴唇图层(Ctrl+E)为一个图层，复制该合成图层，在复制的图层上选择滤镜&gt;其他&gt;高反差保留，半径为3左右，模式设置为柔光。创建色阶，色相饱和图，色彩平衡调整图层，对图像进行调节。下图是调节过的图，明显好看多了。</p><p><img src="https://s2.ax1x.com/2019/12/30/lM0rct.md.png" alt="PS15_8"></p><p>最后附上原图和效果图，原图：2019.12.30 Bing搜索图片。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMBPHO.md.png" alt="PS15_9"></p><p><img src="https://s2.ax1x.com/2019/12/30/lM0cB8.md.png" alt="PS15_10"></p><p><img src="https://s2.ax1x.com/2019/12/30/lMaD10.md.png" alt="PS15_11"></p><p>苹果，梨等等水果都可以使用，各种组合，变化多端。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/30/lMaD10.md.png&quot; alt=&quot;PS15_1&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://www.shieber.cn/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="PS" scheme="http://www.shieber.cn/tags/PS/"/>
    
  </entry>
  
  <entry>
    <title>《庆余年》</title>
    <link href="http://www.shieber.cn/title/2622ee51/"/>
    <id>http://www.shieber.cn/title/2622ee51/</id>
    <published>2019-12-28T12:07:49.000Z</published>
    <updated>2019-12-30T05:24:23.337Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/28/lmaX7R.md.jpg" alt="cover"></p><a id="more"></a><p>《庆余年》这部剧可能是2019年我看的最后一部剧，写的所谓的点评(吐槽)吧！先抛观点：这部剧可以，演员阵容强大，演技好，陈道明出场自带帝王气，达康书记再次扮演狠角色，总体来看，故事好，演员好，剪辑也好，特此推荐给读者。</p><h2 id="穿越还是科幻？"><a href="#穿越还是科幻？" class="headerlink" title="穿越还是科幻？"></a>穿越还是科幻？</h2><p>目前，广电总局对穿越剧亮红灯，所以剧情开始是现代，然后全是回忆，或说讲述了一段故事，中间加了点现代的理念进去，但除了第一个镜头和最后的word文字镜头外，中间没有任何现代镜头。所以，很难说他是穿越剧还是古装剧，好在过审了。</p><h2 id="故事矛盾"><a href="#故事矛盾" class="headerlink" title="故事矛盾"></a>故事矛盾</h2><p>故事从腾梓荆刺杀范闲开始，以二人前往京都为铺垫，腾梓荆被程巨树杀死后众人的冷漠为高潮，展开了一个宏大的场面。<br>核心矛盾(此矛盾乃推动事物发展的矛盾，马克思基本矛盾观)是“护卫是人，不是下人，人人平等”，范闲到监察院查看母亲叶轻眉留下的立院宗旨更强化这一矛盾。接着，范大人这位拥有人人平等思想的社会好青年将这一理念作为个人奋斗目标，不断同各路人马斗争，进而不断推动故事往纵深发展。</p><h2 id="主人公"><a href="#主人公" class="headerlink" title="主人公"></a>主人公</h2><p>本剧主人公并非一位而是大众主角，各位配角都表现得挺好，许多人出场挺晚，但人物形象仍然很丰富，比如达康书记演狠角色就很出彩，五竹叔牛逼，机器人，战斗力暴表。出场最多的男主角自是范闲，二号是王启年，爱钱，大忽悠。主人公范闲为义以身范险，老伙计王启年为财倚身范闲。女主该是林婉儿(鸡腿姑娘，其实这是鸭腿)，其母亲(长公主，脸白得奇怪)出场也不少，还有司理理也是，海棠圣女最后出场，我弟的义母和海棠就很像，感觉就是其本人年轻时候。估计这几位年轻一辈的女的都喜欢范大人，看后面剧情发展吧。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMrkpd.md.png" alt="qyn10"></p><h2 id="经典场面"><a href="#经典场面" class="headerlink" title="经典场面"></a>经典场面</h2><p>剧中有很多经典场面，最开始范大人轻声细语叫下人走，然而下人齐跪，生怕范闲不要他们。范闲不得不大声呵斥，只有拿出对待奴才的态度下人们才懂了。给下人讲什么人人平等他们是不懂的。被骂后，奴才一句”这就舒服多了，刚才大人说的什么人人平等我听不懂”更突出矛盾，封建社会的人是不平等的，给其尊严反而不要。我想起鲁迅一句话：有的人，对其好了，他觉你是坏人；对其不好，得其反到觉得你是好人。所以，不要对人太好，有的人就是贱呀！被男人欺负了还舍不得分手的女人是不是这种？斯德哥尔摩症患者是不是这种？</p><p>圣女海棠和范闲谈论朋友，个人孤独的场景也很经典。</p><p><img src="https://s2.ax1x.com/2019/12/28/lmBhKU.md.png" alt="qyn1"></p><p>我们生活在尘世，但又有几个知心朋友呢？遇到困难和苦恼有人倾诉吗？我们内心的孤独和痛苦能否有人帮助排解？我们自己又有真心去对待或者说发展一个朋友吗？我看很多人没有真心朋友，反倒有了一堆酒肉朋友，一堆臭味相投的狐朋狗友。读者不妨自我心中盘算一番，你倒霉了，真有谁会帮助你吗？有能为你考虑的朋友吗？我认为朋友不在多，而在精，一个良友胜过千个普通人。找朋友，我从不找和我有太多相同志趣者，因为拥有相同的志趣就会引发争执，甚至仇恨。找一个不如我的人作朋友，我看其缺点以反省自身；找一个比我强的人，我学其优点和精神。实际上，我认识的朋友都和我喜好不同，他们擅长篮球，我擅长电脑；他们喜欢金融，我喜欢文字。聚在一起，一个人讲一点儿，互相补充知识。当然，这种模式，要双方愿意了解新知识，大度，开放，不拒绝自己不了解的东西。</p><p>评价王启年的场面也很有深意。</p><p><img src="https://s2.ax1x.com/2019/12/28/lmrZSx.md.png" alt="qyn2"></p><p><img src="https://s2.ax1x.com/2019/12/28/lmr1kd.md.png" alt="qyn3"></p><p>活得真实，就是自然。缺点暴露无遗，优点也一览无余。这才是做人嘛，何必活得那么累呢？带上面具固然维持暂得的安稳和体面，但是被揭开时，怕是要暴露最大的丑陋。怕老婆，爱女儿，最是自然，尤其四川耙耳朵。要杜绝的是不怕老婆，不爱女儿，成天在外鬼混，这就不好了。</p><p><img src="https://s2.ax1x.com/2019/12/28/lmsVEQ.md.png" alt="qyn4"></p><p><img src="https://s2.ax1x.com/2019/12/28/lmsY59.md.png" alt="qyn5"></p><p>背诗(不对，作诗)场面我猜到了，预感到会用现代人总结的几千年中华民族的诗歌去虐庄墨韩。背诗百余首，演员下了苦功夫的，看了花絮，范闲拍戏时真背下来的，比小仙肉们只会张嘴强何止百倍？</p><h2 id="搞笑场面"><a href="#搞笑场面" class="headerlink" title="搞笑场面"></a>搞笑场面</h2><p>王启年吃马粪的场面，司理理被脱光包扎伤口的场面，还有很多吧！外交谈判成了吵架！</p><p><img src="https://s2.ax1x.com/2019/12/28/lm6elq.md.png" alt="qyn6"></p><p><img src="https://s2.ax1x.com/2019/12/28/lm68h9.md.png" alt="qyn7"></p><p><img src="https://s2.ax1x.com/2019/12/28/lm6Y11.md.png" alt="qyn8"></p><h2 id="其他废话"><a href="#其他废话" class="headerlink" title="其他废话"></a>其他废话</h2><p>电视剧情可以，然而VVIP不行，腾讯等平台吃相难看，逼着正版用户去看盗版。最后说一句，范闲母亲叶轻眉和沈重妹妹(钟情言冰云)应该是同一个演员，各位可细细辨别。听说本剧一共三季，陈道明(陛下)已在催拍第二季，所以2020年下半年可能会看到第二季，期待吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/28/lmaX7R.md.jpg&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Pythonic的代码写法</title>
    <link href="http://www.shieber.cn/title/5aa457d2/"/>
    <id>http://www.shieber.cn/title/5aa457d2/</id>
    <published>2019-12-23T04:05:25.000Z</published>
    <updated>2020-05-31T06:44:59.691Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/23/lpZk36.md.png" alt="pythonic"></p><a id="more"></a><p>很多时候我们写的代码根本就不是代码，而是垃圾，尤其翻看自己以前写的东西，感觉就是一推垃圾，恨不得一删了之。每一门编程语言都有自己最为合适的写法，Python也不例外。</p><p><strong>变量交换</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在C语言中是</span><br><span class="line">int tmp;</span><br><span class="line">tmp = a;</span><br><span class="line">a   = b;</span><br><span class="line">b   = tmp;</span><br><span class="line"></span><br><span class="line">python中不需要tmp，而是一步到位</span><br><span class="line">a, b = b, a </span><br><span class="line">这里最难理解的是，b赋值给a了，为何a又能复制给b？实际上，=号右边的b,a被提取出来了，应该在CPU寄存器中。</span><br></pre></td></tr></table></figure><p><strong>比较元素并赋值</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">a , b, c = 1, 2, 0 #令c等于a,b中更大的那个</span><br><span class="line">第一种写法</span><br><span class="line">if a &gt; b:</span><br><span class="line">    c = a</span><br><span class="line">else:</span><br><span class="line">    c = b</span><br><span class="line"></span><br><span class="line">第二种写法</span><br><span class="line">c = a if a &gt; b else b</span><br><span class="line"></span><br><span class="line">第三种写法</span><br><span class="line">c = [b, a][a &gt; b]  #利用a &gt; b返回的True(1)或False(0)作下标提取[b, a]列表里的值</span><br><span class="line"></span><br><span class="line">第四种写法</span><br><span class="line">c = (a &gt; b and [a] or [b])[0]</span><br><span class="line">c = a &gt; b and a or b #精简版 and与or间无括号区分时，优先级: and&gt; not &gt; or</span><br><span class="line"></span><br><span class="line">Python的and or 是返回符合条件对应的值本身，而不只是True或False</span><br><span class="line">例如:</span><br><span class="line">2 and 3 -&gt; 3，2为真，则返回后一个的值3</span><br><span class="line">2 and False -&gt; False，2为真，则返回后一个的值False</span><br><span class="line">0 and False -&gt; 0，0为假，则返回前一个的值0</span><br><span class="line">2 or 3 -&gt; 2, 2为真，则返回前一个的值2</span><br><span class="line">0 or 3 -&gt; 3, 0为假，则返回后一个的值3</span><br><span class="line">2 &lt; 3 and 3 &lt; 1 -&gt; 3 &lt; 4 -&gt; False，2&lt;3为真，此时返回后一个值3&lt;1，再判断为False</span><br><span class="line"></span><br><span class="line">0和False，1和True是不同的，只是if把它当作条件判断时，采取一样的操作，但其本质各自不同，只有not才是真正返回布尔值。</span><br></pre></td></tr></table></figure><p><strong>循环区间元素</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">python2中</span><br><span class="line">for i in range(1,100000,2):</span><br><span class="line">print(i) #先由range生成列表，占用内存500000个内存位置，浪费空间</span><br><span class="line"></span><br><span class="line">for i in xrange(1,100000,2):</span><br><span class="line">print(i) #返回一个生成器，每次调用时才输出一个数，实际就是利用一个函数，占用单位内存</span><br><span class="line"></span><br><span class="line">python3的range就是python2中的xrange实现，可直接用，换句话说该用python3。</span><br></pre></td></tr></table></figure><p><strong>索引</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">lst = [1,4,10,100,23]</span><br><span class="line">for i in range(len(lst)):</span><br><span class="line">print(i,&apos;--&gt;&apos;,lst[i])   #调用len函数，又索引lst</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; for i,val in enumerate(lst):</span><br><span class="line">....    print(i,&apos;--&gt;&apos;,val)  #一次把元素的序号也给输出了，省得再写变量。</span><br><span class="line">....</span><br><span class="line">0, 1</span><br><span class="line">1, 4</span><br><span class="line">2, 10</span><br><span class="line">3, 100</span><br><span class="line">4, 23</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; for i,val in enumerate(lst,1):</span><br><span class="line">....  print(i,&apos;--&gt;&apos;,val)    从1开始计数</span><br><span class="line">....  </span><br><span class="line">1, 1</span><br><span class="line">2, 4</span><br><span class="line">3, 10</span><br><span class="line">4, 100</span><br><span class="line">5, 23</span><br></pre></td></tr></table></figure><p><strong>字符串拼接</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">string = &apos;I&apos;+&apos;Love&apos;+&apos;You&apos; 用加法，产生内存浪费</span><br><span class="line"></span><br><span class="line">string = &apos;&apos;.join([&apos;I&apos;,&apos;Love&apos;,&apos;You&apos;]) 用join直接生成字符串</span><br></pre></td></tr></table></figure><p><strong>字符串翻转</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = &apos;I love you&apos;</span><br><span class="line">低效率写法</span><br><span class="line">for i in range(len(a)):</span><br><span class="line">reverse_a += a[len(a) -1 -i]</span><br><span class="line">&gt;&gt;&gt; reverse_a</span><br><span class="line">&apos;uoy evol i&apos;</span><br><span class="line"></span><br><span class="line">正确写法</span><br><span class="line">&gt;&gt;&gt; reverse_a = a[::-1]</span><br><span class="line">&gt;&gt;&gt; reverse_a</span><br><span class="line">&apos;uoy evol i&apos;</span><br></pre></td></tr></table></figure><p><strong>字符格式化输出</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; print(&quot;My name is %s&quot;%&apos;shieber&apos;) #老式用法</span><br><span class="line">My name is shieber</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(&quot;My name is &#123;&#125;&quot;.format(&apos;shieber&apos;)) #format格式化输出</span><br><span class="line">My name is shieber</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(&quot;My name is &#123;0&#125;&quot;.format(&apos;shieber&apos;)) #指定位置</span><br><span class="line">My name is shieber</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(&quot;My name is &#123;0&#125; and his name is &#123;1&#125;&quot;.format(&apos;shieber&apos;,&apos;tim&apos;)) #多个位置</span><br><span class="line">My name is shieber and his name is tim</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(&quot;My name is &#123;0&#125; and his name is &#123;0&#125;.&#123;1&#125;&quot;.format(&apos;shieber&apos;,&apos;tim&apos;)) #位置重复出现</span><br><span class="line">My name is shieber and his name is shieber.tim</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(&quot;网站名: &#123;name&#125;, 网址: &#123;url&#125;&quot;.format(name=&quot;Shieber&quot;,url=&quot;www.shieber.cn&quot;)) #指定键名</span><br><span class="line">网站名: Shieber, 网址: www.shieber.cn</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; site = &#123;&quot;name&quot;:&quot;Shieber&quot;,&apos;url&apos;:&quot;www.shieber.cn&quot;&#125;   </span><br><span class="line">&gt;&gt;&gt; print(&quot;网站名: &#123;name&#125;,网址: &#123;url&#125;&quot;.format(**site))  #使用字典</span><br><span class="line">网站名: Shieber, 网址: www.shieber.cn</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; site = [&quot;Shieber&quot;,&quot;www.shieber.cn&quot;] </span><br><span class="line">&gt;&gt;&gt; print(&quot;网站名:&#123;0[0]&#125;,网址:&#123;0[1]&#125;&quot;.format(site)) #使用列表</span><br><span class="line">网站名: Shieber, 网址: www.shieber.cn</span><br><span class="line"></span><br><span class="line">涉及字符输出的还可以用f&apos;&#123;name&#125;&apos;，就是字符串前加一个f或F</span><br><span class="line">&gt;&gt;&gt; site = [&quot;Shieber&quot;,&quot;www.shieber.cn&quot;] </span><br><span class="line">&gt;&gt;&gt; print(f&quot;网站名:&#123;site[0]&#125;,网址:&#123;site[1]&#125;&quot;) #使用列表</span><br><span class="line">网站名: Shieber, 网址: www.shieber.cn</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">&gt;&gt;&gt; print(F&quot;网站名:&#123;site[0]&#125;,网址:&#123;site[1]&#125;&quot;) </span><br><span class="line">网站名: Shieber, 网址: www.shieber.cn</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">&gt;&gt;&gt; string = F&quot;网站名:&#123;site[0]&#125;,网址:&#123;site[1]&#125;&quot;</span><br><span class="line">&gt;&gt;&gt; print(string) </span><br><span class="line">网站名: Shieber, 网址: www.shieber.cn</span><br><span class="line"></span><br><span class="line">数字处理，格式挺多</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:.2f&#125;&quot;.format(3.141592653))</span><br><span class="line">3.14</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:+.2f&#125;&quot;.format(3.141592653))</span><br><span class="line">+3.14</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:.0f&#125;&quot;.format(2.718281823)) #自然数e</span><br><span class="line">3</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:0&gt;2d&#125;&quot;.format(3))) #用0补齐两位</span><br><span class="line">03</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:&gt;2d&#125;&quot;.format(3))) #右对齐两位</span><br><span class="line"> 3</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:a&lt;4d&#125;&quot;.format(3)) #用a补齐四位</span><br><span class="line">3aaa</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:&lt;4d&#125;&quot;.format(3)) #左对齐四位</span><br><span class="line">3</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:^8d&#125;&quot;.format(3)) #中间对齐8位</span><br><span class="line">   3</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:,&#125;&quot;.format(1000000)) </span><br><span class="line">1,000,000</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:.2%&#125;&quot;.format(0.18)) </span><br><span class="line">18%</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:.2e&#125;&quot;.format(1000000000)) #科学计数，两位小数</span><br><span class="line">1.00e+9</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:b&#125;&quot;.format(10)) #二进制 (b)inary</span><br><span class="line">1010</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:o&#125;&quot;.format(10)) #八进制 (o)ctal</span><br><span class="line">12</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:x&#125;&quot;.format(10)) #十六进制 (h)exadecimal</span><br><span class="line">a</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:#x&#125;&quot;.format(10)) #十六进制 加0x前缀</span><br><span class="line">0xa</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:#X&#125;&quot;.format(10)) #十六进制 加0X前缀，大写</span><br><span class="line">0XA</span><br></pre></td></tr></table></figure><p><strong>上下文管理</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">低效率的写法</span><br><span class="line">fobj = open(&apos;xxx.txt&apos;)</span><br><span class="line">try:</span><br><span class="line">data = fobj.read()</span><br><span class="line">finaly:</span><br><span class="line">fobj.close()</span><br><span class="line"></span><br><span class="line">合适的写法</span><br><span class="line">with open(&apos;xxx.txt&apos;) as fobj:</span><br><span class="line">data = fobj.read()  #用with会自动关闭文件，代码量更少</span><br></pre></td></tr></table></figure><p><strong>列表操作</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">lst = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;]</span><br><span class="line">lst.pop()</span><br><span class="line">lst.pop(0)</span><br><span class="line">lst.insert(0,&apos;k&apos;)</span><br><span class="line">lst.append(&apos;g&apos;)</span><br><span class="line">大量的元素移动，效率低</span><br><span class="line"></span><br><span class="line">from collections import deque</span><br><span class="line">lst = deque([&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;])</span><br><span class="line">lst.popleft()</span><br><span class="line">lst.appendleft(&apos;k&apos;)</span><br><span class="line">lst.append(&apos;g&apos;)</span><br><span class="line">用队列处理，两头都可兼顾</span><br></pre></td></tr></table></figure><p><strong>词频统计</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; lst = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;,&apos;a&apos;,&apos;a&apos;,&apos;a&apos;,&apos;c&apos;,&apos;1&apos;,&apos;e&apos;,&apos;d&apos;,&apos;b&apos;]</span><br><span class="line">用自定义函数，代码太多</span><br><span class="line">def counterFre(wdlst):</span><br><span class="line">wfd = &#123;&#125;</span><br><span class="line">for wd in wdlst:</span><br><span class="line">if wd in wfd:</span><br><span class="line">wfd[wd]  += 1</span><br><span class="line">else:</span><br><span class="line">wfd[wd] = 1</span><br><span class="line">return wfd</span><br><span class="line">&gt;&gt;&gt; wfd = counterFre(lst)</span><br><span class="line">&#123;&apos;a&apos;:4,&apos;b&apos;:2,&apos;c&apos;:2,&apos;d&apos;:2,&apos;e&apos;:1,&apos;1&apos;:1&#125;</span><br><span class="line"></span><br><span class="line">而用Counter一步到位</span><br><span class="line">&gt;&gt;&gt; from collections import Counter</span><br><span class="line">&gt;&gt;&gt; wfd = Counter(lst)</span><br><span class="line">&gt;&gt;&gt; wfd </span><br><span class="line">&#123;&apos;a&apos;:4,&apos;b&apos;:2,&apos;c&apos;:2,&apos;d&apos;:2,&apos;e&apos;:1,&apos;1&apos;:1&#125;</span><br></pre></td></tr></table></figure><p><strong>多个赋值</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = 1</span><br><span class="line">&gt;&gt; b = 2</span><br><span class="line">&gt;&gt; c = 3</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; a,b,c = [1,2,3] #解包列表，一步到位</span><br><span class="line">&gt;&gt;&gt; a,b,c = (1,2,3) #解包元组，一步到位</span><br><span class="line">&gt;&gt;&gt; a,b,c = &#123;1,2,3&#125; #解包集合，一步到位</span><br><span class="line">&gt;&gt;&gt; a,b,c = &#123;&apos;a&apos;:1,&apos;b&apos;:2,&apos;c&apos;:3&#125;.values()  #解包集合，一步到位，若不加.values()则会将键解包给a,b,c</span><br></pre></td></tr></table></figure><p><strong>使用*和**构造参数为元组和字典</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def fun1(*args):</span><br><span class="line">for arg in args:</span><br><span class="line">print(&apos;argument: &apos;,arg)</span><br><span class="line">fun1(&apos;i&apos;,&apos;love&apos;,&apos;You&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def fun2(*args, **kwargs):</span><br><span class="line">for k,v in kwargs.items():</span><br><span class="line">print(k,v)</span><br><span class="line">&gt;&gt;&gt; fun2(a=2,b=3,c=5)</span><br><span class="line">a 2</span><br><span class="line">b 3</span><br><span class="line">c 5</span><br></pre></td></tr></table></figure><p><strong>zip打包可迭代元素为元组</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = [1,2,3]</span><br><span class="line">&gt;&gt;&gt; b = [4,5,6]</span><br><span class="line"></span><br><span class="line">tupled = zip(a,b) #返回可迭代对象</span><br><span class="line">&gt;&gt;&gt; list(tupled)</span><br><span class="line">[(1,4),(2,5),(3,6)]</span><br><span class="line"></span><br><span class="line">l = [1,2,3,4,5,6,7,8,9,10]</span><br><span class="line">tupled = zip(l[:-1],l[1:])</span><br><span class="line">&gt;&gt;&gt; list(tupled)</span><br><span class="line">[(1,2),(2,3),(3,4),(4,5),(5,6),(6,7),(7,8),(8,9),(9,10)]</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; name = [&apos;shieber&apos;,&apos;kew&apos;,&apos;koi&apos;]</span><br><span class="line">&gt;&gt;&gt; for e in zip(*name):  </span><br><span class="line">...print(e)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">(&apos;s&apos;,&apos;k&apos;,&apos;k&apos;)</span><br><span class="line">(&apos;h&apos;,&apos;e&apos;,&apos;o&apos;)</span><br><span class="line">(&apos;i&apos;,&apos;w&apos;,&apos;i&apos;)</span><br><span class="line"></span><br><span class="line">#此处zip(*name)将name解包成&apos;shieber&apos;,&apos;kew&apos;,&apos;koi&apos;三个参数，相当于zip(&apos;shieber&apos;,&apos;kew&apos;,&apos;koi&apos;)，  </span><br><span class="line">#每个字符串又是可迭代对象，每个字符就是迭代出来的东西。迭代次数为最短字符串长度。所以是三次，且为字符组合成元组。</span><br></pre></td></tr></table></figure><p><strong>解构赋值</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">a,*mid,b = [1,2,3,4,5]</span><br><span class="line">&gt;&gt;&gt; a</span><br><span class="line">1</span><br><span class="line">&gt;&gt;&gt; b</span><br><span class="line">5</span><br><span class="line">&gt;&gt;&gt; mid </span><br><span class="line">[2,3,4]</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; man = [[&apos;Shieber&apos;,(18,18,180)],[&apos;Kew&apos;,(19,19,190)]]</span><br><span class="line">&gt;&gt;&gt; for name, (f,s,t) in man:</span><br><span class="line">    print(name, f,s,t) </span><br><span class="line">...</span><br><span class="line">&apos;Shieber&apos;, 18, 18, 180   </span><br><span class="line">&apos;Kew&apos;, 19, 19, 190   </span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">其实name, (f,s,t)就是对man内部列表元素的映射，模式一样的，所以解析出来了</span><br><span class="line">为了更好的符合内部列表的模式，还可以加上[]，如下</span><br><span class="line">&gt;&gt;&gt; for [name, (f,s,t)] in man:</span><br><span class="line">    print(name, f,s,t) </span><br><span class="line">...</span><br><span class="line">&apos;Shieber&apos;, 18, 18, 180   </span><br><span class="line">&apos;Kew&apos;, 19, 19, 190   </span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">[name, (f,s,t)]模式和man内部列表模式一样。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">women = &#123; &apos;name&apos;: &apos;yu&apos;, &apos;age&apos;:24,&apos;height&apos;:172 &#125;</span><br><span class="line">for k,v in women.items():</span><br><span class="line">print(k,&apos;--&gt;&apos;,v)</span><br></pre></td></tr></table></figure><p><strong>推导</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">列表推导</span><br><span class="line">even = [i for i in range(1,100) if i % 2 == 0] #1-100内的偶数和奇数</span><br><span class="line">odd  = [i for i in range(1,100) if i % 2 == 1]</span><br><span class="line"></span><br><span class="line">愚蠢写法</span><br><span class="line">even, odd  = [], []</span><br><span class="line">for i in range(1,100):</span><br><span class="line">if i % 2 == 0:</span><br><span class="line">even.append(i)</span><br><span class="line">else:</span><br><span class="line">odd.append(i)</span><br><span class="line"></span><br><span class="line">even = [i for i in range(1,100) if i % 2 == 0] 列表推导 占用很多内存空间</span><br><span class="line">even = (i for i in range(1,100) if i % 2 == 0) 元组推导 只占一个内存空间</span><br><span class="line"></span><br><span class="line">元组推导 </span><br><span class="line">&gt;&gt;&gt;temp = (x**2 for x in range(10) if x % 2 == 0)</span><br><span class="line">&gt;&gt;&gt;tuple(temp)</span><br><span class="line">(0, 4, 16, 36, 64)</span><br><span class="line"></span><br><span class="line">集合推导 </span><br><span class="line">&gt;&gt;&gt;&#123;x**2 for x in range(10) if x % 2 == 0&#125;</span><br><span class="line">&#123;0, 64, 4, 36, 16&#125;</span><br><span class="line"></span><br><span class="line">字典推导 </span><br><span class="line">&gt;&gt;&gt;&#123;&apos;s&apos; + str(x): x**2 for x in range(10) if x % 2 == 0&#125;</span><br><span class="line">&#123;&apos;s0&apos;:0, &apos;s2&apos;:4, &apos;s4&apos;:16, &apos;s6&apos;:36, &apos;s8&apos;: 64&#125;</span><br></pre></td></tr></table></figure><p><strong>三目运算</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = 1</span><br><span class="line">&gt;&gt;&gt; res = &apos;Good&apos; if 1 == a else &apos;Bad&apos;</span><br><span class="line">&gt;&gt;&gt; res</span><br><span class="line">&apos;Good&apos;</span><br><span class="line"></span><br><span class="line">它等于</span><br><span class="line">if 1 == a:</span><br><span class="line">res = &apos;Good&apos;</span><br><span class="line">else:</span><br><span class="line">res = &apos;Bad&apos;</span><br></pre></td></tr></table></figure><p><strong>生成器</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">def fib(max):</span><br><span class="line">#菲波那契数列，列表</span><br><span class="line">n, a, b = 0, 0, 1</span><br><span class="line">fibonacci = []</span><br><span class="line">while n &lt; max:</span><br><span class="line">fibonacci.append(b)</span><br><span class="line">a, b = b, a+b</span><br><span class="line">n += 1</span><br><span class="line"></span><br><span class="line">def fib(max):</span><br><span class="line">#菲波那契数列，生成器</span><br><span class="line">n, a, b = 0, 0, 1</span><br><span class="line">while n &lt; max:</span><br><span class="line">yield b</span><br><span class="line">a, b = b, a+b</span><br><span class="line">n += 1</span><br><span class="line"></span><br><span class="line">当然，还可以对该函数优化，减少一个变量n</span><br><span class="line">def fib(max):</span><br><span class="line">a, b = 0, 1</span><br><span class="line">while 0 &lt; max:</span><br><span class="line">yield b</span><br><span class="line">a, b = b, a+b</span><br><span class="line">max -= 1</span><br><span class="line">&gt;&gt;&gt; t = fib(3)</span><br><span class="line">&gt;&gt;&gt; next(t) #使用next()函数查看下一个</span><br><span class="line">1</span><br><span class="line">&gt;&gt;&gt; next(t) </span><br><span class="line">1</span><br><span class="line">&gt;&gt;&gt; next(t) </span><br><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>逻辑等</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if 0 == a:</span><br><span class="line">do1()</span><br><span class="line">else:</span><br><span class="line">do2()</span><br><span class="line"></span><br><span class="line">不要写成</span><br><span class="line">if a == 0:</span><br><span class="line">do1()</span><br><span class="line">else:</span><br><span class="line">do2()</span><br><span class="line">因为你手抖写成a=0了，do2()总是运行，代码没错，而逻辑错了，写成0=a时立刻会报错</span><br><span class="line">此写法源于c中推荐的写法，当然也有人有不同意见。</span><br></pre></td></tr></table></figure><p><strong>判断元素是否为空</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">a = []</span><br><span class="line">第一种</span><br><span class="line">if a:</span><br><span class="line">    do1()</span><br><span class="line">else:</span><br><span class="line">    do2()</span><br><span class="line"></span><br><span class="line">第二种</span><br><span class="line">if 0 == len(a):</span><br><span class="line">    do2()</span><br><span class="line">else:</span><br><span class="line">    do1()  #注意do1()和do2()顺序不一样</span><br><span class="line"></span><br><span class="line">第三种</span><br><span class="line">if 0 == a.__len__(): #使用魔法函数</span><br><span class="line">    do2()</span><br><span class="line">else:</span><br><span class="line">    do1()</span><br></pre></td></tr></table></figure><p><strong>简单的数学运算和比较</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a = a + 2 </span><br><span class="line">a += 2 #此写法简洁一些</span><br><span class="line"></span><br><span class="line">同理还有</span><br><span class="line">a -= 2 等于 a = a - 2</span><br><span class="line">a *= 2 等于 a = a * 2</span><br><span class="line">a /= 2 等于 a = a / 2</span><br><span class="line">a %= 2 等于 a = a % 2</span><br><span class="line">a &lt;&lt;= 2 等于 a = a &lt;&lt; 2 移位操作，相当于乘以4</span><br><span class="line">a &gt;&gt;= 2 等于 a = a &gt;&gt; 2 移位操作，相当于除以4</span><br><span class="line"></span><br><span class="line">1&lt; a and a &lt; 10 比较(C语言中的写法)</span><br><span class="line">1 &lt; a &lt; 10 此法甚妙</span><br></pre></td></tr></table></figure><p><strong>移位运算符</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">凡是除以和乘以2的倍数的，都用移位运算</span><br><span class="line">b = a / 2 可以写成 a &gt;&gt; 1</span><br><span class="line">b = a / 4 可以写成 a &gt;&gt; 2</span><br><span class="line">b = a / 8 可以写成 a &gt;&gt; 3</span><br><span class="line">b = a * 2 可以写成 a &lt;&lt; 1</span><br><span class="line">b = a * 4 可以写成 a &lt;&lt; 2</span><br><span class="line">b = a * 8 可以写成 a &lt;&lt; 3</span><br><span class="line"></span><br><span class="line">当然，也可保留乘除法，方便理解。但高效代码就须用移位，移位利用 cpu寄存器直接操作。</span><br><span class="line">/和*运算大概要4单位cpu时间(大概2纳秒，各cpu不同)，而&gt;&gt;和&lt;&lt;只要1单位时间(0.5纳秒)，</span><br><span class="line">想想你有1万亿次运算(很多数学运算都超过1万亿次，尤其科研项目跑几个月的)，</span><br><span class="line">那么用/和*会消耗2000秒(33.33分钟)，而移位消耗(8分钟)。看起来不大，</span><br><span class="line">但是如果是科研项目，要跑很多遍那种，那么最后*/写法就会多跑上月的时间，</span><br><span class="line">想想吧，几个月时间，孩子都该出生了。</span><br></pre></td></tr></table></figure><p><strong>lambda函数</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def f(x):</span><br><span class="line">return x**2 + 3</span><br><span class="line">&gt;&gt;&gt; list(map(f, [1,2,3,4,5,6,7,8]))</span><br><span class="line">[1,4,9,16,25,36,49,64]</span><br><span class="line"></span><br><span class="line">正确写法，一行搞定</span><br><span class="line">&gt;&gt;&gt; list(map(lambda x: x**2 + 3, [1,2,3,4,5,6,7,8]))</span><br><span class="line">[1,4,9,16,25,36,49,64]</span><br></pre></td></tr></table></figure><p><strong>filter,map,reduce, apply函数的使用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">filter 过滤掉不符合要求的元素 filter(function, sequence)</span><br><span class="line">&gt;&gt;&gt; L = [1,2,3,4,5,6,7,8]</span><br><span class="line">&gt;&gt;&gt; list(filter(lambda x: x%2==0, L)) #x就指代L中的每一个元素</span><br><span class="line">[2,4,6,8]</span><br><span class="line"></span><br><span class="line">map 对若干个序列进行联合操作  map(function, sequence(s))</span><br><span class="line">&gt;&gt;&gt; L1 = [1,2,3,4,5]</span><br><span class="line">&gt;&gt;&gt; L2 = [2,3,4,5,6]</span><br><span class="line">&gt;&gt;&gt; list(map(lambda x,y: (x+y),L1,L2)) #x来自于L1,y来自于L2 长度不一时，参照最短执行</span><br><span class="line">[3,5,7,9,11]</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; L = [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1] 求L中最长1子串长度，此处最长为1,1,1，长度3</span><br><span class="line">&gt;&gt;&gt; max(map(lambda x: len(x), bytearray(L).split(b&apos;\x00&apos;)))</span><br><span class="line">3</span><br><span class="line"></span><br><span class="line">reduce 对序列进行压缩，归并为一个值 reduce(function, sequence)</span><br><span class="line">&gt;&gt;&gt; from functools import reduce</span><br><span class="line">&gt;&gt;&gt; L = [1,2,3,4,5]</span><br><span class="line">&gt;&gt;&gt; list(reduce(lambda x,y: x+y, L)) #x和y都来自于L，但按照顺序依次取出，类似x = x+y，y再从L取</span><br><span class="line">[15]</span><br><span class="line"></span><br><span class="line">apply是pandas中内置函数，对DataFrame和Series数据进行处理 apply(function, axis)</span><br><span class="line">&gt;&gt;&gt; import numpy as np</span><br><span class="line">&gt;&gt;&gt; import pandas as pd</span><br><span class="line">&gt;&gt;&gt; a = np.random.randint(low=1,high=5,size=(3,3))</span><br><span class="line">&gt;&gt;&gt; data = pd.DataFrame(a)</span><br><span class="line">&gt;&gt;&gt; data.apply(lambda x: x*10)</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">0  1  2</span><br><span class="line">0  40  40 30</span><br><span class="line">1  10  30 20</span><br><span class="line">2  10  40 30</span><br></pre></td></tr></table></figure><p><strong>装饰器</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">装饰器就是对函数封装一次，把非核心函数和处理包装到某个核心函数上，实现业务代码干净</span><br><span class="line">def fun(x):</span><br><span class="line">if not x.isdigit():</span><br><span class="line">print(&quot;Error, invalid number type.&quot;)</span><br><span class="line">        return None</span><br><span class="line">c = (x-1)**2  + (x-2)**2 #离点(1,2)的距离的平方</span><br><span class="line">return c #此函数核心是计算，但是却有判断是否为数字的代码，可拆分</span><br><span class="line"></span><br><span class="line">下面写个装饰器，把判断是否为数字的代码分割出来</span><br><span class="line">def dec(fun):</span><br><span class="line">def decorator(*args, **kwargs):</span><br><span class="line">if not args.isdigit():</span><br><span class="line">print(&quot;Error, invalid number type.&quot;)</span><br><span class="line">            return None</span><br><span class="line">return fun(*args, **kwargs)</span><br><span class="line">return decorator</span><br><span class="line"></span><br><span class="line">@dec</span><br><span class="line">def fun(x):</span><br><span class="line">c = (x-1)**2  + (x-2)**2 </span><br><span class="line">retrun c</span><br><span class="line">这种写法分离了判断函数，fun里面只作一件事，计算并输出。</span><br><span class="line"></span><br><span class="line">                                               @dec</span><br><span class="line">def fun(x):                                    def fun(x):</span><br><span class="line">if not x.isdigit():                            c = (x-1)**2  + (x-2)**2</span><br><span class="line">print(&quot;Error, invalid number type.&quot;)       return c</span><br><span class="line">        return None                              </span><br><span class="line">c = (x-1)**2  + (x-2)**2                       </span><br><span class="line">return c</span><br><span class="line">左边原函数                                     右边修饰函数，功能一样</span><br></pre></td></tr></table></figure><p><strong>函数返回多个值</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def fun(x):</span><br><span class="line">a = x**2</span><br><span class="line">b = a + x**3</span><br><span class="line">c = b + x**4</span><br><span class="line">return a, b, c</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; a,b,c = fun(10)</span><br><span class="line">&gt;&gt;&gt; a,b,c</span><br><span class="line">(100,1100,11100)</span><br></pre></td></tr></table></figure><p><strong>求和 最大 最小 乘积和</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">L = [1,2,3,4,5]</span><br><span class="line">&gt;&gt;&gt; sum(L)</span><br><span class="line">15</span><br><span class="line">&gt;&gt;&gt; min(L)</span><br><span class="line">1</span><br><span class="line">&gt;&gt;&gt; max(L)</span><br><span class="line">5</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; from operator import mul</span><br><span class="line">&gt;&gt;&gt; from functools import reduce</span><br><span class="line">&gt;&gt;&gt; reduce(mul, L)</span><br><span class="line">120 #5的阶乘</span><br><span class="line"></span><br><span class="line">或者不用mul，而用lambda</span><br><span class="line">&gt;&gt;&gt; reduce(lambda x, y: x*y, L)</span><br><span class="line">120</span><br></pre></td></tr></table></figure><p><strong>找出列表中最多的元素</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num = [1,2,3,2,1,2,3,4,5,6,2,1,1,100,1,2,1,3,1]</span><br><span class="line">&gt;&gt;&gt; print(max(set(num), key=num.count)) 按频率找最大</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>减少使用None</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">a = &apos;&apos;</span><br><span class="line">if a is None:</span><br><span class="line">do1()</span><br><span class="line">else:</span><br><span class="line">do2()</span><br><span class="line"></span><br><span class="line">if a == None:</span><br><span class="line">do1()</span><br><span class="line">else:</span><br><span class="line">do2()</span><br><span class="line"></span><br><span class="line">python中凡是没有值或者0都是False</span><br><span class="line">if !a: </span><br><span class="line">do1()</span><br><span class="line">else:</span><br><span class="line">do2()</span><br></pre></td></tr></table></figure><p><strong>字典默认值</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;&apos;a&apos;:2,&apos;b&apos;10,&apos;c&apos;:3&#125;</span><br><span class="line">&gt;&gt;&gt; d.get(&apos;a&apos;)  </span><br><span class="line">2</span><br><span class="line">&gt;&gt;&gt; d.get(&apos;e&apos;,1) 此处默认值为1，若d中无&apos;e&apos;，则输出默认值</span><br><span class="line">1</span><br><span class="line">&gt;&gt;&gt; d.setdefault(&apos;e&apos;,2) 此处默认值设置为2，若d中无&apos;e&apos;，则设置&apos;e&apos;:2</span><br><span class="line">2</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/23/lpZk36.md.png&quot; alt=&quot;pythonic&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程语言" scheme="http://www.shieber.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Python" scheme="http://www.shieber.cn/tags/Python/"/>
    
  </entry>
  
</feed>
