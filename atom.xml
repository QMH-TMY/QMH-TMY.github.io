<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shieber</title>
  
  <subtitle>友朋自远方来，不亦乐乎?</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.shieber.cn/"/>
  <updated>2019-12-31T15:08:49.048Z</updated>
  <id>http://www.shieber.cn/</id>
  
  <author>
    <name>Shieber</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019个人年度报告</title>
    <link href="http://www.shieber.cn/title/9d08ff81/"/>
    <id>http://www.shieber.cn/title/9d08ff81/</id>
    <published>2019-12-31T14:30:05.000Z</published>
    <updated>2019-12-31T15:08:49.048Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/06/QJY6W8.md.png" alt="2019report"></p><a id="more"></a><h2 id="年度日历"><a href="#年度日历" class="headerlink" title="年度日历"></a>年度日历</h2><p><strong>02.02</strong><br>  参加学校团年宴，抽奖中了一个小米耳机，学校发了300元奖励及新年大礼包，感觉学校对学生还算好吧。当时获奖感言我说的是：学校知道对学生好，那么我们学生也知道什么时候该对学校好，这是一个良性互动，感谢学习的领导亲自来看学生。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKnIvq.md.png" alt="nyear"> </p><p><strong>02.28</strong><br>  帮徐俊下载LED方面论文。<br><strong>03.30</strong><br>  老杜邀请逛公园，巧遇原学生会干部(丁肇鹏)和专业老学姐(胡冰花)。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKKekF.png" alt="duwan"></p><p><strong>04.21</strong><br>  食堂饭太难吃了，数千字长文给学校食堂反馈意见。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKKKp9.md.png" alt="canteen"></p><p><strong>04.23</strong><br>  同冠军通话2h28m，聊了什么，忘了，不过确实说了好久，毕业了就各奔前程了，能聚在一起的机会就少了。<br><strong>05.08</strong><br>  参加RISC-V路演成都宣讲会，了解物联网领域RISC-V架构芯片发展情况。在美国科技封锁情况下，RISC-V可能是未来中国自主芯片设计研发的原型，未来整个产业可能是数万亿人民币的市场。现在刚起步，国内专家和政府部门正大力推动。</p><p>  <img src="https://s2.ax1x.com/2019/12/29/lK3VJS.md.png" alt="risc-v"></p><p><strong>05.11</strong><br>  买点儿中药，自己熬，调节身体。这药吃了饿得快，刚吃早饭，9点半肚子就开始叫了。   </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKMUET.md.png" alt="medicine"></p><p><strong>06.05</strong><br>  白锦瑞及其母亲到成都，请我吃法。<br><strong>06.21</strong><br>  作主题演讲：大数据时代技术演讲及未来社会发展。我大概讲的内容：关于操作系统，在美国科技封锁的情况下，国内开始了自主造操作系统的热潮。华为的鸿蒙是物联网操作系统，被逼转换为移动加物联网系统。6G是去年两会就提出了，目前5G在布局，但6G肯定开始研发了。我认为新语言主要应对物联网，对硬件操作的封装不能使用传统的语言，估计会有新语言发明出来。摩尔定律到头，CPU无法再快了，只有新的技术原理才能解决，我认为量子计算是一个方向，但目前不看好。一亿人口城市群这个概念应该是由我最先提出的，看下图中地球上亮的地方，就是一个个城市聚合体，目前长三角(上海，南京，杭州，苏州)等市慢慢地已经构成地球上最大的城市群，所以一亿人口不是不可能(五千万是最可能的)，中国的城市化必然铸造几个超级大城市。上亿人口围绕若干城市集成群，实行政策互通，交通医疗同步，开展工商业，发展教育医疗文娱产业，逐步提升中国的城镇率。</p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKMd5F.md.png" alt="6g"></p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKMhPe.md.png" alt="100m"></p><p><strong>07.10</strong><br>  北京市内游玩(北大，国图，天安门，天坛)。北京，还算好吧，交通太挤，地铁晚高峰我差点没下来，本来打算下去，结果给外面的人给挤回去了。北京大学校内环境超级好，简直就是动物园，地上有鸟，鸭子，水里有鱼，好大学确实不一样。     </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKMIxA.md.png" alt="beijing1"></p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKQ9rq.md.png" alt="beijing2"></p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKQiZV.md.png" alt="beijing3"></p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKQNQA.md.png" alt="beijing4"></p><p><strong>07.11</strong><br>  参观天津中电集团和海河。<br><strong>07.19</strong><br>  帮马文杰调试Python代码。<br><strong>09.01</strong><br>  强仔过来专门请吃法，下午陪同何英强和方齐圣游览电科，许久不见，甚是想念。<br><strong>09.17</strong><br>  参加中航工业在学校的招聘宣讲会，看表演。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lK1W5T.md.png" alt="zh"></p><p><strong>09.21</strong><br>  受邀前往雅安夹金山干部学院参加活动发言并前往红军村参观学习。当年毛和朱长征翻越的第一座大雪山就在此，感觉环境确实艰苦，全是高山，交通不便。</p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKQaLt.md.png" alt="jiajingshan"></p><p><strong>09.26</strong><br>  学校设立新部门，5位院士和一位将军兼院士出席，可能一辈子也不太可能遇到这么多院士了。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKQIFU.md.png" alt="new"></p><p><strong>09.29</strong><br>  学校校庆晚会，也庆祝共和国70周年。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKQbl9.md.png" alt="anniversary"></p><p><strong>10.01</strong><br>  国庆节，学校大装扮，感觉像过年。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKlek8.md.png" alt="nationalday"></p><p><strong>10.27</strong><br>  自己学着拆卸，给电脑除尘。风扇太脏，找师傅要30块，还不如自己来。拆很容易，但装回去就可能出错，要保管好螺丝及其顺序。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKQzFO.md.png" alt="pc"></p><p><strong>12.06</strong><br>  参与Science杂志年度科学事件评选，我选择了黑洞首次发现的那张图片，这应该是本年度最具代表性的科技话题了吧。因为一张黑洞图片，视觉中国还被有关部门约谈了。  </p><p>  <img src="https://s2.ax1x.com/2019/12/29/lK1ZuR.md.jpg" alt="darkhole"></p><p><strong>12.23</strong><br>  参加华为黑客马拉松大赛，争取正月里到深圳决赛。</p><p>  <img src="https://s2.ax1x.com/2019/12/29/lKJKLd.md.jpg" alt="huawei"></p><h2 id="年度感受"><a href="#年度感受" class="headerlink" title="年度感受"></a>年度感受</h2><p>又是一年年终，时间好快呀！翻看<a href="http://www.shieber.cn/title/4aea7fd9/">2018年终总结</a>，感觉时间就像飞一样地快。客观地说，人会随着自身年龄的增长而觉时间的飞逝。小时候的一年很长，现在的一年尤其地短，未来估计会感觉到更短。以前读到光阴似箭，日月如梭这句话毫无感觉，现在想想古人诚不欺负我。这一年，我不算努力，但也并未过于偷懒。学到些东西，看了些东西，总的来说，有所成长吧！</p><p>这一年更加感觉说话要小心注意，人小的时候，就是相互咒骂都没关系，年龄一大，人就更难交流了，说重了伤人，说轻了没意，我想最好还是不说，闭嘴。还是那个感觉：默默做事容易，说话做人难呐！这个时代，真话是入不得耳的，大部分人听不进去真话，实际上他们除了捧场话之外全听不进去。书本上教学生老实做人，不讲谎话，然而，我发现人不讲点谎话根本不可能。唯一能做到的是：不主动讲谎话，若是被人引起，说两句也没关系。当下，讲废话和捧场话最令人喜欢，讲实话真话最招人反感。</p><p>大部分人在其生命历程中总是需要围着什么东西转的(工作，家长，老师，老板，领导…)，他们是受到支配的一群人，所以最好的方式就是去领导他们而不是讲道理给他们听。因为他们的境界低，不会主动总结吸收，所以讲了真话给其听，他们反而听不懂，也不乐意。遇到这些不愿听真话的人，无聊的人，境界低的人，与之谈话最好的回应方式就是”哦，嗯”之类的词语，再不能多了！</p><h2 id="2020年度愿景"><a href="#2020年度愿景" class="headerlink" title="2020年度愿景"></a>2020年度愿景</h2><p>不立flag，就写几个小愿望吧。</p><p>1.学会摄影技术，有钱就购买专业点的相机。<br>平时研究网站，PS和前端技术，发现图片不够漂亮。然而网上找到的图片，不是分辨率不行，就是有版权，视觉中国闹的版权问题怕是以后还会有。细细想来，不如自己拍，自己PS，搞设计怎么能不学拍照呢？先买个便宜的学习，然后再买高档的相机。</p><p>2.学习视频制作，有了创意也可以用视频表现出来。<br>视频不论给别人看还是自己作记录或纪念都是很好的，前段时间我提出了构建个人数据中心的概念，其中就强调视频的重要性，所以这个必学。或许，未来社会，作视频就和今天的会PPT一样，成为一种社会基本技能。</p><p>3.争取到南京和杭州去玩一趟。<br>北上广深已经集齐，杭州，南京，武汉，厦门，青岛等等也得去看看，这个国家太大，要多走走。俗话说，读万卷书，行万里路。书我读了上百本了，要是一页算一卷的话，怎么着也有数万卷了，但路走得还不够。年轻时就多利用学校的资源出去看看，毕竟又不掏钱，何乐而不为呢？</p><h2 id="年度音乐"><a href="#年度音乐" class="headerlink" title="年度音乐"></a>年度音乐</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=497463404&auto=1&height=66"></iframe><p><strong>2019年度音乐10首</strong> <a href="http://music.163.com/#/m/playlist?id=3097742844" target="_blank" rel="noopener">网易云歌单</a></p><table><thead><tr><th align="left">曲目</th><th align="left">歌手</th></tr></thead><tbody><tr><td align="left">芒种</td><td align="left">赵方靖</td></tr><tr><td align="left">FlY-飞</td><td align="left">ANU</td></tr><tr><td align="left">左手指月</td><td align="left">萨顶顶</td></tr><tr><td align="left">莫守成规</td><td align="left">王爽冰</td></tr><tr><td align="left">Grace(惊鸿)</td><td align="left">Jannik</td></tr><tr><td align="left">我和我的祖国</td><td align="left">王菲</td></tr><tr><td align="left">大田後生仔(女生版)</td><td align="left">王玉萌</td></tr><tr><td align="left">浙江(Original Mix)</td><td align="left">Keridy</td></tr><tr><td align="left">China</td><td align="left">习谱予</td></tr><tr><td align="left">May the 4th</td><td align="left">Bee Hunter</td></tr></tbody></table><h2 id="年度观影"><a href="#年度观影" class="headerlink" title="年度观影   "></a>年度观影   </h2><table><thead><tr><th align="center">序号</th><th align="left">名称</th><th align="center">序号</th><th align="left">名称</th></tr></thead><tbody><tr><td align="center">0</td><td align="left">《刮痧》</td><td align="center">15</td><td align="left">《哪吒之魔童降世》</td></tr><tr><td align="center">1</td><td align="left">《战狼》</td><td align="center">16</td><td align="left">《潜伏》</td></tr><tr><td align="center">2</td><td align="left">《鬼干部》</td><td align="center">17</td><td align="left">《庆余年》</td></tr><tr><td align="center">3</td><td align="left">《驴得水》</td><td align="center">18</td><td align="left">《鹿鼎记》</td></tr><tr><td align="center">4</td><td align="left">《美丽人生》</td><td align="center">19</td><td align="left">《盗墓笔记》</td></tr><tr><td align="center">5</td><td align="left">《流浪地球》</td><td align="center">20</td><td align="left">《飞虎神鹰》</td></tr><tr><td align="center">6</td><td align="left">《美丽心理》</td><td align="center">21</td><td align="left">《津门飞鹰》</td></tr><tr><td align="center">7</td><td align="left">《中国机长》</td><td align="center">22</td><td align="left">《猎鹰1949》</td></tr><tr><td align="center">8</td><td align="left">《摩登时代》</td><td align="center">23</td><td align="left">《孤岛飞鹰》</td></tr><tr><td align="center">9</td><td align="left">《勇敢的心》</td><td align="center">24</td><td align="left">《三国演义》</td></tr><tr><td align="center">10</td><td align="left">《美国往事》</td><td align="center">25</td><td align="left">《官场现形记》</td></tr><tr><td align="center">11</td><td align="left">《007幽灵党》</td><td align="center">26</td><td align="left">《人民的名义》</td></tr><tr><td align="center">12</td><td align="left">《西红市首富》</td><td align="center">27</td><td align="left">《大明王朝1566》</td></tr><tr><td align="center">13</td><td align="left">《天气之子》</td><td align="center">28</td><td align="left">《大秦帝国之裂变》</td></tr><tr><td align="center">14</td><td align="left">《辛德勒的名单》</td><td align="center">29</td><td align="left">《大秦帝国之纵横》</td></tr></tbody></table><h2 id="年度视频"><a href="#年度视频" class="headerlink" title="年度视频"></a>年度视频</h2><p>展现中国山水文化，一个法国人让我认识到了自己祖国的伟大。</p><iframe src="https://player.bilibili.com/player.html?aid=73222505&cid=125239420" width="270" height="300" frameborder="no" framespacing="0" allowfullscreen="true"></iframe><h2 id="年度图片"><a href="#年度图片" class="headerlink" title="年度图片"></a>年度图片</h2><p><img src="https://s2.ax1x.com/2019/12/06/QJYbSU.md.png" alt="best"></p><h2 id="年度书籍"><a href="#年度书籍" class="headerlink" title="年度书籍"></a>年度书籍</h2><p>《少年维特的烦恼.亲和力》–歌德</p><p>大哲学家，大文豪歌德的作品，学到很多做人的道理，对爱情的理解又上了一个台阶。拿破仑读过，黑格尔，尼采等都读过这书。感觉歌德的文字很有特点，讲道理很明白，都是大智慧。亲和力一书中对化学作用力和人情作用力的对照，写出了人间的种种道理，批判了世人的愚昧，今天一样不过时，我反而觉得这书就像在写今天的世界。这本书，经历不够的人读不懂，或者读起来觉得不好。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvX8uF.jpg" alt="weite"></p><p><strong>阅读书籍136本</strong>   </p><table><thead><tr><th align="left">书名</th><th align="left">作者</th></tr></thead><tbody><tr><td align="left">《三体》</td><td align="left">刘慈欣</td></tr><tr><td align="left">《钱商》</td><td align="left">阿瑟・黑利 (李克强荐)</td></tr><tr><td align="left">《道德经》</td><td align="left">老子</td></tr><tr><td align="left">《商君书》</td><td align="left">商鞅</td></tr><tr><td align="left">《潜规则》</td><td align="left">吴思</td></tr><tr><td align="left">《性之变》</td><td align="left">潘绥铭</td></tr><tr><td align="left">《金瓶梅》</td><td align="left">王汝梅</td></tr><tr><td align="left">《梦的解析》</td><td align="left">弗洛伊德</td></tr><tr><td align="left">《谈谈方法》</td><td align="left">勒内・笛卡尔</td></tr><tr><td align="left">《娱乐至死》</td><td align="left">尼尔・波兹曼</td></tr><tr><td align="left">《百年孤独》136</td><td align="left">加西亚・马尔克斯</td></tr><tr><td align="left">《汪曾祺谈吃》</td><td align="left">汪曾祺</td></tr><tr><td align="left">《人生的智慧》</td><td align="left">阿瑟・叔本华</td></tr><tr><td align="left">《人性的弱点》</td><td align="left">戴尔・卡耐基</td></tr><tr><td align="left">《社会契约论》</td><td align="left">让・雅克・卢梭</td></tr><tr><td align="left">《贫穷的本质》</td><td align="left">班纳吉(2019诺贝尔经济学奖)</td></tr><tr><td align="left">《相对论的意义》1</td><td align="left">爱因斯坦</td></tr><tr><td align="left">《天堂蒜薹之歌》</td><td align="left">莫言(2012诺贝尔文学奖)</td></tr><tr><td align="left">《痛苦的中国人》</td><td align="left">汉德克(2019诺贝尔文学奖)</td></tr><tr><td align="left">《女生呵护指南》</td><td align="left">六层楼</td></tr><tr><td align="left">《布雷顿森林货币战》</td><td align="left">本・斯泰尔</td></tr><tr><td align="left">《历史决定论的贫困》</td><td align="left">卡尔・波普尔</td></tr><tr><td align="left">《特朗普成功创业101》</td><td align="left">迈克尔・戈登</td></tr><tr><td align="left">《写给女人的幸福箴言》</td><td align="left">戴尔・卡耐基</td></tr><tr><td align="left">《少年维特的烦恼.亲和力》</td><td align="left">歌德</td></tr><tr><td align="left">略…</td><td align="left">略…</td></tr><tr><td align="left">《论人类不平等的起源和基础》</td><td align="left">让・雅克・卢梭</td></tr></tbody></table><h2 id="年度厨艺-学会菜品"><a href="#年度厨艺-学会菜品" class="headerlink" title="年度厨艺(学会菜品)"></a>年度厨艺(学会菜品)</h2><table><thead><tr><th align="left">菜名</th><th align="left">译名</th></tr></thead><tbody><tr><td align="left">麻婆豆腐</td><td align="left">Mapo Tofu</td></tr><tr><td align="left">小炒木耳</td><td align="left">Fried Fungus</td></tr><tr><td align="left">家常豆腐</td><td align="left">Homestyle Tofu</td></tr><tr><td align="left">溜炒腰花</td><td align="left">Stir-fried Pig Kidneys</td></tr><tr><td align="left">椒香花鲢</td><td align="left">Bighead carp with Szechuan Pepper</td></tr><tr><td align="left">酸菜豆腐鱼</td><td align="left">Fish with Szechuan Sauerkraut and Tofu</td></tr></tbody></table><h2 id="年度消费"><a href="#年度消费" class="headerlink" title="年度消费"></a>年度消费</h2><p><strong>支付宝全年消费</strong></p><p><img src="https://s2.ax1x.com/2019/12/30/lQrjW4.md.png" alt="alipay"></p><p><strong>微信全年消费</strong></p><p><img src="https://s2.ax1x.com/2019/12/30/lQsiTK.md.png" alt="wechat"></p><p><strong>京东全年消费</strong></p><p><img src="https://s2.ax1x.com/2019/12/30/lQskFO.md.png" alt="jdpay"></p><p><strong>三家合计消费</strong></p><p><img src="https://s2.ax1x.com/2019/12/30/lQsEfe.md.png" alt="total"></p><h2 id="年度技能树"><a href="#年度技能树" class="headerlink" title="年度技能树"></a>年度技能树</h2><p><img src="https://s2.ax1x.com/2019/12/06/QJJKEt.png" alt="skills">  </p><h2 id="工作时间统计"><a href="#工作时间统计" class="headerlink" title="工作时间统计"></a>工作时间统计</h2><table><thead><tr><th align="left">条目</th><th align="left">内容</th></tr></thead><tbody><tr><td align="left">全年工时</td><td align="left">4244.95h(h/小时,m/分钟)</td></tr><tr><td align="left">一季度</td><td align="left">974.3h (10h49m/每天)</td></tr><tr><td align="left">二季度</td><td align="left">917.7h (10h5m/每天)</td></tr><tr><td align="left">三季度</td><td align="left">1064.95h (11h34m/每天)</td></tr><tr><td align="left">四季度</td><td align="left">1288.0h (14h0m/每天)</td></tr></tbody></table><p><img src="https://s2.ax1x.com/2019/12/31/l3zFBQ.md.png" alt="time"></p><h2 id="其他统计数据"><a href="#其他统计数据" class="headerlink" title="其他统计数据"></a>其他统计数据</h2><table><thead><tr><th align="left">条目</th><th align="left">内容</th></tr></thead><tbody><tr><td align="left">生病次数</td><td align="left">1 (冠周炎)</td></tr><tr><td align="left">通宵次数</td><td align="left">6</td></tr><tr><td align="left">熬夜次数</td><td align="left">31</td></tr><tr><td align="left">新加好友</td><td align="left">28 (女:5，男:23)</td></tr><tr><td align="left">自由指数</td><td align="left">9.5</td></tr><tr><td align="left">健康指数</td><td align="left">8.5</td></tr><tr><td align="left">性福指数</td><td align="left">0.0</td></tr><tr><td align="left">幸福指数</td><td align="left">8.5</td></tr><tr><td align="left">休息天数</td><td align="left">13</td></tr><tr><td align="left">全年晴天</td><td align="left">138.5天</td></tr><tr><td align="left">全年阴天</td><td align="left">194.0天</td></tr><tr><td align="left">全年雨天</td><td align="left">32.5天</td></tr><tr><td align="left">阴晴雨比</td><td align="left">6.0:4.3:1.0</td></tr><tr><td align="left">天气统计</td><td align="left">地点：清水河</td></tr><tr><td align="left">天气统计</td><td align="left">时段：1.1~12.31</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/06/QJY6W8.md.png&quot; alt=&quot;2019report&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="年度报告" scheme="http://www.shieber.cn/categories/%E5%B9%B4%E5%BA%A6%E6%8A%A5%E5%91%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>2019年度新闻</title>
    <link href="http://www.shieber.cn/title/c739c660/"/>
    <id>http://www.shieber.cn/title/c739c660/</id>
    <published>2019-12-31T13:52:38.000Z</published>
    <updated>2020-01-03T03:21:39.710Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/31/l3IZMq.md.png" alt="2019"></p><a id="more"></a><h2 id="年度关键字词"><a href="#年度关键字词" class="headerlink" title="年度关键字词"></a>年度关键字词</h2><p>(0) 猪<br>(1) 难<br>(2) 稳<br>(3) 贸易摩擦<br>(4) 我和我的祖国  </p><h2 id="十大新词语"><a href="#十大新词语" class="headerlink" title="十大新词语"></a>十大新词语</h2><p>(0) 6G<br>(1) 996<br>(2) 5G元年<br>(3) 夸夸群<br>(4) 灵魂砍价<br>(5) 止暴治乱<br>(6) 极限施压<br>(7) 基层减负年<br>(8) 冰墩墩/雪容融<br>(9) 乡字号/土字号  </p><h2 id="十大年度流行语"><a href="#十大年度流行语" class="headerlink" title="十大年度流行语"></a>十大年度流行语</h2><p>(0) 硬核<br>(1) 我太南了<br>(2) 垃圾分类<br>(3) 学习强国<br>(4) 金色十年<br>(5) 先行示范区<br>(6) 最美奋斗者<br>(7) 基层减负年<br>(8) 中美贸易磋商<br>(9) 我和我的祖国  </p><h2 id="十大年度网络流行语"><a href="#十大年度网络流行语" class="headerlink" title="十大年度网络流行语"></a>十大年度网络流行语</h2><p>(0) 996<br>(1) 硬核<br>(2) 柠檬精<br>(3) 断舍离<br>(4) 不忘初心<br>(5) 是个狼人<br>(6) 鱼女无瓜<br>(7) 14亿护旗手<br>(8) 道路千万条，安全第一条<br>(9) 我不要你觉得，我要我觉得</p><h2 id="年度新闻"><a href="#年度新闻" class="headerlink" title="年度新闻"></a>年度新闻</h2><p><strong>2019.01.01</strong><br>    (1) 中美建交40周年。<br>    (2) 元旦节，世界各地花样迎新年。<br><strong>2019.01.02</strong><br>    (1) 《告台湾同胞书》发表四十周年纪念会在人民大会堂举行，习发表讲话。<br><strong>2019.01.03</strong><br>    (1) 22:22分，玉兔二号着陆月球背面并发回首张照片。<br><strong>2019.01.05</strong><br>    (1) TIOBE显示，Python时隔八年再度成为年度编程语言。<br><strong>2019.01.06</strong><br>    (1) Linus通过邮件宣布，Linux内核开发进入5.0阶段。<br><strong>2019.01.08</strong><br>    (1) 国家科学技术奖励大会在京召开，最高奖励调整为800万元。<br><strong>2019.01.15</strong><br>    (1) 中国嫦娥四号发回照片，显示在月球上的播种已生根发芽。<br>    (2) 发现DNA双螺旋结构的沃森由于发表种族歧视言论被冷泉港实验室取消一切荣誉头衔。<br><strong>2019.01.17</strong><br>    (1) 华为面临外部困境，任正非罕见回应外界质疑，阐述华为理念。<br><strong>2019.01.18</strong><br>    (1) 《啥是佩琪》霸屏网络。<br>    (2) 十余款违法应用披露：消消乐涉恶意扣费，QQ音乐，网易新闻等过度搜集用户隐私。<br><strong>2019.01.20</strong><br>    (1) 拼多多后台现重大Bug，被薅羊毛上千万。<br><strong>2019.01.21</strong><br>    (1) 国家统计局公布2018年GDP：90.0309万亿元，增速为6.6%。<br>    (2) 基因编辑婴儿事件当事人贺建奎被解除劳动合同，终止一切教学科研活动。<br>    (3) 国家统计局公布人口数据：2018年末全国人口13.9538亿，全年新增530万人。<br><strong>2019.01.22</strong><br>    (1) 马云入选全球“十大思想者”，外媒称其改变了社会。<br>    (2) 加拿大《环球邮报》报道，美国准备正式引渡孟晚舟到美国受审。<br><strong>2019.01.23</strong><br>    (1) 《百度搜索引擎已死》一文揭露百度搜索将用户导向自家百家号内容。<br><strong>2019.01.24</strong><br>    (1) 华为公布5G基站核心芯片，5G时代基本开启。<br><strong>2019.02.05</strong><br>    (1) 农历己亥猪年正月初一，各地喜迎新年。<br><strong>2019.02.07</strong><br>    (1) 国产科幻电影《流浪地球》热映，中国科幻展现东方人的别样宇宙观。<br><strong>2019.02.12</strong><br>    (1) 北大，北电发声：调查翟天临学术造假。<br><strong>2019.02.18</strong><br>    (1) 上海虹桥火车站启动5G网络。<br><strong>2019.03.04</strong><br>    (1) 全国两会如期召开。<br><strong>2019.03.07</strong><br>    (1) 华为起诉美国政府禁购令违反美国宪法。<br><strong>2019.03.10</strong><br>    (1) 埃塞俄比亚航空公司波音737客机坠毁，157人全部遇难，含8名中国人。<br><strong>2019.03.13</strong><br>    (1) 腾讯QQ正式推出注销功能。<br><strong>2019.03.15</strong><br>    (1) 3.15晚会曝光各种黑心厂和公司，各地工商加紧查办。<br><strong>2019.03.21</strong><br>    (1) 韩国”胜利门”性丑闻震动青瓦台，检方彻查。<br>    (2) 日本公布2020奥运会火炬样品，使用的铝材来自2011年311大地震废弃物。<br><strong>2019.03.25</strong><br>    (1) 剑桥大学承认中国高考成绩，全省前0.1%的人方有资格报名。<br><strong>2019.03.26</strong><br>    (1) 华为发布新产品P30系列，拍照功能比肩专业摄像机。<br><strong>2019.03.31</strong><br>    (1) 教育部批准35所高校本科开设AI专业。<br><strong>2019.04.01</strong><br>    (1) 10点41分，日本官房长官菅义伟公布新年号：令和。<br><strong>2019.04.02</strong><br>    (1) 四川凉山地区因雷击木引发山火，30名消防人员因抢险死亡。<br><strong>2019.04.08</strong><br>    (1) 996工作制，加班要命，引发广泛热议。<br><strong>2019.04.10</strong><br>    (1) 首张黑洞照片公布，引发全球热议。<br><strong>2019.04.11</strong><br>    (1) 维基解密创始人阿桑奇被英国警方从厄瓜多尔驻伦敦大使馆逮捕。<br><strong>2019.04.12</strong><br>    (1) 视觉中国给黑洞，国旗等图片加上版权，被有关部门约谈。<br><strong>2019.04.13</strong><br>    (1) 某女硕士购买奔驰车却被4S店欺负，投诉无门，车盖上哭诉。<br><strong>2019.04.15</strong><br>    (1) 巴黎圣母院发生火灾，塔尖被烧毁，部分珍贵文物遭到损毁。<br><strong>2019.04.16</strong><br>    (1) 大数据：2018年中国人均阅读量4.67，深苏京沪等城市排在前列。<br><strong>2019.04.17</strong><br>    (1) 亚马逊决定部分电商业务退出中国，干不过阿里，京东，拼夕夕。<br><strong>2019.04.19</strong><br>    (1) 国家图书馆保存2000亿条微博，网友调侃：后人不懂我的梗咋办？<br><strong>2019.04.23</strong><br>    (1) 海军成立70周年，在青岛附近海域举行海上阅兵，习出席。<br><strong>2019.04.30</strong><br>    (1) 日本明仁天皇参加”退位礼正殿之仪”正式退位，平成时代结束，令和到来。<br><strong>2019.05.04</strong><br>    (1) 伟大的”五四运动”100周年纪念日。<br><strong>2019.05.06</strong><br>    (1) 俄罗斯一飞机发生故障，导致41人死亡。<br>    (2) 美总统特朗普发推威胁给中国商品加税，国内股指大跌6%。<br><strong>2019.05.11</strong><br>    (1) 女子网购18件衣服，五一节试穿后却要求全退，遭到网友人肉搜索。<br><strong>2019.05.13</strong><br>    (1) 广东查处32名高考移民，已取消报名资格。<br><strong>2019.05.15</strong><br>    (1) 华为及国内部分高校被美国列入商务部工业和安全局的实体名单。<br><strong>2019.05.20</strong><br>    (1) 比尔.盖茨通过公众号继续分享其夏季书单。<br><strong>2019.05.21</strong><br>    (1) 国内三大航空公司就波音737MAX长时间停飞及订单无法按期交付提出赔偿。<br>    (2) 华为创始人任正非再次接受央视专访，回应美国封杀并谈及基础教育对民族的重要性。<br><strong>2019.05.23</strong><br>    (1) 中国时速600千米高速磁悬浮实验样车在青岛下线。<br><strong>2019.05.24</strong><br>    (1) 夸克理论提出者默里·盖尔曼去世，享年89岁。<br>    (2) 英国首相特蕾莎·梅宣布辞职，一度哽咽：“我已尽力”。<br>    (3) Nature：全球禁止氟利昂多年后，中国东部仍在大量排放，尤其是山东和河北。<br>    (4) 国家卫健委发布《卫生健康事业发展统计报告》显示：中国人均寿命达77岁。<br><strong>2019.05.25</strong><br>    (1) 四川卧龙熊猫保护基地发现首例纯白色野生大熊猫。<br>    (2) 世卫组织(WHO)将中医疗法纳入其新版《国际疾病分类》。<br>    (3) 第一财经“城市魅力排行榜”发布，成都杭州等城市成为新一线城市。<br><strong>2019.05.29</strong><br>    (1) IEEE禁止华为专家参与期刊审稿。<br>    (2) 爱因斯坦广义相对论被证实100周年纪念日。<br><strong>2019.06.01</strong><br>    (1) 国务院办公室发布《关于中美经贸磋商的中方立场》。<br><strong>2019.06.06</strong><br>    (1) 工信部给四家通信运营商(移动，联通，电信，广电）发布5G牌照。<br><strong>2019.06.07</strong><br>    (1) 2019年全国高考今拉开帷幕。<br><strong>2019.06.17</strong><br>    (1) 宜宾长宁发生里氏6.0级地震，预警系统实现提前61秒向成都预警。<br><strong>2019.06.20</strong><br>    (1) 习访问朝鲜，时隔14周年后再次有中方领导人访朝。<br><strong>2019.06.24</strong><br>    (1) 点读机女孩高君雨成绩568分，超广东一本线163分。<br><strong>2019.06.25</strong><br>    (1) 章莹颖被杀害案宣判：被告谋杀罪成立。<br><strong>2019.06.27</strong><br>    (1) 美国2城市禁用面部识别软件。<br>    (2) 贵州茅台股票破千，27年来A股再次进入千元股时代。<br><strong>2019.06.29</strong><br>    (1) 腾讯成立开源管理办公室。<br>    (2) 中国航天按部就班，确定于2022年建立大型太空站。<br><strong>2019.06.30</strong><br>    (1) 化学元素周期表诞生150周年纪念日，周期表内元素仍未圆满。<br><strong>2019.07.03</strong><br>    (1) 百度老板李彦宏遭某男子泼水。<br><strong>2019.07.12</strong><br>    (1) 山东大学学伴项目’留学生三女配一男’招致强烈批评。<br><strong>2019.07.16</strong><br>    (1) 计算机科学之父阿兰·图灵确定登上英国50英镑新钞。<br><strong>2019.07.17</strong><br>    (1) 艾隆·马斯克创立的脑机接口公司Neuralink发布首款脑后插管技术。<br><strong>2019.07.20</strong><br>    (1) 美国阿波罗登月工程50周年纪念日。<br>    (2) 著名香港艺人任达华先生在广东中山参加活动时遭行刺。<br><strong>2019.07.21</strong><br>    (1) 香港暴徒游行示威活动中冲撞中联办，污损国徽。<br><strong>2019.07.23</strong><br>    (1) 华为对优秀青年实行年薪制，某中科院青年获200万年薪。<br>    (2) 英国保守党党首选举结束：鲍里斯·约翰逊将接任首相一职。<br>    (3) 中共讣告：前国务院总理李鹏于2019.07.22日逝世，享年91岁。<br><strong>2019.07.24</strong><br>    (1) 刘强东案件相关文档曝光，非强奸。<br><strong>2019.07.28</strong><br>    (1) 受中美两国关系影响，新闻联播近期内容突换风格，频爆’喷饭，跑火车’等词。<br><strong>2019.07.31</strong><br>    (1) 47个城市赴台个人自由行暂停实施。<br><strong>2019.08.04</strong><br>    (1) 美国发生两起枪击案，造成严重伤亡。<br><strong>2019.08.06</strong><br>    (1) 受美股下跌影响，沪深两市开盘跌1.8%，八月以来沪深两市累计下跌5%以上。<br><strong>2019.08.09</strong><br>    (1) 华为2019开发者大会召开，鸿蒙操作系统释出，并计划开源。<br><strong>2019.08.10</strong><br>    (1) 台风利奇马登录沿海地区，给浙江等省份带来严重人员财产损失。<br><strong>2019.08.15</strong><br>    (1) 香港示威游行活动引发暴力事件，港人李嘉诚等呼吁理性表达，爱香港，拒绝暴力。<br><strong>2019.08.18</strong><br>    (1) 中共中央支持深圳建立社会主义先行示范区。<br><strong>2019.08.26</strong><br>    (1) Linux内核发布28周年，总内核树260万行代码；Linux已统治全部Top500超级计算机，绝大部分云计算并衍生出安卓。<br><strong>2019.08.29</strong><br>    (1) 微软向Linux内核提供exFAT支持。<br><strong>2019.08.30</strong><br>    (1) 温州乐清”滴滴顺丰车杀人”司机被执行死刑，立即执行。<br><strong>2019.08.31</strong><br>    (1) AI换脸软件ZAO一夜爆火，个人隐私引发舆论。<br>    (2) 华为设立新网站，开源鸿蒙系统和方舟编译器等重要工具，软件。<br><strong>2019.09.03</strong><br>    (1) 谷歌释出Android10正式版操作系统。<br>    (2) 部分学校在课堂推行人脸识别，引发争议。<br><strong>2019.09.05</strong><br>    (1) 2022年卡塔尔世界杯会徽发布。<br><strong>2019.09.08</strong><br>    (1) 中国男篮对局失利，错失奥运入场券。<br>    (2) 清华大学教授，密码学家王小云(女)获未来科学大奖，奖金100万美元。<br><strong>2019.09.10</strong> (教师节)<br>    (1) 谷歌开发者大会今在上海召开。<br>    (2) 马云遵循2018年9月10日的决定如期卸任，挥泪现场，告别阿里。<br><strong>2019.09.11</strong><br>    (1) 苹果发布iPhone11等新产品，价格全面下调。<br>    (2) 联通和电信确认双方共建共享5G网络基础设施。<br><strong>2019.09.17</strong><br>    (1) 2022冬奥会和残奥会吉祥物发布。<br>    (2) 国家邮政总局：中国快递包裹总量已超美，日，欧总和。<br><strong>2019.09.18</strong><br>    (1) 华为全连接大会今在上海召开，发布多款产品，助力中国智造。<br><strong>2019.09.23</strong><br>    (1) 阿里巴巴蚂蚁森林获联合国“地球卫士奖”。<br><strong>2019.09.24</strong><br>    (1) 中国贵州FAST天眼向全球开发。<br><strong>2019.09.25</strong><br>    (1) 北京大兴国际机场投入使用，习出席并致辞。<br><strong>2019.09.28</strong><br>    (1) 中国女排取得十连胜，提取锁定冠军献礼国庆。<br><strong>2019.09.29</strong><br>    (1) 共和国勋章和国家荣誉称号奖章颁奖大会在京举行，袁隆平和屠呦呦等获奖。<br><strong>2019.10.01</strong><br>    (1) 共和国年届古稀，今举行盛大阅兵，群众游行及烟花晚会。<br>    (2) 阿里巴巴集团蚂蚁金服自研的OceanBase数据库登顶世界第一。<br><strong>2019.10.04</strong><br>    (1) 为应对香港乱局，港府宣布实施《禁止蒙面规例》。<br><strong>2019.10.06</strong><br>    (1) 美休斯顿火箭俱乐部总经理公开发表涉港不当言论，中国篮协暂停与之交流合作。<br><strong>2019.10.07</strong><br>    (1) 年度诺奖陆续公布，2019诺贝尔生理学或医学奖颁给细胞缺氧适应性机制研究。<br><strong>2019.10.08</strong><br>    (1) 美商务部将包括旷视科技在内的28家中国科技公司或组织加入实体清单。<br><strong>2019.10.10</strong><br>    (1) 江苏无锡312国道K135处跨桥侧翻，多辆车被碾压，造成3死2伤。<br><strong>2019.10.14</strong><br>    (1) 云贵川部分地区微信和QQ遭封号，涉国家严厉打击电信诈骗案。<br><strong>2019.10.15</strong><br>    (1) 统计局公布，9月CPI猛增为3%，猪价上涨成重要推手。<br><strong>2019.10.18</strong><br>    (1) 军运会今在武汉开幕。<br>    (2) 人造肉饼今天首次上市，价格是猪肉六倍。<br><strong>2019.10.22</strong><br>    (1) 2024年巴黎奥运会和残奥会会徽发布。<br>    (2) 袁隆平主导的第三代杂交水稻首次专家测产，亩产突破1046.3公斤。<br><strong>2019.10.23</strong><br>    (1) 华为发布Mate30 5G双模全网通智能手机和折叠屏智能手机。<br>    (2) 谷歌量子验证登顶Nature150周年纪念刊，谷歌CEO发文祝贺。<br>    (3) UNIX系统诞生50周年，催生C语言和互联网，并衍生出Linux系统，苹果系统和安卓系统。<br><strong>2019.10.24</strong><br>    (1) 程序员开发者节日，讯飞召开1024开发者大会。<br>    (2) 中共中央政治局集中讨论学习区块链技术，布局区块链技术。<br><strong>2019.10.25</strong><br>    (1) 英国一货车内发现39具尸体，警方称不能证明都是中国公民。<br><strong>2019.10.30</strong><br>    (1) 华为HR胡玲实名内网反映公司问题。<br><strong>2019.10.31</strong><br>    (1) 移动联通电信和铁塔四家运营商牵头，中国正式开启5G商用。<br><strong>2019.11.01</strong><br>    (1) 十九届四中全会公报刊发，要求全面实现国家治理体系现代化。<br><strong>2019.11.03</strong><br>    (1) 桂林航空某女乘客被爆进入飞机驾驶室，机长终身禁飞。<br><strong>2019.11.04</strong><br>    (1) 旅行者2号发回飞出太阳系穿越星际空间的首批数据。<br>    (2) 顶级期刊自然(Nature 1869~2019)创刊150年，官网发文回忆历史。<br><strong>2019.11.05</strong><br>    (1) 第二届国际进口博览会开幕，习致辞。<br><strong>2019.11.07</strong><br>    (1) 中国成立6G技术研发推进工作组和总体专家组，正式开启6G研究。<br><strong>2019.11.09</strong><br>    (1) 王思聪被限制高消费，王家奉行的远政治，亲政府似乎不奏效。<br><strong>2019.11.11</strong><br>    (1) 双十一天猫全天交易额达2684亿，消费额各省排名：广东、浙江、江苏、上海、山东、北京、四川、河南、福建、湖北。<br><strong>2019.11.13</strong><br>    (1) 北京确诊两例鼠疫。<br>    (2) 香港教育局宣布全港停课。<br><strong>2019.11.17</strong><br>    (1) 45岁林志玲与日本男星AKIRA(黑泽良平)在台南举行婚礼。<br><strong>2019.11.20</strong><br>    (1) 香港理工大学闹剧结束，校园满目疮痍。<br>    (2) 湖南未成年少女被强奸，6人被批捕，含公职人员。<br><strong>2019.11.21</strong><br>    (1) 某医生万米高空为乘客吸出800毫升尿液。<br>    (2) 国务院办公厅公布2020年节假日安排：春节7天，国庆中秋共8天。<br><strong>2019.11.22</strong><br>    (1) 王思聪名下房产，汽车，存款被查封。<br><strong>2019.11.25</strong><br>    (1) 就近期公司暴力裁员事件，网易做出道歉声明。<br>    (2) 全球IPv4地址分配完毕，IPv6即将投入大规模使用。<br><strong>2019.11.27</strong><br>    (1) 微软推出玻璃硬盘，理论上可保存千年。<br>    (2) 浙江卫视录制节目过程中，某明星猝死，年仅35岁，引发一轮声讨。<br><strong>2019.12.01</strong><br>    (1) 华为孟晚舟被加拿大政府拘押一年。<br>    (2) 广州突发地陷，3人失联，前有苏州桥塌，后有羊城地陷。<br><strong>2019.12.02</strong><br>    (1) 联合国气候大会召开。<br>    (2) 华为就被羁押251天释放的前员工维权事件作出回应：支持当事人运用法律。<br><strong>2019.12.03</strong><br>    (1) 贺建奎“基因编辑婴儿”论文曝光。<br><strong>2019.12.05</strong><br>    (1) 条形码发明人乔治·劳雷尔去世，享年94岁。<br><strong>2019.12.06</strong><br>    (1) 上海财经大学会计学院某研究生公开发文举报学院副教授对其进行性骚扰。<br><strong>2019.12.10</strong><br>    (1) 世界反兴奋剂执委会宣布俄罗斯被禁止参加国际赛事四年，普京强硬回应。<br><strong>2019.12.14</strong><br>    (1) 中兴，深度(deepin)联合推出的国产操作系统UOS(统一操作系统)释出，<br><strong>2019.12.16</strong><br>    (1) Nature杂志公布年度照片：黑洞发现。<br><strong>2019.12.17</strong><br>    (1) 国产航母山东舰交付使用，习出席交接入列仪式。<br><strong>2019.12.18</strong><br>    (1) 关于李子柒视频是否文化输出，国内开启大讨论。<br><strong>2019.12.19</strong><br>    (1) 网络热播剧《庆余年》无广告版(盗版)全集泄出。<br><strong>2019.12.20</strong><br>    (1) 澳门回归20周年纪念日，习出席。<br><strong>2019.12.21</strong><br>    (1) 北大苏剑：“中国人口从去年开始就在负增长，劳动力2022年后每年减少1000万”。<br><strong>2019.12.23</strong><br>    (1) 俄罗斯在测试中成功断开同国际互联网的连接。<br><strong>2019.12.25</strong><br>    (1) 民航总医院急诊科副主任医师在就诊过程中遭病患家属伤害，今晨逝世。<br><strong>2019.12.27</strong><br>    (1) 长征五号火箭“胖五”发射成功。<br><strong>2019.12.30</strong><br>    (1) 基因编辑婴儿事件主导者贺建奎被判刑三年，罚款三百万元。<br><strong>2019.12.31</strong><br>    (1) 习发表新年贺词：不负韶华，共同迎接2020！</p><p><a id="download" href="https://gitee.com/QMHTMY/share/blob/master/2019events.pdf" target="_blank" rel="noopener"><i class="fa fa-download"></i><span>下载年度报告</span></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/31/l3IZMq.md.png&quot; alt=&quot;2019&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="年度新闻" scheme="http://www.shieber.cn/categories/%E5%B9%B4%E5%BA%A6%E6%96%B0%E9%97%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>每日PS技巧15：图片移植拼接</title>
    <link href="http://www.shieber.cn/title/cbd7f6be/"/>
    <id>http://www.shieber.cn/title/cbd7f6be/</id>
    <published>2019-12-30T04:25:32.000Z</published>
    <updated>2019-12-30T05:26:54.867Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/30/lMaD10.md.png" alt="PS15_1"></p><a id="more"></a><p>将人物身体部位结合到水果上可以给植物赋予生命力，创造出各种好玩儿有趣的图片效果。本次学习制作封面图的方法，一旦学会，以后就能随意组合。</p><h2 id="今日技巧-图片移植拼接"><a href="#今日技巧-图片移植拼接" class="headerlink" title="今日技巧 [图片移植拼接]"></a>今日技巧 [图片移植拼接]</h2><p>主要步骤：  </p><p>1) 打开两幅图片素材<br>2) 调整大小，使得图位置合适<br>3) 利用工具提取嘴唇或其他部位<br>4) 调整提取部位的色相，使相宜<br>5) 保存图片并输出</p><p>首先导入两幅图片素材，调整人体嘴唇到合适位置。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMdeg0.md.png" alt="PS15_2"></p><p><img src="https://s2.ax1x.com/2019/12/30/lMdtv6.md.png" alt="PS15_3"></p><p>利用工具(锁套，钢笔等)建立选区，这里我用的钢笔，主要我的这个PS是精简版，锁套不能用。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMdsPA.md.png" alt="PS15_4"></p><p>建立选区后复制到新图层，这样得到一个干净的嘴唇。上面的图层我打开了调整图层，所以显得更亮，其实应该最后一步处理的。我先关闭，看看原图的色彩。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMwhy6.md.png" alt="PS15_5"></p><p>现在再创建口腔内部的选区，并Ctrl+Shift+I反向(相当于选择嘴唇)，Ctrl+U打开色相调节器。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMwj6P.md.png" alt="PS15_6"></p><p>下面是调节好的图片，大概颜色就这样。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMdcxP.md.png" alt="PS15_7"></p><p>此时合并背景图层和嘴唇图层(Ctrl+E)为一个图层，复制该合成图层，在复制的图层上选择滤镜&gt;其他&gt;高反差保留，半径为3左右，模式设置为柔光。创建色阶，色相饱和图，色彩平衡调整图层，对图像进行调节。下图是调节过的图，明显好看多了。</p><p><img src="https://s2.ax1x.com/2019/12/30/lM0rct.md.png" alt="PS15_8"></p><p>最后附上原图和效果图，原图：2019.12.30 Bing搜索图片。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMBPHO.md.png" alt="PS15_9"></p><p><img src="https://s2.ax1x.com/2019/12/30/lM0cB8.md.png" alt="PS15_10"></p><p><img src="https://s2.ax1x.com/2019/12/30/lMaD10.md.png" alt="PS15_11"></p><p>苹果，梨等等水果都可以使用，各种组合，变化多端。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/30/lMaD10.md.png&quot; alt=&quot;PS15_1&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://www.shieber.cn/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="PS" scheme="http://www.shieber.cn/tags/PS/"/>
    
  </entry>
  
  <entry>
    <title>《庆余年》</title>
    <link href="http://www.shieber.cn/title/2622ee51/"/>
    <id>http://www.shieber.cn/title/2622ee51/</id>
    <published>2019-12-28T12:07:49.000Z</published>
    <updated>2019-12-30T05:24:23.337Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/28/lmaX7R.md.jpg" alt="cover"></p><a id="more"></a><p>《庆余年》这部剧可能是2019年我看的最后一部剧，写的所谓的点评(吐槽)吧！先抛观点：这部剧可以，演员阵容强大，演技好，陈道明出场自带帝王气，达康书记再次扮演狠角色，总体来看，故事好，演员好，剪辑也好，特此推荐给读者。</p><h2 id="穿越还是科幻？"><a href="#穿越还是科幻？" class="headerlink" title="穿越还是科幻？"></a>穿越还是科幻？</h2><p>目前，广电总局对穿越剧亮红灯，所以剧情开始是现代，然后全是回忆，或说讲述了一段故事，中间加了点现代的理念进去，但除了第一个镜头和最后的word文字镜头外，中间没有任何现代镜头。所以，很难说他是穿越剧还是古装剧，好在过审了。</p><h2 id="故事矛盾"><a href="#故事矛盾" class="headerlink" title="故事矛盾"></a>故事矛盾</h2><p>故事从腾梓荆刺杀范闲开始，以二人前往京都为铺垫，腾梓荆被程巨树杀死后众人的冷漠为高潮，展开了一个宏大的场面。<br>核心矛盾(此矛盾乃推动事物发展的矛盾，马克思基本矛盾观)是“护卫是人，不是下人，人人平等”，范闲到监察院查看母亲叶轻眉留下的立院宗旨更强化这一矛盾。接着，范大人这位拥有人人平等思想的社会好青年将这一理念作为个人奋斗目标，不断同各路人马斗争，进而不断推动故事往纵深发展。</p><h2 id="主人公"><a href="#主人公" class="headerlink" title="主人公"></a>主人公</h2><p>本剧主人公并非一位而是大众主角，各位配角都表现得挺好，许多人出场挺晚，但人物形象仍然很丰富，比如达康书记演狠角色就很出彩，五竹叔牛逼，机器人，战斗力暴表。出场最多的男主角自是范闲，二号是王启年，爱钱，大忽悠。主人公范闲为义以身范险，老伙计王启年为财倚身范闲。女主该是林婉儿(鸡腿姑娘，其实这是鸭腿)，其母亲(长公主，脸白得奇怪)出场也不少，还有司理理也是，海棠圣女最后出场，我弟的义母和海棠就很像，感觉就是其本人年轻时候。估计这几位年轻一辈的女的都喜欢范大人，看后面剧情发展吧。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMrkpd.md.png" alt="qyn10"></p><h2 id="经典场面"><a href="#经典场面" class="headerlink" title="经典场面"></a>经典场面</h2><p>剧中有很多经典场面，最开始范大人轻声细语叫下人走，然而下人齐跪，生怕范闲不要他们。范闲不得不大声呵斥，只有拿出对待奴才的态度下人们才懂了。给下人讲什么人人平等他们是不懂的。被骂后，奴才一句”这就舒服多了，刚才大人说的什么人人平等我听不懂”更突出矛盾，封建社会的人是不平等的，给其尊严反而不要。我想起鲁迅一句话：有的人，对其好了，他觉你是坏人；对其不好，得其反到觉得你是好人。所以，不要对人太好，有的人就是贱呀！被男人欺负了还舍不得分手的女人是不是这种？斯德哥尔摩症患者是不是这种？</p><p>圣女海棠和范闲谈论朋友，个人孤独的场景也很经典。</p><p><img src="https://s2.ax1x.com/2019/12/28/lmBhKU.md.png" alt="qyn1"></p><p>我们生活在尘世，但又有几个知心朋友呢？遇到困难和苦恼有人倾诉吗？我们内心的孤独和痛苦能否有人帮助排解？我们自己又有真心去对待或者说发展一个朋友吗？我看很多人没有真心朋友，反倒有了一堆酒肉朋友，一堆臭味相投的狐朋狗友。读者不妨自我心中盘算一番，你倒霉了，真有谁会帮助你吗？有能为你考虑的朋友吗？我认为朋友不在多，而在精，一个良友胜过千个普通人。找朋友，我从不找和我有太多相同志趣者，因为拥有相同的志趣就会引发争执，甚至仇恨。找一个不如我的人作朋友，我看其缺点以反省自身；找一个比我强的人，我学其优点和精神。实际上，我认识的朋友都和我喜好不同，他们擅长篮球，我擅长电脑；他们喜欢金融，我喜欢文字。聚在一起，一个人讲一点儿，互相补充知识。当然，这种模式，要双方愿意了解新知识，大度，开放，不拒绝自己不了解的东西。</p><p>评价王启年的场面也很有深意。</p><p><img src="https://s2.ax1x.com/2019/12/28/lmrZSx.md.png" alt="qyn2"></p><p><img src="https://s2.ax1x.com/2019/12/28/lmr1kd.md.png" alt="qyn3"></p><p>活得真实，就是自然。缺点暴露无遗，优点也一览无余。这才是做人嘛，何必活得那么累呢？带上面具固然维持暂得的安稳和体面，但是被揭开时，怕是要暴露最大的丑陋。怕老婆，爱女儿，最是自然，尤其四川耙耳朵。要杜绝的是不怕老婆，不爱女儿，成天在外鬼混，这就不好了。</p><p><img src="https://s2.ax1x.com/2019/12/28/lmsVEQ.md.png" alt="qyn4"></p><p><img src="https://s2.ax1x.com/2019/12/28/lmsY59.md.png" alt="qyn5"></p><p>背诗(不对，作诗)场面我猜到了，预感到会用现代人总结的几千年中华民族的诗歌去虐庄墨韩。背诗百余首，演员下了苦功夫的，看了花絮，范闲拍戏时真背下来的，比小仙肉们只会张嘴强何止百倍？</p><h2 id="搞笑场面"><a href="#搞笑场面" class="headerlink" title="搞笑场面"></a>搞笑场面</h2><p>王启年吃马粪的场面，司理理被脱光包扎伤口的场面，还有很多吧！外交谈判成了吵架！</p><p><img src="https://s2.ax1x.com/2019/12/28/lm6elq.md.png" alt="qyn6"></p><p><img src="https://s2.ax1x.com/2019/12/28/lm68h9.md.png" alt="qyn7"></p><p><img src="https://s2.ax1x.com/2019/12/28/lm6Y11.md.png" alt="qyn8"></p><h2 id="其他废话"><a href="#其他废话" class="headerlink" title="其他废话"></a>其他废话</h2><p>电视剧情可以，然而VVIP不行，腾讯等平台吃相难看，逼着正版用户去看盗版。最后说一句，范闲母亲叶轻眉和沈重妹妹(钟情言冰云)应该是同一个演员，各位可细细辨别。听说本剧一共三季，陈道明(陛下)已在催拍第二季，所以2020年下半年可能会看到第二季，期待吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/28/lmaX7R.md.jpg&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Pythonic的代码写法</title>
    <link href="http://www.shieber.cn/title/5aa457d2/"/>
    <id>http://www.shieber.cn/title/5aa457d2/</id>
    <published>2019-12-23T04:05:25.000Z</published>
    <updated>2019-12-28T12:08:18.845Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/23/lpZk36.md.png" alt="pythonic"></p><a id="more"></a><p>很多时候我们写的代码根本就不是代码，而是垃圾，尤其翻看自己以前写的东西，感觉就是一推垃圾，恨不得一删了之。每一门编程语言都有自己最为合适的写法，Python也不例外。</p><p><strong>变量交换</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在C语言中是</span><br><span class="line">int tmp;</span><br><span class="line">tmp = a;</span><br><span class="line">a   = b;</span><br><span class="line">b   = tmp;</span><br><span class="line"></span><br><span class="line">python中不需要tmp，而是一步到位</span><br><span class="line">a, b = b, a </span><br><span class="line">这里最难理解的是，b赋值给a了，为何a又能复制给b？实际上，=号右边的b,a被提取出来了，应该在CPU寄存器中。</span><br></pre></td></tr></table></figure><p><strong>循环区间元素</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">python2中</span><br><span class="line">for i in range(1,100000,2):</span><br><span class="line">print(i) #先由range生成列表，占用内存500000个内存位置，浪费空间</span><br><span class="line"></span><br><span class="line">for i in xrange(1,100000,2):</span><br><span class="line">print(i) #返回一个生成器，每次调用输入一个数，实际就是利用一个函数，占用一个内存位置</span><br><span class="line"></span><br><span class="line">python3的range就是xrange实现，不用考虑，换句话说该用python3。</span><br></pre></td></tr></table></figure><p><strong>索引</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">lst = [1,4,10,100,23]</span><br><span class="line">for i in range(len(lst)):</span><br><span class="line">print(i,&apos;--&gt;&apos;,lst[i]) 多调用函数，开销更大，速度更慢</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; for i,val in enumerate(lst):</span><br><span class="line">....    print(i,&apos;--&gt;&apos;,val)    一次把元素的序号也给输出了，省得再写变量。</span><br><span class="line">....</span><br><span class="line">0, 1</span><br><span class="line">1, 4</span><br><span class="line">2, 10</span><br><span class="line">3, 100</span><br><span class="line">4, 23</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; for i,val in enumerate(lst,1):</span><br><span class="line">....  print(i,&apos;--&gt;&apos;,val)    从1开始计数</span><br><span class="line">....  </span><br><span class="line">1, 1</span><br><span class="line">2, 4</span><br><span class="line">3, 10</span><br><span class="line">4, 100</span><br><span class="line">5, 23</span><br></pre></td></tr></table></figure><p><strong>字符串拼接</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">strings = &apos;I&apos;+&apos;Love&apos;+&apos;You&apos; 用加法，产生内存浪费</span><br><span class="line"></span><br><span class="line">strings = &apos;&apos;.join([&apos;I&apos;,&apos;Love&apos;,&apos;You&apos;]) 用join直接生成字符串</span><br></pre></td></tr></table></figure><p><strong>字符串翻转</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = &apos;I love you&apos;</span><br><span class="line">笨蛋写法</span><br><span class="line">for i in range(len(a)):</span><br><span class="line">reverse_a += a[len(a) -i -1]</span><br><span class="line">&gt;&gt;&gt; reverse_a</span><br><span class="line">&apos;uoy evol i&apos;</span><br><span class="line"></span><br><span class="line">正确写法</span><br><span class="line">&gt;&gt;&gt; reverse_a = a[::-1]</span><br><span class="line">&gt;&gt;&gt; reverse_a</span><br><span class="line">&apos;uoy evol i&apos;</span><br></pre></td></tr></table></figure><p><strong>字符格式化输出</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; print(&quot;My name is %s&quot;%&apos;shieber&apos;) #老式用法</span><br><span class="line">My name is shieber</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(&quot;My name is &#123;&#125;&quot;.format(&apos;shieber&apos;)) #format格式化输出</span><br><span class="line">My name is shieber</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(&quot;My name is &#123;0&#125;&quot;.format(&apos;shieber&apos;)) #指定位置</span><br><span class="line">My name is shieber</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(&quot;My name is &#123;0&#125; and his name is &#123;1&#125;&quot;.format(&apos;shieber&apos;,&apos;tim&apos;)) #多个位置</span><br><span class="line">My name is shieber and his name is tim</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(&quot;My name is &#123;0&#125; and his name is &#123;1&#125; &#123;0&#125;&quot;.format(&apos;shieber&apos;,&apos;tim&apos;)) #位置重复出现</span><br><span class="line">My name is shieber and his name is tim shieber</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(&quot;网站名: &#123;name&#125;, 网址: &#123;url&#125;&quot;.format(name=&quot;Shieber&quot;,url=&quot;www.shieber.cn&quot;)) #指定名字</span><br><span class="line">网站名: Shieber, 网址: www.shieber.cn</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; site = &#123;&quot;name&quot;:&quot;Shieber&quot;,&apos;url&apos;:&quot;www.shieber.cn&quot;&#125;   </span><br><span class="line">&gt;&gt;&gt; print(&quot;网站名: &#123;name&#125;,网址: &#123;url&#125;&quot;.format(**site))  #使用字典</span><br><span class="line">网站名: Shieber, 网址: www.shieber.cn</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; site = [&quot;Shieber&quot;,&quot;www.shieber.cn&quot;] </span><br><span class="line">&gt;&gt;&gt; print(&quot;网站名:&#123;0[0]&#125;,网址:&#123;0[1]&#125;&quot;.format(site)) #使用列表</span><br><span class="line">网站名: Shieber, 网址: www.shieber.cn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:.2f&#125;&quot;.format(3.141592653)</span><br><span class="line">3.14</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:+.2f&#125;&quot;.format(3.141592653)</span><br><span class="line">+3.14</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:.0f&#125;&quot;.format(2.718281823) #自然数e</span><br><span class="line">3</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:0&gt;2d&#125;&quot;.format(3)) #用0补齐两位</span><br><span class="line">03</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:&gt;2d&#125;&quot;.format(3)) #右对齐两位</span><br><span class="line"> 3</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:a&lt;4d&#125;&quot;.format(3)) #用a补齐四位</span><br><span class="line">3aaa</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:&lt;4d&#125;&quot;.format(3)) #左对齐四位</span><br><span class="line">3</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:^8d&#125;&quot;.format(3)) #中间对齐8位</span><br><span class="line">   3</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:,&#125;&quot;.format(1000000)) </span><br><span class="line">1,000,000</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:.2%&#125;&quot;.format(0.18)) </span><br><span class="line">18%</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:.2e&#125;&quot;.format(1000000000)) #科学计数，两位小数</span><br><span class="line">1.00e+9</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:b&#125;&quot;.format(10)) #二进制 (b)inary</span><br><span class="line">1010</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:o&#125;&quot;.format(10)) #八进制 (o)ctal</span><br><span class="line">12</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:x&#125;&quot;.format(10)) #十六进制 (h)exadecimal</span><br><span class="line">a</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:#x&#125;&quot;.format(10)) #十六进制 加0x前缀</span><br><span class="line">0xa</span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;:#X&#125;&quot;.format(10)) #十六进制 加0X前缀，大写</span><br><span class="line">0XA</span><br></pre></td></tr></table></figure><p><strong>上下文管理</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fobj = open(&apos;xxx.txt&apos;)</span><br><span class="line">try:</span><br><span class="line">data = fobj.read()</span><br><span class="line">finaly:</span><br><span class="line">fobj.close()</span><br><span class="line"></span><br><span class="line">with open(&apos;xxx.txt&apos;) as fobj:</span><br><span class="line">data = fobj.read() 用with自动关闭文件，代码量更少</span><br></pre></td></tr></table></figure><p><strong>列表操作</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">lst = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;]</span><br><span class="line">lst.pop()</span><br><span class="line">lst.pop(0)</span><br><span class="line">lst.insert(0,&apos;k&apos;)</span><br><span class="line">lst.append(&apos;g&apos;)</span><br><span class="line">大量的元素移动，效率低</span><br><span class="line"></span><br><span class="line">from collections import deque</span><br><span class="line">lst = deque([&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;])</span><br><span class="line">lst.popleft()</span><br><span class="line">lst.appendleft(&apos;k&apos;)</span><br><span class="line">lst.append(&apos;g&apos;)</span><br><span class="line">用队列处理，两头都可兼顾</span><br></pre></td></tr></table></figure><p><strong>词频统计</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; lst = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;,&apos;a&apos;,&apos;a&apos;,&apos;a&apos;,&apos;c&apos;,&apos;1&apos;,&apos;e&apos;,&apos;d&apos;,&apos;b&apos;]</span><br><span class="line"></span><br><span class="line">def counterFre(wdlst):</span><br><span class="line">wfd = &#123;&#125;</span><br><span class="line">for wd in wdlst:</span><br><span class="line">if wd in wfd:</span><br><span class="line">wfd[wd]  += 1</span><br><span class="line">else:</span><br><span class="line">wfd[wd] = 1</span><br><span class="line">return wfd</span><br><span class="line">&gt;&gt;&gt; wfd = counterFre(lst)</span><br><span class="line">&#123;&apos;a&apos;:4,&apos;b&apos;:2,&apos;c&apos;:2,&apos;d&apos;:2,&apos;e&apos;:1,&apos;1&apos;:1&#125;</span><br><span class="line"></span><br><span class="line">而用Counter一步到位</span><br><span class="line">&gt;&gt;&gt; from collections import Counter</span><br><span class="line">&gt;&gt;&gt; wfd = Counter(lst)</span><br><span class="line">&gt;&gt;&gt; wfd </span><br><span class="line">&#123;&apos;a&apos;:4,&apos;b&apos;:2,&apos;c&apos;:2,&apos;d&apos;:2,&apos;e&apos;:1,&apos;1&apos;:1&#125;</span><br></pre></td></tr></table></figure><p><strong>多个赋值</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = 1</span><br><span class="line">&gt;&gt; b = 2</span><br><span class="line">&gt;&gt; c = 3</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; a,b,c = [1,2,3] #一步到位</span><br></pre></td></tr></table></figure><p><strong>使用*和**构造参数为元组和字典</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def fun1(*args):</span><br><span class="line">for arg in args:</span><br><span class="line">print(&apos;argument: &apos;,arg)</span><br><span class="line">fun1(&apos;i&apos;,&apos;love&apos;,&apos;You&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def fun2(*args, **kwargs):</span><br><span class="line">for k,v in kwargs.items():</span><br><span class="line">print(k,v)</span><br><span class="line">&gt;&gt;&gt; fun2(a=2,b=3,c=5)</span><br><span class="line">a 2</span><br><span class="line">b 3</span><br><span class="line">c 5</span><br></pre></td></tr></table></figure><p><strong>zip打包可迭代元素为元组</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = [1,2,3]</span><br><span class="line">&gt;&gt;&gt; b = [4,5,6]</span><br><span class="line"></span><br><span class="line">tupled = zip(a,b)</span><br><span class="line">&gt;&gt;&gt; tupled</span><br><span class="line">[(1,4),(2,5),(3,6)]</span><br><span class="line"></span><br><span class="line">l = [1,2,3,4,5,6,7,8,9,10]</span><br><span class="line">tupled = zip(l[:-1],l[1:])</span><br><span class="line">&gt;&gt;&gt; tupled</span><br><span class="line">[(1,2),(2,3),(3,4),(4,5),(5,6),(6,7),(7,8),(8,9),(9,10)]</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; name = [&apos;shieber&apos;,&apos;kew&apos;,&apos;koi&apos;]</span><br><span class="line">&gt;&gt;&gt; for e in zip(*name):</span><br><span class="line">...print(e)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">(&apos;s&apos;,&apos;k&apos;,&apos;k&apos;)</span><br><span class="line">(&apos;h&apos;,&apos;e&apos;,&apos;o&apos;)</span><br><span class="line">(&apos;i&apos;,&apos;w&apos;,&apos;i&apos;)</span><br></pre></td></tr></table></figure><p><strong>解构赋值</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">a,*mid,b = [1,2,3,4,5]</span><br><span class="line">&gt;&gt;&gt; a</span><br><span class="line">1</span><br><span class="line">&gt;&gt;&gt; b</span><br><span class="line">5</span><br><span class="line">&gt;&gt;&gt; mid </span><br><span class="line">[2,3,4]</span><br><span class="line"></span><br><span class="line">man = [[&apos;Shieber&apos;,(18,18,180)],[&apos;Kew&apos;,(19,19,190)]]</span><br><span class="line">for name, (f,s,t) in man:</span><br><span class="line">print(name, f,s,t) </span><br><span class="line">其实name, (f,s,t)就是对man内部字典的映射，模式一样的，所以解析出来了</span><br><span class="line"></span><br><span class="line">women = &#123; &apos;name&apos;: &apos;yu&apos;, &apos;age&apos;:24,&apos;height&apos;:172 &#125;</span><br><span class="line">for k,v in women.items():</span><br><span class="line">print(k,&apos;--&gt;&apos;,v)</span><br></pre></td></tr></table></figure><p><strong>推导</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1-100内的偶数和奇数列表推导</span><br><span class="line">even = [i for i in range(1,100) if i % 2 == 0]</span><br><span class="line">odd  = [i for i in range(1,100) if i % 2 == 1]</span><br><span class="line"></span><br><span class="line">愚蠢写法</span><br><span class="line">even, odd  = [], []</span><br><span class="line">for i in range(1,100):</span><br><span class="line">if i % 2 == 0:</span><br><span class="line">even.append(i)</span><br><span class="line">else:</span><br><span class="line">odd.append(i)</span><br><span class="line"></span><br><span class="line">集合推导 &#123;x**2 for x in range(10) if x % 2 == 0&#125;</span><br><span class="line">字典推导 &#123;x: x**2 for x in range(10) if x % 2 == 0&#125;</span><br></pre></td></tr></table></figure><p><strong>三目运算</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = 1</span><br><span class="line">&gt;&gt;&gt; res = &apos;Good&apos; if 1 == a else &apos;Bad&apos;</span><br><span class="line">&gt;&gt;&gt; res</span><br><span class="line">&apos;Good&apos;</span><br><span class="line"></span><br><span class="line">它等于</span><br><span class="line">if 1 == a:</span><br><span class="line">res = &apos;Good&apos;</span><br><span class="line">else:</span><br><span class="line">res = &apos;Bad&apos;</span><br></pre></td></tr></table></figure><p><strong>生成器</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">even = [i for i in range(1,100) if i % 2 == 0] 推导 占用很多内存空间</span><br><span class="line">def fib(max):</span><br><span class="line">#菲波那契数列，列表</span><br><span class="line">n, a, b = 0, 0, 1</span><br><span class="line">fibonacci = []</span><br><span class="line">while n &lt; max:</span><br><span class="line">fibonacci.append(b)</span><br><span class="line">a, b = b, a+b</span><br><span class="line">n += 1</span><br><span class="line"></span><br><span class="line">even = (i for i in range(1,100) if i % 2 == 0) 列表生成器 只占一个内存空间</span><br><span class="line">def fib(max):</span><br><span class="line">#菲波那契数列，生成器</span><br><span class="line">n, a, b = 0, 0, 1</span><br><span class="line">while n &lt; max:</span><br><span class="line">yield b</span><br><span class="line">a, b = b, a+b</span><br><span class="line">n += 1</span><br><span class="line"></span><br><span class="line">当然，还可以对该函数优化，减少一个变量n</span><br><span class="line">def fib(max):</span><br><span class="line">a, b = 0, 1</span><br><span class="line">while 0 &lt; max:</span><br><span class="line">yield b</span><br><span class="line">a, b = b, a+b</span><br><span class="line">max -= 1</span><br><span class="line">&gt;&gt;&gt; t = fib(3)</span><br><span class="line">&gt;&gt;&gt; next(t) #使用next()函数查看下一个</span><br><span class="line">1</span><br><span class="line">&gt;&gt;&gt; next(t) </span><br><span class="line">1</span><br><span class="line">&gt;&gt;&gt; next(t) </span><br><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>逻辑等</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if 0 == a:</span><br><span class="line">do1()</span><br><span class="line">else:</span><br><span class="line">do2()</span><br><span class="line"></span><br><span class="line">不要写成</span><br><span class="line">if a == 0:</span><br><span class="line">do1()</span><br><span class="line">else:</span><br><span class="line">do2()</span><br><span class="line">因为你手抖写成a=0了，do2()总是运行，代码没错，而逻辑错了，写成0=a时立刻会报错</span><br><span class="line">此写法源于c中推荐的写法，当然也有人有不同意见。</span><br></pre></td></tr></table></figure><p><strong>简单的数学运算和比较</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">不是 a = a + 2 </span><br><span class="line">而是 a += 2</span><br><span class="line"></span><br><span class="line">同理还有</span><br><span class="line">a -= 2</span><br><span class="line">a *= 2</span><br><span class="line">a /= 2</span><br><span class="line">a %= 2</span><br><span class="line"></span><br><span class="line">1&lt; a and a &lt; 10 也可以(C语言中的写法)</span><br><span class="line">1 &lt; a &lt; 10 何乐而不为</span><br></pre></td></tr></table></figure><p><strong>移位运算符</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">凡是除以和乘以2的倍数的，都用移位运算</span><br><span class="line">b = a / 2 可以写成 a &gt;&gt; 1</span><br><span class="line">b = a / 4 可以写成 a &gt;&gt; 2</span><br><span class="line">b = a / 8 可以写成 a &gt;&gt; 3</span><br><span class="line">b = a * 2 可以写成 a &lt;&lt; 1</span><br><span class="line">b = a * 4 可以写成 a &lt;&lt; 2</span><br><span class="line">b = a * 8 可以写成 a &lt;&lt; 3</span><br><span class="line"></span><br><span class="line">当然，也可保留乘除法，方便理解。</span><br><span class="line">但高效代码就必须用移位，移位利用</span><br><span class="line">cpu寄存器直接操作。/和*运算大概是</span><br><span class="line">4单位cpu时间(大概2纳秒，各cpu不同)，</span><br><span class="line">而&gt;&gt;和&lt;&lt;只要1单位时间(0.5纳秒)，</span><br><span class="line">想想你有1万亿次运算(很多数学运算都超过1万亿次，尤其科研项目跑几个月的)，</span><br><span class="line">那么用/和*会消耗2000秒(33.33分钟)，而移位消耗(8分钟)。看起来不大，</span><br><span class="line">但是如果是科研项目，要跑很多遍那种，那么最后*/写法就会多跑上月的时间，</span><br><span class="line">想想吧，几个月时间，孩子都该出生了。</span><br></pre></td></tr></table></figure><p><strong>lambda函数</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def f(x):</span><br><span class="line">return x**2 + 3</span><br><span class="line">&gt;&gt;&gt; list(map(f, [1,2,3,4,5,6,7,8]))</span><br><span class="line">[1,4,9,16,25,36,49,64]</span><br><span class="line"></span><br><span class="line">正确写法，一行搞定</span><br><span class="line">&gt;&gt;&gt; list(map(lambda x: x**2 + 3, [1,2,3,4,5,6,7,8]))</span><br><span class="line">[1,4,9,16,25,36,49,64]</span><br></pre></td></tr></table></figure><p><strong>filter,map,reduce, apply函数的使用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">filter 过滤掉不符合要求的元素 filter(function, sequence)</span><br><span class="line">&gt;&gt;&gt; L = [1,2,3,4,5,6,7,8]</span><br><span class="line">&gt;&gt;&gt; list(filter(lambda x: x%2==0, L)) #x就指代L中的每一个元素</span><br><span class="line">[2,3,4,8]</span><br><span class="line"></span><br><span class="line">map 对若干个序列进行联合操作  map(function, sequence(s))</span><br><span class="line">&gt;&gt;&gt; L1 = [1,2,3,4,5]</span><br><span class="line">&gt;&gt;&gt; L2 = [2,3,4,5,6]</span><br><span class="line">&gt;&gt;&gt; list(map(lambda x,y: (x+y),L1,L2)) #x来自于L1,y来自于L2 长度不一时，参照最短执行</span><br><span class="line">[3,5,7,9,11]</span><br><span class="line"></span><br><span class="line">reduce 对序列进行压缩，归并为一个值 reduce(function, sequence)</span><br><span class="line">&gt;&gt;&gt; from functools import reduce</span><br><span class="line">&gt;&gt;&gt; L = [1,2,3,4,5]</span><br><span class="line">&gt;&gt;&gt; list(reduce(lambda x,y: x+y, L)) #x和y都来自于L，但按照顺序依次取出</span><br><span class="line">[15]</span><br><span class="line"></span><br><span class="line">apply pandas中内置函数，对DataFrame和Series数据进行处理 apply(function, axis)</span><br><span class="line">&gt;&gt;&gt; import numpy as np</span><br><span class="line">&gt;&gt;&gt; a = np.random.randint(low=1,high=5,size(3,3))</span><br><span class="line">&gt;&gt;&gt; data = pd.DataFrame(a)</span><br><span class="line">&gt;&gt;&gt; data.apply(lambda x: x*100)</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">0  1  2</span><br><span class="line">0  40  40 30</span><br><span class="line">1  10  30 20</span><br><span class="line">2  10  40 30</span><br></pre></td></tr></table></figure><p><strong>装饰器</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">装饰器就是对函数封装一次，把非核心函数和处理包装到某个核心函数上，实现业务代码干净</span><br><span class="line">def fun(x):</span><br><span class="line">if not x.isdigit():</span><br><span class="line">print(&quot;Error, invalid number type.&quot;)</span><br><span class="line">c = (x-1)**2  + (x-2)**2 #离点(1,2)的距离的平方</span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line">下面写个装饰器，把判断是否为数字的函数分割出来</span><br><span class="line">def dec(fun):</span><br><span class="line">def decorator(*args, **kwargs):</span><br><span class="line">if not args.isdigit():</span><br><span class="line">print(&quot;Error, invalid number type.&quot;)</span><br><span class="line">return fun(*args, **kwargs)</span><br><span class="line">return decorator</span><br><span class="line"></span><br><span class="line">@dec</span><br><span class="line">def fun(x):</span><br><span class="line">c = (x-1)**2  + (x-2)**2 </span><br><span class="line">print(c)</span><br><span class="line">第二种写法分离了判断函数，fun里面只作一件事，计算并输出。</span><br></pre></td></tr></table></figure><p><strong>函数返回多个值</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def fun(x):</span><br><span class="line">a = x**2</span><br><span class="line">b = a + x**3</span><br><span class="line">c = b + x**4</span><br><span class="line">return a, b, c</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; a,b,c = fun(10)</span><br><span class="line">&gt;&gt;&gt; a,b,c</span><br><span class="line">(100,1100,11100)</span><br></pre></td></tr></table></figure><p><strong>求和 最大 最小 乘积和</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">L = [1,2,3,4,5]</span><br><span class="line">&gt;&gt;&gt; sum(L)</span><br><span class="line">15</span><br><span class="line">&gt;&gt;&gt; min(L)</span><br><span class="line">1</span><br><span class="line">&gt;&gt;&gt; max(L)</span><br><span class="line">5</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; from operator import mul</span><br><span class="line">&gt;&gt;&gt; from functools import reduce</span><br><span class="line">&gt;&gt;&gt; reduce(mul, L)</span><br><span class="line">120 #5的阶乘</span><br></pre></td></tr></table></figure><p><strong>找出列表中最多的元素</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num = [1,2,3,2,1,2,3,4,5,6,2,1,1,100,1,2,1,3,1]</span><br><span class="line">&gt;&gt;&gt; print(max(set(num), key=num.count)) 按频率找最大</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>少使用None</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = &apos;&apos;</span><br><span class="line">if a is None:</span><br><span class="line">do1()</span><br><span class="line">else:</span><br><span class="line">do2()</span><br><span class="line"></span><br><span class="line">python中凡是没有值或者0都是False</span><br><span class="line">if !a: </span><br><span class="line">do1()</span><br><span class="line">else:</span><br><span class="line">do2()</span><br></pre></td></tr></table></figure><p><strong>字典默认值</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;&apos;a&apos;:2,&apos;b&apos;10,&apos;c&apos;:3&#125;</span><br><span class="line">&gt;&gt;&gt; d.get(&apos;a&apos;)  </span><br><span class="line">2</span><br><span class="line">&gt;&gt;&gt; d.get(&apos;e&apos;,0) 此处默认值设置为0，确保能获取返回值</span><br><span class="line">0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/23/lpZk36.md.png&quot; alt=&quot;pythonic&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程语言" scheme="http://www.shieber.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Python" scheme="http://www.shieber.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>深度学习主流框架介绍</title>
    <link href="http://www.shieber.cn/title/714c49b4/"/>
    <id>http://www.shieber.cn/title/714c49b4/</id>
    <published>2019-12-23T02:12:43.000Z</published>
    <updated>2019-12-28T12:08:36.841Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/23/lpZ48x.md.jpg" alt="dl"></p><a id="more"></a><p>16年韩国李世石和AlphaGo人机大战后，人工智能(AI)一下火了起来，大量的学生和研究人员扑了上去，机器学习，深度学习成了通用词汇流入民间，人工智能这几年也确实造出些新鲜有用的玩意儿。在AI大火的背后是深度学习框架的加持，下面对几个主流学习框架作粗浅介绍。</p><p><strong>TensorFlow</strong></p><p><img src="https://s2.ax1x.com/2019/12/23/lSajNq.jpg" alt="tf"></p><p>TF是Google官方主推的深度学习框架，可视化，部署方便，尤其在工业界得到广泛使用，是目前使用人数最多的深度学习框架，文档丰富。当然，TF自身也有缺点，太偏底层，中间转换步骤多，要先定义流图再开始计算。TF更新后对以往代码不兼容，使得很多人一更新TF就得重构代码，令人头疼。</p><p><strong>Pytorch</strong>  </p><p><img src="https://s2.ax1x.com/2019/12/23/lSdS3T.md.jpg" alt="pytorch"></p><p>这是Facebook官方开发的深度学习框架，目前在学术界使用十分火爆，代码很pythonic，方便上手。但是pytorch没有TF的tensorboard，可视化不够好，据说最近引入了tensorboard的显示。工业界目前使用率还不高，但发展势头良好，可能未来会在工业界有更多应用。</p><p><strong>CNTK</strong>       </p><p><img src="https://s2.ax1x.com/2019/12/23/lSd9vF.jpg" alt="cntk"></p><p>Microsoft官方开发，主要在语音处理上做得优秀。</p><p><strong>Theano</strong>     </p><p><img src="https://s2.ax1x.com/2019/12/23/lSdngO.md.png" alt="Theano"></p><p>人工智能三巨头约书亚.本吉奥主导开发，主要用于学术研究，2007年诞生，到2017年停止更新，刚好10年，然而正是它推动TF等框架的开发和发展，值得大家缅怀。</p><p><strong>Caffe/Caffe2</strong>      </p><p><img src="https://s2.ax1x.com/2019/12/23/lSdlbd.jpg" alt="caffe"></p><p>伯克利大学某小组开发，由C++写成，提供Python和Matlab接口，可以在CPU和GPU上跑，然而实现中每一层都要完成前向后向传播的代码，复杂。Caffe2是原作者新创立的框架，吸收Caffe优点，可以在PC和移动端训练部署使用。</p><p><strong>MXNet</strong>      </p><p><img src="https://s2.ax1x.com/2019/12/23/lSdfr4.png" alt="mxnet"></p><p>上海交大陈天奇和李沐牵头开发，MXNet后被AWS选择为云计算官方学习平台，再后成为Apache基金会孵化项目。</p><p><strong>Keras</strong>      </p><p><img src="https://s2.ax1x.com/2019/12/23/lSd6P0.md.png" alt="keras"></p><p>一个高级API调用平台，后端可以调用TF，Theano，CNTK作为后端，上手快，但是学习瓶颈很快就到了，学不到更深入的东西。</p><p><img src="https://s2.ax1x.com/2019/12/23/lSwELQ.md.png" alt="vs"></p><p>目前的大趋势是TF和Pytorch正面比拼，一个工业界，一个学术界，两者的使用人数都多。未来就看这两家谁发展得更好了，毕竟背后是Google和Facebook这两个巨擘在支持。初学的话，先用keras连连手，接着可以选用这两者的任意一个来学习。</p><p>同样一个功能，我们可以对比其实现的代码量，如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#1.TensorFlow</span><br><span class="line">import tensorflow as tf</span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line">def func1(x, w):</span><br><span class="line">return tf.matmul(x, w)</span><br><span class="line"></span><br><span class="line">def func2(x, w):</span><br><span class="line">return tf.matmul(x, w)</span><br><span class="line"></span><br><span class="line">M, N, K = 4, 5, 6</span><br><span class="line">X  = tf.placeholder(tf.float32, shape=(M, N))</span><br><span class="line">Z  = tf.placeholder(tf.float32, shape=None)</span><br><span class="line">W1 = tf.placeholder(tf.float32, shape=(N,K))</span><br><span class="line">W2 = tf.placeholder(tf.float32, shape=(N,K))</span><br><span class="line">y  = tf.cond(tf.less(Z,1), func1, func2)</span><br><span class="line"></span><br><span class="line">with tf.Session() as s:</span><br><span class="line">val = &#123;</span><br><span class="line">X: np.random.randn(M, N),</span><br><span class="line">Z: 10,</span><br><span class="line">W1: np.random.randn(N,K),</span><br><span class="line">W1: np.random.randn(N,K)</span><br><span class="line">&#125;</span><br><span class="line">y_val = s.run(y, feed_dict=val)</span><br><span class="line"></span><br><span class="line">#2.Pytorch</span><br><span class="line">import torch as t</span><br><span class="line">from torch.autograd imort Variable</span><br><span class="line"></span><br><span class="line">M, N, K = 4, 5, 6</span><br><span class="line">X = Variable(t.randn(M, N))</span><br><span class="line">W1 = Variable(t.randn(N, K))</span><br><span class="line">W2 = Variable(t.randn(N, K))</span><br><span class="line"></span><br><span class="line">Z = 10</span><br><span class="line"></span><br><span class="line">if 1 &lt; Z:</span><br><span class="line">y = X.mm(W1)</span><br><span class="line">else:</span><br><span class="line">y = X.mm(W2)</span><br></pre></td></tr></table></figure><p>当然，框架只是工具，重要的是我们的想法，算法，代码，Talk is cheap, show me the code!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/23/lpZ48x.md.jpg&quot; alt=&quot;dl&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="AI" scheme="http://www.shieber.cn/categories/AI/"/>
    
    
      <category term="DL" scheme="http://www.shieber.cn/tags/DL/"/>
    
  </entry>
  
  <entry>
    <title>每日PS技巧14：去除图片水印并美化图片</title>
    <link href="http://www.shieber.cn/title/e2d5c0dc/"/>
    <id>http://www.shieber.cn/title/e2d5c0dc/</id>
    <published>2019-12-22T05:49:54.000Z</published>
    <updated>2019-12-22T06:36:45.721Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/22/QxTJC8.md.jpg" alt="PS14_1"></p><a id="more"></a><p>有的图片，被打上各种水印，尤其嵌套水印，这家加一个水印，那家再来一个，看着确实厌烦，所以很多时候我们需要去除掉这些水印。常规方法去水印有4种方法，分别对应半透明和不透明的情况。然而我们大多数时候是拿到不透明的水印，这时候只有好好利用橡皮图章和修复工具一点点修复。</p><h2 id="今日技巧-去除图像水印并美化"><a href="#今日技巧-去除图像水印并美化" class="headerlink" title="今日技巧 [去除图像水印并美化]"></a>今日技巧 [去除图像水印并美化]</h2><p>主要步骤：  </p><p>1) 打开图像素材<br>2) 图章修复部分区域<br>3) 利用修复工具修复细节<br>4) 开调整图层，加饱和度，调色阶和色彩平衡。<br>5) 图片锐化，蓝色通道高反差保留，输出图片。  </p><p>首先导入图片素材，可以看到右下角水印，还是多个，十分不好看。</p><p><img src="https://s2.ax1x.com/2019/12/22/Qx7RW8.md.jpg" alt="PS14_2"></p><p>最简单的方法，直接截掉水印部分，如下图。</p><p><img src="https://s2.ax1x.com/2019/12/22/Qx72Jf.md.jpg" alt="PS14_9"></p><p>但是，这样图片就不完整了，少了一块，看着不舒服，估计也没有哪位女生喜欢自己被截掉一部分吧! 所以得保留图片，要完整去除水印。打开图章工具，利用完整皮肤部分盖印到水印部分，细节部分用修复工具慢慢修复。</p><p><img src="https://s2.ax1x.com/2019/12/22/Qx7BsH.md.jpg" alt="PS14_9"></p><p>注意，人的皮肤有纹理的，比如这位女生手臂上有的地方更白一些，有的偏黄一点，要保留好颜色细节，不可都弄成白色的，那样会不协调。手指部分结合处有暗调，也要保留，不然五指成合并态，没有细节信息。</p><p><img src="https://s2.ax1x.com/2019/12/22/Qx7dzD.md.jpg" alt="PS14_9"></p><p>最后恢复过来，就是这样，当然，皮肤有些问题，需要调整。</p><p><img src="https://s2.ax1x.com/2019/12/22/Qx7YIx.md.jpg" alt="PS14_8"></p><p>打开滤镜，打开磨皮插件界面，调节平滑度，使得皮肤更自然。</p><p><img src="https://s2.ax1x.com/2019/12/22/Qx7Pxg.md.jpg" alt="PS14_5"></p><p><img src="https://s2.ax1x.com/2019/12/22/QxT68U.md.jpg" alt="PS14_4"></p><p>最后打开色阶，色彩平衡，色相饱和度三个调整图层，分别调节。这是处理人像必备流程，听说国际顶级摄影师拍摄的高质量图片本身已经很好了，他们最后做的流程就是打开这几个调整图层，细微调整，让人物更饱满，健康，接着就可以输出图像了。</p><p>如果要做点梦幻的感觉，就选择通道&gt;蓝色通道(红绿蓝三色通道，只有蓝色有梦幻感觉，红色是血腥，绿色是怪物)，复制蓝色通道。</p><p><img src="https://s2.ax1x.com/2019/12/22/Qx7Jd1.md.jpg" alt="PS14_7"></p><p>滤镜&gt;其他&gt;高反差保留&gt;半径4&gt;确定。这就是人物细节，为了锐化图片，让人物更凸显。</p><p><img src="https://s2.ax1x.com/2019/12/22/Qx7FMQ.md.jpg" alt="PS14_6"></p><p>回到图层界面，设置图层模式，柔光模式。</p><p><img src="https://s2.ax1x.com/2019/12/22/QxLocT.md.jpg" alt="PS14_7"></p><p>最后附上原图和效果图，原图：2016.4.22 某学校微博公开图片。</p><p><img src="https://s2.ax1x.com/2019/12/22/QxTr5V.md.jpg" alt="PS14_10"></p><p><img src="https://s2.ax1x.com/2019/12/22/QxTNvQ.md.jpg" alt="PS14_11"></p><p><img src="https://s2.ax1x.com/2019/12/22/QxTJC8.md.jpg" alt="PS14_12"></p><p>对人物图像，尤其女生，越年轻就越要少用特效和滤镜，因为年轻女生本身就有优势，皮肤好，越多特效就越损害人物形象，特效多了，看着怪怪的，不自然。越漂亮的女性就越要少用滤镜，本身就好看的，你一插手，就全毁了。我看很多女生自己就特别爱开什么滤镜，简直夸张，滤镜越多就越显得她们不自信，真是悲哀。美是这个时代的追求，但是有个度，千万别过头！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/22/QxTJC8.md.jpg&quot; alt=&quot;PS14_1&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://www.shieber.cn/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="PS" scheme="http://www.shieber.cn/tags/PS/"/>
    
  </entry>
  
  <entry>
    <title>换个搜索引擎吧！</title>
    <link href="http://www.shieber.cn/title/f6f1ade3/"/>
    <id>http://www.shieber.cn/title/f6f1ade3/</id>
    <published>2019-12-21T09:45:14.000Z</published>
    <updated>2019-12-21T13:35:25.585Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/21/Qvt1UO.md.png" alt="bingcover"> </p><a id="more"></a><p>随着社会发展，科技爆发，个人对信息获取的需求逐渐多了起来。自然地，各种信息就泛滥成灾了。当前时代已不再是过去那种确少信息资料的时代，今天信息实在太多，我们不再是找不到信息，而是如何找到有价值的信息。</p><p>说起信息获取，我们普遍依赖搜索引擎。搜索引擎是一个工具，当用户在搜索框中输入检索内容，引擎开动，从数据库或互联网上抓取各种相关的信息，整理好后返回给用户。忽略技术细节，搜索引擎就是输入个文本，点击搜索，得到结果。我们使用的百度，谷歌等都是搜索引擎。</p><p>然而，不同的引擎返回的结果却是很不同的，有的引擎返回的结果充满了广告和无关内容，甚至淫秽内容。所以一款干净，高效的引擎才能迎应用户的需要。就拿百度来说吧，作为中国最大的搜索平台，百度的搜索结果并不那么令人满意，尤其前几年魏则西事件，引发公众强烈谴责。我个人使用的引擎主要是Bing，就是封面图片上的搜索引擎，该引擎由美国微软公司开发，分为国内和国际版，可自由切换。搜索的内容广告少，往往一搜就能找到自己想要的内容。</p><p>本文打算对比各种搜索引擎的搜索结果，进而作为用户选择搜索引擎的参考信息。我与任何一家公司无利益纠葛，不是打广告，纯粹从个人使用上讨论，主要还是方便用户，节约时间，让我们轻松面对生活和工作。</p><p>本文主要介绍七款搜索引擎，以下是其对应的登录界面。</p><p>这是百度的搜索界面，想必中国人已经很熟悉。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvyeuF.md.png" alt="baiduf"></p><p>这是微软Bing(必应)搜索界面，可能很多人还不知道，它每天0点自动换封面图片，让你每天都有好心情，我每天都使用它，早上打开电脑第一件事就是看图。</p><p><img src="https://s2.ax1x.com/2019/12/21/Qvt1UO.md.png" alt="bing"> </p><p>这是俄罗斯的Yandex，类似国内的百度。</p><p><img src="https://s2.ax1x.com/2019/12/21/Qvy8gK.md.png" alt="yandexf"></p><p>这是秘迹搜索，它集合了好几个搜索引擎的搜索结果，且该引擎不收集你输入的搜索信息。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvyBCt.md.png" alt="mijif"></p><p>这是多吉搜索，它也集合了好几个搜索引擎的搜索结果，该引擎也不收集你输入的搜索信息。</p><p><img src="https://s2.ax1x.com/2019/12/21/Qvyrgf.md.png" alt="dogef"></p><p>这是搜狗搜索，搜狗输入法那个搜狗，可能它在输入法上出名些。</p><p><img src="https://s2.ax1x.com/2019/12/21/Qvysv8.md.png" alt="sougouf"></p><p>这是360搜索，360公司开发的，就是开发手机360管家那个公司。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvyREj.md.png" alt="360f"></p><p>除了提到不收集搜索信息的两款引擎，其他的都会收集并保存你搜索过的信息，比如你在搜索框输入一个字，马上下面出现一堆内容，就是别人搜过的高频内容。这种信息收集看个人是否在意，我认为一般没什么问题。还有谷歌的浏览器和引擎我没列出，因为国内使用不方便，要么没法儿用。但搜索引擎最厉害的还是它，全球占有近7成以上，要是中国开放，估计得9成以上，百度也就没它啥事儿了。说个真事，百度公司很多程序员也用谷歌浏览器，反而自家的不用，甚至开发百度浏览器的程序员也用谷歌！</p><p>下面使用相同的信息进行搜索，看看它们各自返回的广告和信息准确度吧，只展示前面几条搜索结果，因为大部分人就看前几条结果，前面几条的返回内容影响着大部分用户的页面点击行为。</p><p><img src="https://s2.ax1x.com/2019/12/21/Qv2JJA.md.png" alt="baidu"></p><p>很明显，百度直接返回什么医生在线网，这就是百度的竞价排名策略下的搜索结果，这些医院到百度交钱，可能你点一次百度收300块钱，所以它把这些交钱网站放在你搜索的首页实现盈利(百度的做法是合法的，可能不合道德标准，比如为了钱什么的)。实际上，你去看绿色的字，发现全是广告，没有有价值的东西。</p><p><img src="https://s2.ax1x.com/2019/12/21/Qv2tzt.md.png" alt="bing"></p><p>再看Bing的结果，返回的内容就要好些了，第一条是知乎上的讨论，可以查到有用的信息，说不定还有用户分享自己的经历，你点进去看看结合自己的情况可能会知道怎么回事，第二条也是广告。</p><p><img src="https://s2.ax1x.com/2019/12/21/Qv2dL8.md.png" alt="yandex"></p><p>Yandex直接返回治疗手册，还有下面是什么鬼，怎么是女人呢？难道心痛和女人有关？</p><p><img src="https://s2.ax1x.com/2019/12/21/Qv20eS.md.png" alt="miji"></p><p>密迹返回了知乎和百科定义，也有百度经验。你看百度自己不返回自家的百度经验，反而别人会返回它的百度经验，这更说明百度首页广告多的事实，先放赚钱的，后放其他。百科是一种类似词典词条一样的东西，就是为了说明什么是什么？所以百度有自家的百度百科，搜狗也有搜狗百科，360有360百科，所以不要以为百科就都是百度家的内容。</p><p><img src="https://s2.ax1x.com/2019/12/21/Qv24wF.md.png" alt="doge"></p><p>多吉也是返回的知乎讨论，一条百度经验和可能的广告，不要看什么人民网就以为是权威网站，可能它就是故意取的这个名，要自己多判断。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvRufs.md.png" alt="sougo"></p><p>搜狗返回百科知识和广告，百科还是有用的，可以看看具体定义，至于广告嘛，和百度有的一拼。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvRl60.md.png" alt="360"></p><p>360全是广告，什么医院和医生啦，一堆。</p><p>下面再搜索竞价排名，看看结果吧。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvRrnK.md.png" alt="baiduweb"></p><p>百度干脆，第一条就是入口，意思你要投放广告，搞竞价排名直接找它。所以百度，客观的说，上面广告多，当然，广告质量好不好消费者自己判断，不要被骗就是了，因为百度也不知道它是不是诈骗网站。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvRs0O.md.png" alt="bingweb"></p><p>Bing返回竞价排名各种百科定义，还有知乎上的讨论。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvRW9A.md.png" alt="yandexweb"></p><p>Yandex返回定义和百度的丑闻，当然，下面也有一条竞价排名的广告入口。然后，又是女人，卧操，这玩意儿干啥都不忘女人呢？</p><p><img src="https://s2.ax1x.com/2019/12/21/QvR4jP.md.png" alt="mijiweb"></p><p>密迹也是各种百科定义，以及最后一条对百度赚钱手段的揭示。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvRInf.md.png" alt="dogeweb"></p><p>多吉还是百科定义和知乎讨论。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvRvj0.md.png" alt="sougoweb"></p><p>搜狗第一条也是广告入口，意思打广告也可以找他，看来搜狗和百度学了，也搞这么一套，当然，这是合法的，只是广告内容如何，实在不知。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvRzuV.md.png" alt="360web"></p><p>360给百科定义和分析文章。</p><p>要用什么搜索引擎，自己选吧，就这么几款。我选的Bing，一是图好看，二是结果也还可以，广告没那么多，关键还有国内和国际版，搜索结果又多了一些。如何设置呢？我们可能使用着各种浏览器，比如谷歌Chrome，火狐，QQ，欧朋，UC，猎豹，2345，IE，Edge等等这些浏览器。你可以在里面自己设置搜索引擎，一般都内置有好几个，没有也可以自己添加，只要打开浏览器进设置里设置对应的搜索引擎就好了。个人推荐，中国人，用火狐浏览器加Bing搜索引擎，我就用的这个，因为，我可以自己定义软件行为，而且信息也不容易泄漏，火狐隐私安全及保护做的很好的。火狐的开发组织Mozilla历史悠久，其先祖诞生于互联网创世纪，互联网诞生的第一个浏览器Mosaic是其直系祖先，而后是Navigator，要不是比尔.盖茨耍手段击败Navigator，估计今天谷歌也成长不起来，Mozilla和苹果的Safari等今天是WWW万维网标准制定的成员。对于普通的用户，你干脆的，卸载手机和电脑上的各种奇葩浏览器，下载安装火狐并设置引擎为Bing，真的，我就这么用的，安全，高效，多活几年它不香吗？相当多的黑客，程序员们都用火狐，我们普通人为何不跟上呢？</p><p>当然最隐私的是洋葱(Tor)浏览器，访问暗网必备。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvsZTA.md.png" alt="darkweb"> </p><p>Tor是美国政府和国家科学基金会支持开发的，Tor搜索的内容通过技术手段查不出来，所以上面干坏事的多，什么枪支，色情，毒品多半通过它交易。暗网并不可怕，可怕的是你的好奇心和邪恶的想法，上面主要还是看钱，主要卖东西，只是非法买卖而已。美国支持开发的目的是为了支持集权国家的活动家，同时他们的特工搜集全球信息，追捕逃犯，打击犯罪。滑稽的是，这反而促进了犯罪，因为查不出来谁干的，所以走私军火，雇佣杀人上面也有。干坏事的黑客们在上面卖公民隐私(比如身份证信息，学籍，银行卡，各种账户和密码)，真是暴利。2018年华住酒店2.4亿开房数据在暗网公开售卖，6月10亿圆通快递信息公开售卖，6月A站900万用户数据公开售卖，8月顺丰3亿交易信息公开售卖，10月国泰航空940万用户信息泄漏，12月12306个人火车购票账户信息和密码也公开在上面售卖(410多万人的)，这只是公开的，还有很多没被发现的，各种公司泄漏的，太多了。12306泄漏纯属个人用户不用官方软件反而去用什么抢票插件，软件，然后输入身份证号，密码，这些软件安全做得不好被黑客攻击提取到了。所以老老实实用12306官方软件，密码适时更改。一般人你搜是搜不到暗网入口的，我估计很多人听都没听说过，还以为世界如此美好，不知道还有黑暗面，知道了也好，多个心眼儿。下图中，各种信息都在交易，什么网贷，汽车信息，邮件信息，某某女孩信息等等，全是钱的味道。这玩意儿，少碰为好，遵守法律，走人间正道。本文写这个就是给普通用户提升安全意识，不要乱用软件，干正事就用官方软件。别去抢什么票，你不知道你在这里抢，别人也在那里抢，别人在抢你的信息。就说这么多吧，懂的自然就懂了。</p><p><img src="https://s2.ax1x.com/2019/12/21/QvsBXF.md.jpg" alt="darkweb"> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/21/Qvt1UO.md.png&quot; alt=&quot;bingcover&quot;&gt; &lt;/p&gt;
    
    </summary>
    
      <category term="浏览器" scheme="http://www.shieber.cn/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
    
      <category term="tools" scheme="http://www.shieber.cn/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>每日PS技巧13：保护图像以拉伸</title>
    <link href="http://www.shieber.cn/title/7d335d56/"/>
    <id>http://www.shieber.cn/title/7d335d56/</id>
    <published>2019-12-17T02:25:26.000Z</published>
    <updated>2019-12-16T14:15:09.165Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/16/Q5Jhq0.png" alt="PS13_1"></p><a id="more"></a><p>昨天的图片感觉窄了一点儿，今天试图将其拉伸。然而，图中人物在拉伸过程中也会变宽，把妹妹变宽了就不好看来。所以，这次尝试建立保护选区，使得拉伸过程中，人物区域不变化。</p><h2 id="今日技巧-保护图像以拉伸"><a href="#今日技巧-保护图像以拉伸" class="headerlink" title="今日技巧 [保护图像以拉伸]"></a>今日技巧 [保护图像以拉伸]</h2><p>主要步骤：  </p><p>1) 打开图像素材<br>2) 利用矩形选区建立人物选区，并存储选区<br>3) 使用只能图像变换，选择刚保存的选区<br>4) 拉伸图像，此时保护选区中人物不变形</p><p>首先导入图片素材，利用左边矩形选区工具建立选区。</p><p><img src="https://s2.ax1x.com/2019/12/16/Q5JOMR.md.png" alt="PS13_2"></p><p>在选择里，存储选区，名字可随便设置，比如save</p><p><img src="https://s2.ax1x.com/2019/12/16/Q5JzdK.md.png" alt="PS13_3"></p><p>接着，在图像&gt;画布大小里，设置宽度增加100，可随意指定，接着在编辑里选择内容识别缩放。</p><p><img src="https://s2.ax1x.com/2019/12/16/Q5Y1Qs.md.png" alt="PS13_4"></p><p>在上面的保护选框中选择刚保存的选区save</p><p><img src="https://s2.ax1x.com/2019/12/16/Q5YAsI.md.png" alt="PS13_5"></p><p>也可以调整到中间。</p><p><img src="https://s2.ax1x.com/2019/12/16/Q5YBl9.md.png" alt="PS13_6"></p><p>然后，拉伸，可以看到人物没变形。</p><p><img src="https://s2.ax1x.com/2019/12/16/Q5Yx6s.md.png" alt="PS13_7"></p><p>最后附上原图和效果图，原图：2018.6.21 10:48:20 Baidu图片。</p><p><img src="https://s2.ax1x.com/2019/12/16/Q5tltO.png" alt="PS13_8"></p><p><img src="https://s2.ax1x.com/2019/12/16/Q5Jhq0.png" alt="PS13_9"></p><p>可以看到，石头和海面都拉伸，人物保留得很好。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/16/Q5Jhq0.png&quot; alt=&quot;PS13_1&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://www.shieber.cn/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="PS" scheme="http://www.shieber.cn/tags/PS/"/>
    
  </entry>
  
  <entry>
    <title>每日PS技巧12：图像去模糊</title>
    <link href="http://www.shieber.cn/title/f3df35e2/"/>
    <id>http://www.shieber.cn/title/f3df35e2/</id>
    <published>2019-12-16T12:18:35.000Z</published>
    <updated>2019-12-16T12:33:19.719Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/16/Q5e7PP.png" alt="PS12_1"></p><a id="more"></a><p>有的时候，图片没对好焦，拍的照片有些模糊，实际上利用PS可以恢复到一定程度。</p><h2 id="今日技巧-图像去模糊"><a href="#今日技巧-图像去模糊" class="headerlink" title="今日技巧 [图像去模糊]"></a>今日技巧 [图像去模糊]</h2><p>主要步骤：  </p><p>1) 打开图像素材<br>2) 利用Ctrl+Shif+U去色<br>3) 在去色图层上施加滤镜&gt;其他&gt;高反差保留(半径在2~5，要自行调节)<br>4) 保存发布</p><p>首先导入图片素材，下面是未调整的原图。</p><p><img src="https://s2.ax1x.com/2019/12/16/Q5eOKg.md.png" alt="PS12_2"></p><p>首先去色 Ctrl+Shif+U，去色的目的是为了得到灰调图(没有色彩信息，只有结构信息，我们利用结构信息以去模糊)</p><p><img src="https://s2.ax1x.com/2019/12/16/Q5mAr4.md.png" alt="PS12_3"></p><p>接着，施加高反差保留的滤镜(高反差，意味着图像结构信息很鲜明，反差大，得以保留)</p><p><img src="https://s2.ax1x.com/2019/12/16/Q5mKG6.md.png" alt="PS12_4"></p><p>接下来，将该灰调图层的模式设置为叠加（将高反差结构信息和原彩色图叠加，去除模糊）</p><p><img src="https://s2.ax1x.com/2019/12/16/Q5mTeJ.md.png" alt="PS12_5"></p><p>最后附上原图和效果图，原图：2018.6.21 10:48:20 Baidu图片。两图对比看，还是能看出差别。</p><p><img src="https://s2.ax1x.com/2019/12/16/Q5na79.png" alt="PS12_7"></p><p><img src="https://s2.ax1x.com/2019/12/16/Q5e7PP.png" alt="PS12_8"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/16/Q5e7PP.png&quot; alt=&quot;PS12_1&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://www.shieber.cn/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="PS" scheme="http://www.shieber.cn/tags/PS/"/>
    
  </entry>
  
  <entry>
    <title>docker安装与使用</title>
    <link href="http://www.shieber.cn/title/2e9dcbbc/"/>
    <id>http://www.shieber.cn/title/2e9dcbbc/</id>
    <published>2019-12-11T10:33:28.000Z</published>
    <updated>2019-12-11T11:55:49.383Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/11/QsBuLD.png" alt="docker"></p><a id="more"></a><p><strong>docker基本概念</strong><br>docker是一种类似虚拟机的东西，但是占用不高，启动快。<br>镜像(image)就是docker中的模版，容器依赖于它而生成。<br>仓库，是远程存放镜像的地方，可以联网获取各种image。<br>容器是docker的实质，docker是linux下容器技术的封装。<br>可以把容器看成一个进程，运行后可以删除，要再运行就用Image再生成。  </p><p>docker大概工作流程:<br>1.获取image或自己创建image<br>2.利用image生成容器服务  </p><p><strong>docker在Ubuntu下的安装</strong><br>1.卸载老版本并更新软件包信息(如果有的话)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove --purge docker docker-engine docker.io containerd runc</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>2.安装repository</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common</span><br></pre></td></tr></table></figure><p>3.添加docker官方GPG Key</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>4.验证你有该key，输出是pub rsa等若干行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key fingerprint  0EBFCD88</span><br></pre></td></tr></table></figure><p>5.添加软件仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br></pre></td></tr></table></figure><p>6.更新包信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>7.安装docker组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><p>8.测试安装是否成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker version</span><br></pre></td></tr></table></figure><p>9.更换image下载源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/default/docker </span><br><span class="line">添加如下一行</span><br><span class="line">DOCKER_OPTS=&quot;--registry-mirror=https://registry.docker-cn.com&quot;</span><br><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure><p><strong>docker的image操作</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sudo service docker start                      #运行</span><br><span class="line">sudo service docker stop                       #停止</span><br><span class="line">sudo docker image ls                           #列出image</span><br><span class="line">sudo docker image rm imageName                 #删除image</span><br><span class="line">sudo docker image pull library/hello-world     #从远程仓库下载hello-world镜像</span><br><span class="line">sudo docker container ls                       #查看运行的容器</span><br><span class="line">sudo docker container ls --all                 #查看所有的容器</span><br><span class="line">sudo docker container run hello-world          #运行image</span><br><span class="line">sudo docker container run -it hello-world bash #运行image并指定shell</span><br><span class="line">sudo docker container kill containerID         #终止容器</span><br><span class="line">sudo docker container rm   containerID         #删除容器</span><br><span class="line">sudo docker search python                      #搜索python相关image</span><br><span class="line"></span><br><span class="line">sudo docker run -d --rm --name xxxx_service --env MYSQL_ROOT_PASSWORD=xxxx \</span><br><span class="line">--env MYSQL_DATABASE=xxxx_service mysql:8.0.18</span><br><span class="line">#运行一个基于mysql 8.0.18的服务 -d指定后台服务，--rm指定服务运行完毕自动删除容器文件</span><br></pre></td></tr></table></figure><p><strong>docker容器制作</strong><br>1.下载服务(随意指定)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/acount/xxx.git</span><br></pre></td></tr></table></figure><p>2.编写.dockerignore</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.git</span><br><span class="line">node_modules</span><br><span class="line">npm-debug.log</span><br></pre></td></tr></table></figure><p>3.编写dockerfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM node:12.13.1 #使用node</span><br><span class="line">COPY . /app       #将当前目录下所有文件打包进image的/app目录</span><br><span class="line">WORKDIR /app      #指定工作路径</span><br><span class="line">RUN npm install --registry=https://registry.np.taobao.org  #安装依赖项</span><br><span class="line">EXPOSE 3000       #指定端口</span><br></pre></td></tr></table></figure><p>4.创建image</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker iamge build -t xxx-demo . #这个小点.指代dockerfile所在目录</span><br></pre></td></tr></table></figure><p>5.运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker container run -p 8000:3000 -it xxx-demo /bin/bash</span><br></pre></td></tr></table></figure><p><strong>docker搭建hexo博客</strong><br>1.编写对应的dockerfile(也可以从仓库下载image)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">FROM node:latest AS build-env</span><br><span class="line">RUN mkdir -p /home/username/env/hexo-blog #要是已经创建就可以省去</span><br><span class="line">WORKDIR /home/username/env/hexo-blog</span><br><span class="line">COPY . .  #复制当前目录文件到hexo-blog</span><br><span class="line">RUN npm --registry=https://registry.np.taobao.org install hexo-cli -g &amp;&amp; npm install</span><br><span class="line">RUN hexo clean &amp;&amp; hexo hexo g</span><br><span class="line"></span><br><span class="line">FROM nginx:lates</span><br><span class="line">ENV TZ=Asia/Shanghai</span><br><span class="line">RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime &amp;&amp; echo $TZ &gt; /etc/timezone</span><br><span class="line">WORKDIR /usr/share/nginx/html</span><br><span class="line">COPY --from=build-env /home/username/env/hexo-blog/public /user/share/nginx/html</span><br><span class="line">EXPOSE 80</span><br></pre></td></tr></table></figure><p>2.运行hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo docker build -t hexo_nginx:latest .</span><br><span class="line">sudo run -p 80:80 -d hexo_nginx:latest</span><br></pre></td></tr></table></figure><p><strong>docker的image发布</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo docker login</span><br><span class="line">sudo docker tag [imageName] [username]/[repository]:[tag] #为image打标签和版本</span><br><span class="line">sudo docker image push [username]/[repository]:[tag]      #发布</span><br></pre></td></tr></table></figure><p><strong>docker拷贝并部署到其他机器</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">打包文件</span><br><span class="line">sudo docker svae -o markdown:hexo1.2 ./my-hexo1.2.tar </span><br><span class="line">新电脑解包文件，安装号docker后就可以运行</span><br><span class="line">sudo docker load &lt; my-hexo1.2.tar</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/11/QsBuLD.png&quot; alt=&quot;docker&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="微服务" scheme="http://www.shieber.cn/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    
      <category term="docker" scheme="http://www.shieber.cn/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>每日PS技巧11：曲线</title>
    <link href="http://www.shieber.cn/title/b00ea4f1/"/>
    <id>http://www.shieber.cn/title/b00ea4f1/</id>
    <published>2019-12-10T07:53:30.000Z</published>
    <updated>2019-12-10T08:09:30.747Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/10/QB5J1J.md.png" alt="PS11_1"> </p><a id="more"></a><p>今天学习滤镜中的径向模糊。</p><h2 id="今日技巧-径向模糊"><a href="#今日技巧-径向模糊" class="headerlink" title="今日技巧 [径向模糊]"></a>今日技巧 [径向模糊]</h2><p>主要步骤：  </p><p>1) 打开图像素材<br>2) 添加色彩平衡调整图层<br>3) 添加曲线调整图层<br>4) 保存发布</p><p>首先导入图片素材，下面是原图。</p><p><img src="https://s2.ax1x.com/2019/12/10/QBIp34.md.png" alt="PS11_2">  </p><p>发现左下角有文字，复制背景图层，然后在上面用图章盖印掉。</p><p><img src="https://s2.ax1x.com/2019/12/10/QBIiuR.md.png" alt="PS11_3"> </p><p>添加色彩平衡调整图层，使得图层显示淡淡的蓝色。调整图层的意思是，不用修改原图，直接把效果叠加上原图。</p><p><img src="https://s2.ax1x.com/2019/12/10/QBIZ4O.md.png" alt="PS11_4"> </p><p>添加曲线调整图层，该工具可以调整整个图片的亮度，实际就是一个函数$$y = kx$$，通过如图的调节变为了$$y=ax^2$$的类型，使得图片整体的色彩分布更有特色，有突出，而不是线性的模式。</p><p><img src="https://s2.ax1x.com/2019/12/10/QBIlDI.md.png" alt="PS11_5"> </p><p>最后附上原图和效果图，原图：2018.6.19 Baidu图片。</p><p><img src="https://s2.ax1x.com/2019/12/10/QBIGUf.md.png" alt="PS11_7"> </p><p><img src="https://s2.ax1x.com/2019/12/10/QB5J1J.md.png" alt="PS11_8"> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/10/QB5J1J.md.png&quot; alt=&quot;PS11_1&quot;&gt; &lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://www.shieber.cn/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="PS" scheme="http://www.shieber.cn/tags/PS/"/>
    
  </entry>
  
  <entry>
    <title>每日PS技巧10：径向模糊做车灯</title>
    <link href="http://www.shieber.cn/title/910f1429/"/>
    <id>http://www.shieber.cn/title/910f1429/</id>
    <published>2019-12-09T05:51:10.000Z</published>
    <updated>2019-12-09T06:30:15.993Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/09/QwlJDe.md.png" alt="PS10_1"> </p><a id="more"></a><p>今天学习滤镜中的径向模糊。</p><h2 id="今日技巧-径向模糊"><a href="#今日技巧-径向模糊" class="headerlink" title="今日技巧 [径向模糊]"></a>今日技巧 [径向模糊]</h2><p>主要步骤：  </p><p>1) 打开图像素材<br>2) 加入黑色图层和空白图层<br>3) 在白色图层上用画笔画圆，且模式为溶解<br>4) 对白色图层施加滤镜里的径向模糊<br>5) 重复滤镜动作得到灯光效果<br>6) 移动位置，复制一份，得到两个灯光<br>7) 车身和环境调色<br>8) 保存发布</p><p>首先导入图片素材，下面是原图。</p><p><img src="https://s2.ax1x.com/2019/12/09/QwlwCt.md.png" alt="PS10_2"></p><p>新建图层，填充为黑色，再在黑色图层上创建空白图层，使用半径为45的画笔，硬度为0%，在中间画一个点，并调整该图层模式为溶解.再在空白图层和黑色图层间创建空白图层，合并两个空白图层(这一步是为了使模式变为正常）。如下图：</p><p><img src="https://s2.ax1x.com/2019/12/09/QwlyDg.md.png" alt="PS10_3"></p><p>使用滤镜中的径向模糊，调整为缩放模式，最大点数。</p><p><img src="https://s2.ax1x.com/2019/12/09/Qwl7b4.md.png" alt="PS10_4"></p><p>初步效果如下：</p><p><img src="https://s2.ax1x.com/2019/12/09/Qwlj8x.md.png" alt="PS10_5"></p><p>然后，重复执行Ctrl+Alt+F，也就是多次重复刚刚的滤镜动作，可以得到下图的灯光样式。如果不行，试试复制图层。</p><p><img src="https://s2.ax1x.com/2019/12/09/Qw1prD.md.png" alt="PS10_6"></p><p>此时可以打开车身图层，看看效果。</p><p><img src="https://s2.ax1x.com/2019/12/09/Qw1API.md.png" alt="PS10_7"></p><p>效果一般般吧，但车身色彩不行，我们添加色相饱和度和色彩平衡图层，调节车身和环境颜色。</p><p><img src="https://s2.ax1x.com/2019/12/09/Qw1uqg.md.png" alt="PS10_8"></p><p>最后，加上灯光。可以看到，调整后的环境还是被灯光给破坏了，颜色明显淡了，这时对比的结果。</p><p><img src="https://s2.ax1x.com/2019/12/09/Qw1MZQ.md.png" alt="PS10_9"></p><p>最后附上原图和效果图，原图：2018.6.18 Baidu图片。<br><img src="https://s2.ax1x.com/2019/12/09/Qw1ULF.md.png" alt="PS10_XI"></p><p><img src="https://s2.ax1x.com/2019/12/09/Qw18Gq.md.png" alt="PS10_X"></p><p><img src="https://s2.ax1x.com/2019/12/09/QwlJDe.md.png" alt="PS10_XII"> </p><p>调过色的图果然要好一点儿，灯光亮瞎狗眼，哈哈，今天就这样吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/09/QwlJDe.md.png&quot; alt=&quot;PS10_1&quot;&gt; &lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://www.shieber.cn/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="PS" scheme="http://www.shieber.cn/tags/PS/"/>
    
  </entry>
  
  <entry>
    <title>每日PS技巧9：照片换色</title>
    <link href="http://www.shieber.cn/title/51ed8652/"/>
    <id>http://www.shieber.cn/title/51ed8652/</id>
    <published>2019-12-08T05:41:28.000Z</published>
    <updated>2019-12-17T08:13:06.699Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/08/QaPYnS.md.png" alt="PS9_1"> </p><a id="more"></a><p>今天学习图像颜色替换，把封面中的花色调出来。</p><h2 id="今日技巧-图像换色"><a href="#今日技巧-图像换色" class="headerlink" title="今日技巧 [图像换色]"></a>今日技巧 [图像换色]</h2><p>主要步骤：  </p><p>1) 打开图像可选颜色<br>2) 调节参数并保存</p><p>首先导入图片素材，我们首先试试色相饱和度能不能行。</p><p><img src="https://s2.ax1x.com/2019/12/08/QaiCDS.md.png" alt="PS9_2"></p><p>花是黄色，所以选择对黄色色相进行调节，下图显示，结果不好，而且人脸变色严重，值发绿。</p><p><img src="https://s2.ax1x.com/2019/12/08/QaiFEQ.md.png" alt="PS9_3"></p><p>所以，可以试试可选颜色以调整颜色的值。</p><p><img src="https://s2.ax1x.com/2019/12/08/Qaieg0.md.png" alt="PS9_4"></p><p>因为要改变黄色为粉红色，而黄色和红色挨着，所以一并调节黄色和红色的值，同时减少青色的值，具体值自己一试就知道了，按效果来调节。</p><p><img src="https://s2.ax1x.com/2019/12/08/Qaitv6.md.png" alt="PS9_5"></p><p>然后我们发现人脸也变色了，变得特别红，所以需要恢复原图人脸的颜色，同时保留花儿变化后的颜色。可以使用蒙版对人脸进行恢复。如下图，恢复的人脸和没恢复的，差别明显。</p><p><img src="https://s2.ax1x.com/2019/12/08/QaiRr8.md.png" alt="PS9_6"></p><p>把人脸调节完，基本就可以了，当然，大体可以，细节还不行，学习就到这一步，细节微调属于其他技巧。</p><p><img src="https://s2.ax1x.com/2019/12/08/QaF9R1.md.png" alt="PS9_7"></p><p>下面附上原图和效果图，原图来源：2019.12.07 毕业班级照片校色图。</p><p><img src="https://s2.ax1x.com/2019/12/07/QtYtQU.md.png" alt="PS9_8"> </p><p><img src="https://s2.ax1x.com/2019/12/08/QaPYnS.md.png" alt="PS9_9"> </p><p>当然，还可以调成其他颜色，下面的背景也换了。</p><p><img src="https://s2.ax1x.com/2019/11/12/M3JoEn.md.png" alt="biye1"></p><p><img src="https://s2.ax1x.com/2019/11/12/M3Jju4.md.png" alt="biye2"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/08/QaPYnS.md.png&quot; alt=&quot;PS9_1&quot;&gt; &lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://www.shieber.cn/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="PS" scheme="http://www.shieber.cn/tags/PS/"/>
    
  </entry>
  
  <entry>
    <title>每日PS技巧8：照片调色</title>
    <link href="http://www.shieber.cn/title/84b0c2df/"/>
    <id>http://www.shieber.cn/title/84b0c2df/</id>
    <published>2019-12-07T05:06:11.000Z</published>
    <updated>2019-12-08T06:23:09.759Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/07/QtYtQU.md.png" alt="PS8_1"> </p><a id="more"></a><p>今天学习图像调节技术，拿着一张图片，如何判断其质量呢？我们可以通过色阶，饱和度，对比度来看看。</p><h2 id="今日技巧-图像调色"><a href="#今日技巧-图像调色" class="headerlink" title="今日技巧 [图像调色]"></a>今日技巧 [图像调色]</h2><p>主要步骤：  </p><p>1) 调节图像色阶<br>2) 调节图像饱和度<br>3) 调节图像色彩平衡<br>4) 调节图像对比度</p><p>首先导入图片素材，通过右下角工具栏选择创建色阶调整图层。然后，可以看到这幅图各个段的颜色都有，还算均匀，可以不用调，但其他图片可就说不准了。</p><p><img src="https://s2.ax1x.com/2019/12/07/Qttup6.md.png" alt="PS8_2"></p><p>接着创建饱和度调整图层，追加30左右的饱和度，这时，人脸就温和多了，环境也更鲜艳了。拿到人像，一定追加饱和度，尤其是女性图片，追加过后，女性会显出一种饱满，健康的色彩，要漂亮得多。很多女生拍了照，也不会调整，最后对照片还是不满意。</p><p><img src="https://s2.ax1x.com/2019/12/07/QttQXD.md.png" alt="PS8_3"> </p><p>接着创建色彩平衡度调整图层，选择对阴影部分调节，青色加一点，绿色加一点，蓝色加一点。这是对环境进行处理，让冷色调更冷，暖色调更暖。可以和上面对照看，应该很明显了。</p><p><img src="https://s2.ax1x.com/2019/12/07/Qtt87d.md.png" alt="PS8_4"></p><p>接着作锐化，让物体轮廓更清晰。先复制原图层一份，在复制图层上，通过滤镜&gt;其他&gt;高反差保留，设置半径为1。如果仔细看，灰色图层上有人物轮廓。</p><p><img src="https://s2.ax1x.com/2019/12/07/QttXjO.md.png" alt="PS8_5"> </p><p>然后设置这个灰色图层模式为柔光，得到下面的最终图像。</p><p><img src="https://s2.ax1x.com/2019/12/07/QtNbZQ.md.png" alt="PS8_6"></p><p>当然，你说，看起来好像也没啥变化呀？对比看，才行。附上原图和效果图，自己用肉眼看看，就知道差距了。</p><p>原图来源：2018.06.19 10:07:49，毕业班级照片。</p><p><img src="https://s2.ax1x.com/2019/12/07/QtNjGq.md.png" alt="PS8_7"></p><p><img src="https://s2.ax1x.com/2019/12/07/QtYtQU.md.png" alt="PS8_8"> </p><p>这能叫没区别吗？你可以把这一套操作保留成动作，然后批量对图片施加该动作，就能批量修图啦！毕业一年多了，现在我才翻出老照片，就处理了这一张，其他得等有时间再说吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/07/QtYtQU.md.png&quot; alt=&quot;PS8_1&quot;&gt; &lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://www.shieber.cn/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="PS" scheme="http://www.shieber.cn/tags/PS/"/>
    
  </entry>
  
  <entry>
    <title>携号转网的套路</title>
    <link href="http://www.shieber.cn/title/652f364c/"/>
    <id>http://www.shieber.cn/title/652f364c/</id>
    <published>2019-12-07T02:37:48.000Z</published>
    <updated>2019-12-07T03:28:54.532Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/07/QtmWZT.md.png" alt="xz"> </p><a id="more"></a><p>携号转网，也称作号码携带、移机不改号，也就是说一家电信运营商的用户，无需改变自己的手机号码，就能转而成为另一家电信运营商的用户，并享受其提供的各种服务。2019年8月5日，携号转网进入落地阶段。11月10日，三大运营商携号转网服务正式进入试运行阶段。11月11日，工信部印发《携号转网服务管理规定》，规定自2019年12月1日起施行。</p><p>各大运营商为拦截用户，防止客户流失使出了各种花招，我本人今天就遇到了。鄙人自2012年1月12日开了尾号为3030的手机号，到今天(2010-12-07)已经2886天了，这近三千天，没有享受到什么优惠，真的。近8年时间内，送过我几次流量，就几百兆，目前48元每月，就5G流量，还是去年才办的，超了就限速。这么多年就没有其他任何服务或者优惠是我享受过的，除此之外，10085经常打电话推销各种服务，让人生烦。</p><p>要办理携号转网需要查询自己是否有资格，发送CXXZ#姓名#身份证号到10086。要办理携号转网就不能欠费，不能绑定各种莫名其妙的服务。然而，我就是发现自己突然被绑定了莫名其妙的服务，而且该服务不要钱，但2020年12月31日才过期。这个服务在上个月4号，自动办理，没发短信给我，我只是恰好上网查询才知道有这么个东西，见下图第二行，也请自己查查是不是也享受了这神秘的高级免费服务，或者其他更高级的服务。</p><p><img src="https://s2.ax1x.com/2019/12/07/QtefCd.md.png" alt="xiehao1"></p><p>所以，我今早老老实实地打电话叫客服给取消了。客服反复说，这是不要钱的。我当然知道不要钱，但是这个破服务也阻止了携号转网的办理，不要钱的就是最贵的，把上面的图和下面的图对照看，就知道这么个把戏了。</p><p><img src="https://s2.ax1x.com/2019/12/07/Qtm3PH.md.png" alt="xiehao2"> </p><p>我哪里那么幸运，过去几年，优惠什么的都没享受，这65分钟通话就那么好心，自己找上来了？我不信我运气这么好。打了电话，本就是取消个服务，然而移动的短信回馈过来说是什么投诉，我就没投诉任何人和服务，就是要取消掉不要钱的服务。可见，这个服务就是为了拦截用户携号转网，故意增加的，而且提前一个月就给你开好了，所以取消服务成了投诉，然后还要什么专员来处理。写这个博客也花了一段时间了，到现在，该服务还未取消，你说怪不怪。</p><p><img src="https://s2.ax1x.com/2019/12/07/QtmJxI.md.jpg" alt="xiehao3"> </p><p>下个月12号就八年了，就这待遇，真心寒。看来真是老用户该死，新用户万岁。要转的，就大胆转吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/07/QtmWZT.md.png&quot; alt=&quot;xz&quot;&gt; &lt;/p&gt;
    
    </summary>
    
      <category term="中国移动" scheme="http://www.shieber.cn/categories/%E4%B8%AD%E5%9B%BD%E7%A7%BB%E5%8A%A8/"/>
    
    
      <category term="Service" scheme="http://www.shieber.cn/tags/Service/"/>
    
  </entry>
  
  <entry>
    <title>利用Scrapy爬取Bing壁纸</title>
    <link href="http://www.shieber.cn/title/67e0d7bf/"/>
    <id>http://www.shieber.cn/title/67e0d7bf/</id>
    <published>2019-12-06T02:55:56.000Z</published>
    <updated>2019-12-29T11:22:22.061Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/06/QJmRsK.md.png" alt="bing_1"></p><a id="more"></a><p>今天学习一下利用scrapy爬取bing的壁纸，bing的壁纸确实好看，我认为这是微软最值得赞赏的地方，反而他的windows我还不那么喜欢。</p><p>首先打开某程序员做的bing壁纸保存网站<a href="https://bing.ioliu.cn/" target="_blank" rel="noopener">Bing</a>，可以看到和封面一样多的图片，从图中可以看到有标题，日期，等。</p><p>现在设定我们需要的数据段：</p><table><thead><tr><th align="center">序号</th><th align="center">数据名</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">图片url</td></tr><tr><td align="center">1</td><td align="center">下一页url</td></tr><tr><td align="center">2</td><td align="center">图片日期</td></tr></tbody></table><p>我觉得标题太长，就用日期作标题吧。接着使用web开发者工具，调出控制台查看原代码。</p><p>1.首先定位图片位置，将鼠标放在第一副图上，可以看到其中文标题，接着在查看器中搜索这个标题，找到源码出处。如下图。可以看到图片包裹在div class=”item”的div class=”description”中。</p><p><img src="https://s2.ax1x.com/2019/12/06/QJnnY9.md.png" alt="bing_2"> </p><p>所有图片则属于不同的item。</p><p><img src="https://s2.ax1x.com/2019/12/06/QJnGwD.md.png" alt="bing_4"></p><p>同时可以看到，图片img链接在div class=”card progressive”中，且src属性中保存着图片实际地址。</p><p><img src="https://s2.ax1x.com/2019/12/06/QJnly6.md.png" alt="bing_3"></p><p>接着拉到底部，可以看到有114页图片，下一页的链接就在div class=”page”中。</p><p><img src="https://s2.ax1x.com/2019/12/06/QJnUfA.md.png" alt="bing_5"> </p><p>最后鼠标放到图片上，查看日期，比如2019-12-06，接着搜索该日期位置，发现在div class=”calendar”中，如此所有数据查找完毕。</p><p><img src="https://s2.ax1x.com/2019/12/06/QJnrm8.md.png" alt="bing_6"></p><p>好，所有数据得到了，现在利用scrapy创建项目，编写对应的spider和pipeline，最后设置好图片保存位置就可以爬取图片了。</p><p>scrapy startproject bing<br>scrapy genspider picture bing.ioliu.cn<br>mv picture.py bing/bing/spiders/<br>接着查看项目结构如下<br>$ tree bing/  </p><p><img src="https://s2.ax1x.com/2019/12/06/QJK4dU.md.png" alt="bing_7"> </p><p>现在在item.py中定义需要获取的信息字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class ImageItem(scrapy.Item):</span><br><span class="line">    titles = scrapy.Field()</span><br><span class="line">    images = scrapy.Field()</span><br><span class="line">    image_urls = scrapy.Field()</span><br></pre></td></tr></table></figure><p>然后到picture中实现爬取逻辑，上面的分析都给出了url地址，所以代码很简单。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import sys</span><br><span class="line">import scrapy</span><br><span class="line">from bing.items import ImageItem</span><br><span class="line"></span><br><span class="line">class WallpaperSpiderSpider(scrapy.Spider):</span><br><span class="line">    name = &apos;wallpaper&apos;</span><br><span class="line">    allowed_domains = [&apos;bing.ioliu.cn&apos;]</span><br><span class="line">    start_urls = [&apos;https://bing.ioliu.cn&apos;]</span><br><span class="line"></span><br><span class="line">    i = 0</span><br><span class="line">    item = ImageItem()</span><br><span class="line">    def parse(self, response):</span><br><span class="line">        #第一步：获取图片标题(这里是指日期)和图片url</span><br><span class="line">        sel = response.xpath(&apos;//div[@class=&quot;description&quot;]&apos;)</span><br><span class="line">        ttls= sel.xpath(&apos;.//p[@class=&quot;calendar&quot;]/em/text()&apos;).extract()</span><br><span class="line">        self.item[&apos;titles&apos;] = ttls</span><br><span class="line"></span><br><span class="line">        lks = response.xpath(&apos;//div[@class=&quot;item&quot;]/div/img/@src&apos;).extract()</span><br><span class="line">        self.item[&apos;image_urls&apos;] = lks</span><br><span class="line">        yield self.item</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        self.i += 1</span><br><span class="line">        if self.i &gt; 114: #114页，到了就停止下载，不然会反复下载最后一页图片。</span><br><span class="line">            sys.exit(0)</span><br><span class="line"></span><br><span class="line">        #step 2: 提取下一页url</span><br><span class="line">        href = response.xpath(&apos;//div[@class=&quot;page&quot;]/a[2]/@href&apos;).extract_first()</span><br><span class="line">        next_url = response.urljoin(href)</span><br><span class="line">        if next_url:</span><br><span class="line">            yield scrapy.Request(next_url, callback=self.parse)</span><br></pre></td></tr></table></figure><p>接着就是到pipelines.py中修改，实现自定义图片标题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">from os.path import basename</span><br><span class="line">from scrapy.http import Request </span><br><span class="line">from scrapy.pipelines.images import ImagesPipeline</span><br><span class="line"></span><br><span class="line">class RenameImagesPipeline(ImagesPipeline):</span><br><span class="line">    def get_media_requests(self, item, info):</span><br><span class="line">        for img_url in item[&apos;image_urls&apos;]:</span><br><span class="line">            img_type = basename(img_url).split(&apos;.&apos;)[1]  #jpeg, png</span><br><span class="line">            img_idex = item[&apos;image_urls&apos;].index(img_url)</span><br><span class="line">            img_name = item[&apos;titles&apos;][img_idex]         #2019-12-06</span><br><span class="line"></span><br><span class="line">#下面代码实现的图片名称是BingWallpaper-2019-12-06.jpe这种格式。</span><br><span class="line">            img_name = &apos;&apos;.join([&apos;BingWallpaper-&apos;,img_name,&apos;.&apos;,img_type])</span><br><span class="line">            yield Request(img_url, meta=&#123;&apos;img_name&apos;: img_name&#125;)</span><br><span class="line"></span><br><span class="line">    def file_path(self, request, response=None, info=None):</span><br><span class="line">        return request.meta[&apos;img_name&apos;]</span><br></pre></td></tr></table></figure><p>然后将RenameImagesPipeline注册到setting中，并设置好图片保存地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">    &apos;bing.pipelines.RenameImagesPipeline&apos;: 300,</span><br><span class="line">&#125;</span><br><span class="line">IMAGES_STORE=&apos;/home/username/bingpic/&apos; #自己设置就好</span><br><span class="line">IMAGES_MIN_WIDTH=110                   #最小图片尺寸，过小就不下载。</span><br><span class="line">IMAGES_MIN_HEIGHT=110</span><br></pre></td></tr></table></figure><p>现在回到主bing/目录下，使用scrapy crawl wallpaer就可以了。然后到你的图片保留目录下就可以看到下载的图片了。<br>我的下载了1000多张，时间越晚，图片越多。Have fun!</p><p><img src="https://s2.ax1x.com/2019/12/06/QJlHzj.md.png" alt="bing_8"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/06/QJmRsK.md.png&quot; alt=&quot;bing_1&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="爬虫" scheme="http://www.shieber.cn/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="IT" scheme="http://www.shieber.cn/tags/IT/"/>
    
      <category term="Python" scheme="http://www.shieber.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>每日PS技巧7：替换背景</title>
    <link href="http://www.shieber.cn/title/ca0a4a5b/"/>
    <id>http://www.shieber.cn/title/ca0a4a5b/</id>
    <published>2019-12-06T02:17:45.000Z</published>
    <updated>2019-12-06T04:18:02.997Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/06/QJAcFI.md.png" alt="PS7_1"></p><a id="more"></a><p>今天学习替换背景图层，就是给原图换个环境，实现空间大挪移。</p><h2 id="今日技巧-背景替换"><a href="#今日技巧-背景替换" class="headerlink" title="今日技巧 [背景替换]"></a>今日技巧 [背景替换]</h2><p>主要步骤：  </p><p>1) 调整图片大小<br>2) 利用选区工具选择要替换的部分<br>3) 抠除选中部分背景，删除<br>4) 加入新背景图，调整大小以适应<br>5) 修复图中干扰背景<br>6) 合并保存  </p><p>首先导入图片素材，选择剪裁工具，调整图片宽度，去掉水印什么的。接着用自由选择工具选中要删除的背景，如下图蚂蚁线所标识的。</p><p><img src="https://s2.ax1x.com/2019/12/06/QJATTs.md.png" alt="PS7_2"></p><p>按删除键，去掉选区内容，得到去背景的初步素材。</p><p><img src="https://s2.ax1x.com/2019/12/06/QJEGjS.md.png" alt="PS7_3"></p><p>此时，发现某老师的腿还漏在里面，所有要先摸出这些干扰背景。使用图章，或者图像修复工具都可以把腿融合到背景，但是，跑道的线不能去掉，不但不能去掉，还得恢复出来。这时可以利用滤镜&gt;消失点工具，建立工作区，使用Alt键，选中一段干净的跑道线，软后覆盖掉腿部分，这样跑道就恢复了。</p><p><img src="https://s2.ax1x.com/2019/12/06/QJEOUA.md.png" alt="PS7_4"> </p><p>这时，加入新的背景图层，积极调整以适应原图，合并图层就是最终结果了。</p><p><img src="https://s2.ax1x.com/2019/12/06/QJVCDg.md.png" alt="PS7_5"></p><p>当然，这时还可以再虚化跑道边缘，给跑道撒上沙子什么的，这样就能得到更好的效果。不过，这个教程目的已经达到了，就到这儿吧。</p><p>最后再附上原图和效果图。</p><p>原图来源：2016年04月21日，学院公布图。  </p><p><img src="https://s2.ax1x.com/2019/12/06/QJVHzV.png" alt="PS7_7"></p><p>原图来源：2019年12月06日，百度图片。<br><img src="https://s2.ax1x.com/2019/12/06/QJZFsO.md.png" alt="PS7_8"> </p><p><img src="https://s2.ax1x.com/2019/12/06/QJZEee.md.png" alt="PS7_9"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/06/QJAcFI.md.png&quot; alt=&quot;PS7_1&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://www.shieber.cn/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="PS" scheme="http://www.shieber.cn/tags/PS/"/>
    
  </entry>
  
  <entry>
    <title>个人数据中心和视频床</title>
    <link href="http://www.shieber.cn/title/b3eac57b/"/>
    <id>http://www.shieber.cn/title/b3eac57b/</id>
    <published>2019-12-05T14:39:56.000Z</published>
    <updated>2019-12-05T16:24:45.569Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/06/QGolrQ.md.png" alt="pdata"></p><a id="more"></a><p>最近写了些文章，你可以看到，我的文章都是一样的模式：开局(封面)一张图，内容不靠编，哈，哈！图片我托管到免费的图床上了，视频是直接用B站的外链。目前使用没什么问题，而且我一分钱没花，用起来确实爽。</p><p>现在考虑一个情况，那就是那天图床没了，B站视频没了怎么办？你说，怎么可能呢？B站视频一直都在。是吗？美国封锁华为的时候不也就突然就来了吗？内涵段子关停是什么时候，360云盘关停又是什么时候？谁知道哪天B站就倒闭了，图床也没了。美国的封锁给我触动还是比较大的，现在我作什么都要备份，而且备份好几份。系统文件备了四份，代码备了三份，主要怕哪天github也用不了了。当然，老婆也要多备…，呃，这个就算了，没有老婆就老实找。</p><p>所以，我们来思考一个问题：针对视频能做出视频床吗？或者有公司在做吗？搜索很久，没发现有，都说这个技术难度太大。当然，视频床不同于图床。图床就是几张图，加速访问就好。可是视频就不行了，视频是一段，很长，量大，太占用带宽。</p><p>然而，随着5G的到来，全球普通用户使用高效的云服务是必然趋势，未来我们身上的智能硬件也可能用云管理，智能汽车，智能家具，智能工厂，智慧政府，智能医疗。所以，为什么视频就不能做呢？主要还是技术和利益吧。利益不够大，所以做不起来。我倒是希望5G时代有人能把视频床做起来，服务大众，造福人类吧。技术不就是为人服务的吗?</p><p>当然，反对方提出的问题肯定有很多。比如：带宽，存储仓库如何建设，如何避免冗余，使用费用，加速模式如何实现等等问题。然而，我记得阿里云王坚做云服务的时候，大家说他是骗子，把他骂哭了，只有马云支持他，说是给他100亿由他搞，不设KPI，遂今天阿里巴巴云服务如此成功，双十一能卖那么多东西。所以，为什么视频床就做不起来？腾讯，爱奇艺，优酷都能存储大量视频，为何私人就不能？我们人看问题往往是用过去的技术以延伸到未来，所以时代技术必然限制我们的思考能力，进而反对多于支持。</p><p>考虑到时代发展到今天这一步，我今天提出新的网络建设概念：个人数据中心。我们有人类基因组大数据中心，有动植物库，有身份证管理中心，有银行结算中心。为何地球百姓就不能有自己唯一的数据中心呢？就像身份证每人一张，未来物联网时代，每个人拥有一个数据中心，这个中心可以交给相应的企业管理。这样我们就又能创立出巨无霸公司了。给数据中心设立权限和信用荣誉机制，个人必须维护自己的数据中心，利用区块链把个人信用和他的消费及行为数据链接起来，这样就不能作假，一旦作假，个人信用丢失，银行，政府可以制裁他，直到他弥补错误。同时，结合个人数据中心，推出新的消费服务，大量可以线上处理的订单，流程，签约都利用个人数据中心实现自动化。</p><p>4G时代短视频爆发，人性进一步发扬，但视频保留在大企业手中。5G时代说不得就要干掉这种模式，就像二维码干掉现金一样。未来的大企业可能就是为用户服务，成为服务视频，图像，文档的管理和维护公司。今天的百度云，坚果云未来未必不会进化为个人数据中心的建设者。个人数据中心需要保存每一个入网用户生产或合法购买的视频，图像，学习工作简历，生活材料(生活缴费，医疗教育费用凭证等等)。反正就是一个人一生的方方面面能数据化的内容都保留，人过世后，数据中心将存有对其的评价，他的遗嘱，他的资产和信用，著作，专利等等。</p><p>我现在开个脑洞吧，为个人数据中心设立些指标，以后再摸索。</p><table><thead><tr><th align="left">指标</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">访问</td><td align="left">人人间的数据访问开放权限，可修正</td></tr><tr><td align="left">消费</td><td align="left">通过该机制实现个人消费结算，可修正</td></tr><tr><td align="left">展示</td><td align="left">个人社交，产品，作品等展示，可修正</td></tr><tr><td align="left">信用</td><td align="left">分数制，根据消费和行为的区块链大数据计算得出，可修正</td></tr><tr><td align="left">安全</td><td align="left">整个数据中心的外层和内层各设置安全管理服务，防黑客</td></tr><tr><td align="left">综评</td><td align="left">统计个人生活维度内的得分，最后给出综合评分，可修正</td></tr></tbody></table><p>今天的人看自己微博有几个赞，未来我们完全可以让他们更加在意自己的数据中心得分。数据中心可以展示他们自己的作品，视频，文字，图像，一样可以实现社交，颠覆微信的社交模式。同时，利用信用机制结合消费权限，实现数据中心的结算功能。同样的，教育，医疗，家庭消费都可以搬上去。</p><p>是吧，这要看人类怎么走，我心中的未来世界的一部分就是这样了，你认为呢？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/06/QGolrQ.md.png&quot; alt=&quot;pdata&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="云服务" scheme="http://www.shieber.cn/categories/%E4%BA%91%E6%9C%8D%E5%8A%A1/"/>
    
    
      <category term="video" scheme="http://www.shieber.cn/tags/video/"/>
    
  </entry>
  
  <entry>
    <title>Windows下优秀软件和工具推荐</title>
    <link href="http://www.shieber.cn/title/12c389c6/"/>
    <id>http://www.shieber.cn/title/12c389c6/</id>
    <published>2019-12-05T11:39:04.000Z</published>
    <updated>2019-12-06T12:27:27.589Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2019/12/05/QGGjzQ.md.png" alt="win_soft"></p><a id="more"></a><p>你会用windows系统吗？大部分人看到这么个问题可能会大笑：我怎么不会？你不看我每天用它完成了多少工作。然而，大部分人只是会点鼠标而已，至于系统优化，系统架构大部分人，不，是绝大部分人都不懂，所以他们的电脑都是垃圾，界面其丑无比，桌面文件图标一堆，什么xx工作报告.txt，123.txt，20xx文档.docx一堆，我大学本科辅导员就是这么干的，我甚至当面说过他，也不知他改了没？混乱的桌面，过不了一周他们自己也晕了，而且使用Windows自带的工具效率实在太低了。还有，不注意网络使用，黑客们经常扫描到弱鸡电脑，直接攻破并利用。至于什么360流氓就不用说了。</p><p>视频：当你想卸载360的时候(弹幕可关闭)。</p><iframe src="https://player.bilibili.com/player.html?aid=76592877&cid=131013977&page=1" width="270" height="250" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe><p>下面介绍些Windows下的好用软件，提升大家的效率。当然，我本身不怎么用windows了，除了用PS之外，我很少用Windows。大部分时候，我还是使用Linux系统，尤其是编程，黑客技术只能在Linux下操作才方便。下面的软件分普通用户和高级用户，各位按需下载使用就好，这些软件基本没有广告，不是流氓软件，很多我以前使用过，真能帮助你高效学习，工作，生活。普通用户指：安装完软件就能用，高级用户指安装完还要学习很多操作，较为困难，有些的困难指数和学习编程一样的难。</p><h2 id="软件列表"><a href="#软件列表" class="headerlink" title="软件列表"></a>软件列表</h2><table><thead><tr><th align="center">适合用户</th><th align="left">名称</th></tr></thead><tbody><tr><td align="center">普通用户</td><td align="left">firefox(浏览器)</td></tr><tr><td align="center">普通用户</td><td align="left">chrome(浏览器)</td></tr><tr><td align="center">普通用户</td><td align="left">everything(文件搜索)</td></tr><tr><td align="center">普通用户</td><td align="left">notepad++(代码编写)</td></tr><tr><td align="center">普通用户</td><td align="left">fences(桌面管理)</td></tr><tr><td align="center">普通用户</td><td align="left">f.fux(只能屏保)</td></tr><tr><td align="center">普通用户</td><td align="left">Evernote(笔记速记)</td></tr><tr><td align="center">普通用户</td><td align="left">CCleaner(软件卸载)</td></tr><tr><td align="center">普通用户</td><td align="left">LICEcap(快速截图)</td></tr><tr><td align="center">普通用户</td><td align="left">IDM(文件下载)</td></tr><tr><td align="center">普通用户</td><td align="left">7-zip(解压软件)</td></tr><tr><td align="center">普通用户</td><td align="left">unlocker(解锁资源)</td></tr><tr><td align="center">普通用户</td><td align="left">seer(预览文件)</td></tr><tr><td align="center">普通用户</td><td align="left">Xmind(思维导图)</td></tr><tr><td align="center">高级用户</td><td align="left">cetex(pdf文档制作)</td></tr><tr><td align="center">高级用户</td><td align="left">Listary(文件搜索)</td></tr><tr><td align="center">高级用户</td><td align="left">pycharm(软件开发)</td></tr><tr><td align="center">高级用户</td><td align="left">anaconda(科学计算)</td></tr><tr><td align="center">高级用户</td><td align="left">LastPass(密码管理)</td></tr><tr><td align="center">高级用户</td><td align="left">CPU-Z(系统资源查看)</td></tr><tr><td align="center">高级用户</td><td align="left">PS CC(图像处理)</td></tr><tr><td align="center">高级用户</td><td align="left">字由(字体管理)</td></tr><tr><td align="center">高级用户</td><td align="left">Steam(游戏平台)</td></tr><tr><td align="center">高级用户</td><td align="left">cmder(模仿Linux命令行)</td></tr><tr><td align="center">高级用户</td><td align="left">Typora(Markdown文档)</td></tr><tr><td align="center">高级用户</td><td align="left">FFmpeg(音视频转换)</td></tr><tr><td align="center">高级用户</td><td align="left">Calibre(电子书处理)</td></tr><tr><td align="center">高级用户</td><td align="left">Sumatra(PDF阅读)</td></tr><tr><td align="center">高级用户</td><td align="left">TeamViewer(远程控制)</td></tr><tr><td align="center">高级用户</td><td align="left">rufus(系统启动盘制作)</td></tr><tr><td align="center">高级用户</td><td align="left">AOMEI分区助手(系统分区和迁移)</td></tr></tbody></table><h2 id="详细介绍-点击可进入官网下载"><a href="#详细介绍-点击可进入官网下载" class="headerlink" title="详细介绍(点击可进入官网下载)"></a>详细介绍(点击可进入官网下载)</h2><p><a href="https://www.firefox.com.cn" target="_blank" rel="noopener">firefox</a> 是一款优秀的浏览器，互联网诞生过程中，firefox的母公司制定了许多网络的协议和标准，帮助了互联网的发展。Firefox不搜集用户信息，防止恶意网站攻击。其他什么百度，360，猎豹等国内浏览器都是要搜集你信息，比较垃圾和流氓，大家可以卸载了。你问我用什么浏览器，我就用这款，主要是程序员和很多黑客用它，而且也好用。还有，最好把windows自带的Edge浏览器卸载掉，如何卸载可以百度或邮件我<a href="mailto:Shieber@aliyun.com" target="_blank" rel="noopener">Shieber@aliyun.com</a>，我发软件给你。Edge的作用还是有的，就是用来下载其他更优秀的浏览器，然后它的使命就完了。还有不要用百度一下，用<a href="https://cn.bing.com/" target="_blank" rel="noopener">Bing</a>搜索就好了，百度全是广告和百家号内容，搜不到自己要的东西，而必应(Bing)就几乎没有广告，而且搜索出来的东西多半就是你要的。</p><p><a href="https://www.google.cn/chrome/index.html" target="_blank" rel="noopener">chrome</a> 谷歌的浏览器，效果好，和firefox有的一拼，但最近加入搜集用户信息功能，招致很多用户批评，然而它依然很强大，全球占有率第一。国内大部分浏览器都是借用的chrome或IE浏览器的引擎，然后包装个界面，就号称自主研发，实则是个流氓。强烈建议用户卸载所有国产浏览器，使用这两款中的任意一款。</p><p><a href="https://www.voidtools.com/zh-cn" target="_blank" rel="noopener">everything</a> 找不到文件？那就用这个搜索，只要输入名字，就给你找出文件在电脑的哪个地方，全盘搜索。  </p><p><a href="http://www.listary.com" target="_blank" rel="noopener">Listary</a> 上面的everything很优秀，这个功能比它还多，包括网络搜索功能，可以打开浏览器搜索，操作比较多，跟着教程学习一下就好，其实二者选一就可。</p><p><a href="https://notepad-plus-plus.org" target="_blank" rel="noopener">notepad++</a> 想写文档，写代码，又不想装复杂的开发环境，那用notepad++就对了，它可以打开所有编程语言类文件。  </p><p><a href="https://www.stardock.com" target="_blank" rel="noopener">fences</a> 桌面图标太乱？用这个软件，把图标收集起来，方便管理和桌面优化。  </p><p><a href="https://evernote.com" target="_blank" rel="noopener">Evernote</a> 有好点子，有学习笔记要作？用Evernote，快速作笔记，支持手写，一键保存，云同步。  </p><p><a href="https://www.piriform.com/ccleaner/download/standard" target="_blank" rel="noopener">CCleaner</a> 软件卸载有残留怎么办，用CCleaner，它能把软件彻底卸载干净，减少空间占用。请试试用来卸载你电脑上的流氓软件吧。</p><p><a href="https://www.cockos.com/licecap/" target="_blank" rel="noopener">LICEcap</a> 想把屏幕操作录制为gif动图就用它，方便快捷。  </p><p><a href="https://www.internetdownloadmanager.com" target="_blank" rel="noopener">IDM</a> 还在用迅雷下载文件？试试这个吧，这个更快，更好用。  </p><p><a href="http://7-zip.org/download.html" target="_blank" rel="noopener">7-zip</a> 把电脑里的什么2345，winrar解压软件全卸载掉吧，尤其2345还有广告，7-zip很小一个软件，支持解压几乎大部分你能用到的压缩文件，我在windows下也用这个。  </p><p><a href="https://unlocker.en.softonic.com" target="_blank" rel="noopener">unlocker</a> 删除文件时显示，文件已在资源管理器中打开，无法删除。这时unlocker就能解决这个问题，一键解除锁定状态，删除文件。</p><p><a href="www.1218.io">seer</a> 不想打开文件，又想看看里面是什么，用这个软件可以预览。</p><p><a href="http://stereopsis.com/flux" target="_blank" rel="noopener">f.fux</a> 让电脑随着太阳的位置自动调节屏幕色温，保护眼界，我以前也用这个。</p><p><a href="http://www.ctex.org/HomePage" target="_blank" rel="noopener">cetex</a> 想直接写PDF文件，用Latex系列软件均可，但是windows下用cetex入手就可。我本科毕业论文就是cetex用的，编出的公式和图片很精美，这是学习的回报。word写的文档太丑，不能自定义。该软件学习尤其困难，应该是本软件推荐列表最难的一个，我用了几年只能是勉强会用了，但是功能强大。博士发表论文几乎都是用tex写的，本科时的老师张传瑜写论文就被这个cetex的语法难倒，还专门请我去给他处理，当然，最后肯定是弄好啦。</p><p><a href="https://www.jetbrains.com/pycharm" target="_blank" rel="noopener">pycharm</a> 学习编程，Python，这是个利器，就是应对软件开发的，当然，普通用户就别试了，你没有软件开发的概念，给你一把杀龙刀，你也不会用。</p><p><a href="https://www.anaconda.com" target="_blank" rel="noopener">anaconda</a> 想做数据科学家，作计算任务，使用这款封装好python科学计算库的套件，开发提速。</p><p><a href="https://lastpass.com" target="_blank" rel="noopener">LastPass</a> QQ,微信，淘宝，支付宝，各种软件密码太多记不过来怎么办，用密码管理软件啊。</p><p><a href="https://www.52pojie.cn/thread-1047008-1-1.html" target="_blank" rel="noopener">PS CC</a> 学PS，艺术加工图片，请用PS CC，最新是2019版。</p><p><a href="http://www.hellofont.cn/" target="_blank" rel="noopener">字由</a> PS，AI，InDesign中想试试各种字体？用字由免费使用各种字体，不用自己在系统安装那么多字体了。</p><p><a href="http://store.steampowered.com/" target="_blank" rel="noopener">Steam</a> 玩游戏的都懂，就不说了。</p><p><a href="http://cmder.net" target="_blank" rel="noopener">cmder</a> 这个给Linux下习惯终端操作的程序员，运维等人员，cmder在Windows下实现和Linux下一样的终端，干掉Powershell。</p><p><a href="|https://www.typora.io">Typora</a> 发布博客，写文档，尤其是想写Markdown格式文档，请用这个，支持输入Latex数学公式，功能可以。</p><p><a href="http://www.xmind.net/" target="_blank" rel="noopener">Xmind</a> 看别人作的笔记和思维导图如此清晰，我们自己也可以制作自己的思维导图，把学习吃透，问题剖析透彻，就用Xmind作导图，支持导出PDF格式文件。</p><p><a href="https://ffmpeg.org/" target="_blank" rel="noopener">FFmpeg</a> 转换各种音视频，提取音频，分割合并视频，建议用户卸载格式工厂。</p><p><a href="http://calibre-ebook.com/" target="_blank" rel="noopener">Calibre</a> 电子书处理，可转换为TXT，PDF，MOBI，AZW3或是EPUB格式。</p><p>[Sumatra](PDF <a href="http://www.sumatrapdfreader.org" target="_blank" rel="noopener">http://www.sumatrapdfreader.org</a> ) 如果不需要编辑PDF文档，只是看看PDF，就用这个吧。占用就几十兆，而Adobe的Acrobat要占用几个G，这差距太大，还有什么福昕阅读器也没什么用，卸载就好。Sumatra还支持打开EPUB，MOBI，CHM，DjVu等格式文档，真是万金油，比Adobe产品方便多了。</p><p><a href="http://www.teamviewer.com/" target="_blank" rel="noopener">TeamViewer</a> 要远程控制电脑，用这个就可以。前端时间在内江试着控制成都的电脑，远程做了些运算并从网上爬取文件转换为PDF发到了我手机上，当时我在高速上，车速100，就用手机操作，全程网络没断，确实很方便。</p><p><a href="http://www.cpuid.com/softwares/cpu-z.html" target="_blank" rel="noopener">CPU-Z</a> 系统使用了多少CPU资源？用这个可以查看系统CPU等资源使用情况。</p><p><a href="http://www.disktool.cn/" target="_blank" rel="noopener">AOMEI分区助手</a> 想换固态硬盘，可是原有系统怎么办？用这个可以把原系统迁移到新硬盘上，不用重装系统。</p><p><a href="http://rufus.akeo.ie" target="_blank" rel="noopener">rufus</a> 想装系统？不管Windows还是Linux系统，rufus都搞得定。</p><p>还有很多优秀软件，此次给出的软件对于普通用户基本够了，实际很多人到死都用不到这么多软件，看个人爱好和需求吧。一些高端一点的软件，使用可能较为困难，多适应。Office我就不列了，大家都有，电脑上也少不了，当然，也可能是WPS，反正都可以，支持国产也很好。最后，希望大家高效使用电脑，别去装垃圾流氓软件，尤其安全软件，只要默认使用windows自带的defender就好，其实很多安全软件就是最不安全的，它权限高，所以无限搜集你信息，谁知道你的裸照是不是传到别人数据库咯？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/05/QGGjzQ.md.png&quot; alt=&quot;win_soft&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="http://www.shieber.cn/categories/Windows/"/>
    
    
      <category term="tools" scheme="http://www.shieber.cn/tags/tools/"/>
    
  </entry>
  
</feed>
